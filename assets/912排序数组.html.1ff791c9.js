import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_1.77524566.png",e="/assets/img.ab498c15.png",o="/assets/img_2.9410a7ae.png",c="/assets/img_3.88cebfc8.png";const l={},i=p('<h1 id="_912-\u6392\u5E8F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_912-\u6392\u5E8F\u6570\u7EC4" aria-hidden="true">#</a> \u{1F315} \u{1F315} \u{1F315} 912. \u6392\u5E8F\u6570\u7EC4</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F315} \u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_1.png"></p><hr><h3 id="\u89E3\u6CD5-1-\u5FEB\u6392" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-\u5FEB\u6392" aria-hidden="true">#</a> \u89E3\u6CD5 1 - \u5FEB\u6392</h3><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A <ul><li>best = O(nlog n)</li><li>avg = O(nlog n)</li><li>worst = O(n^2) [\u5B8C\u5168\u9006\u5E8F]</li></ul></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 <ul><li>O(log n) [\u5806\u6808\u7A7A\u95F4\u8C03\u7528]</li></ul></li><li>\u4E0D\u7A33\u5B9A [\u82E5\u6570\u7EC4\u4E2D\u4E24\u4E2A\u5143\u7D20\u76F8\u7B49\uFF0C\u7ECF\u8FC7\u6392\u5E8F\u540E\uFF0C\u8FD9\u4E24\u4E2A\u5143\u7D20\u76F8\u5BF9\u987A\u5E8F\u53EF\u80FD\u53D1\u751F\u6539\u53D8]</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">sortArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF:</span>
        <span class="token comment">// method 1 : \u5FEB\u6392</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// left &lt; right</span>
        <span class="token comment">// \u4EE5\u5DE6\u7AEF\u70B9\u7684\u503C\u4F5C\u4E3A\u57FA\u51C6\u70B9</span>
        <span class="token comment">// \u6BD4\u5B83\u5C0F\u7684\u90FD\u5728\u5DE6\u8FB9\uFF0C\u6BD4\u5B83\u5927\u7684\u90FD\u5728\u53F3\u8FB9</span>
        <span class="token keyword">int</span> moniotr <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53CD\u65B9\u5411\uFF0C\u4ECE \u53F3 =&gt; \u5DE6 \u627E\u6BD4\u57FA\u51C6\u503C\u5C0F\u7684\u6570</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> moniotr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                j <span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4ECE \u5DE6 =&gt; \u53F3 \u627E\u6BD4\u57FA\u51C6\u503C\u5927\u7684\u6570</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> moniotr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4EA4\u6362</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// i == j</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9012\u5F52</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> left<span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u5F52\u5E76\u6392\u5E8F</h3><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A <ul><li>best = O(nlog n)</li><li>avg = O(nlog n) [\u6BCF\u4E00\u5C42\u590D\u6742\u5EA6\u5747\u4E3A O(n) * \u603B\u5C42\u6570 log n]</li><li>worst = O(nlog n)</li></ul></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 <ul><li>O(n)</li></ul></li><li>\u4E0D\u7A33\u5B9A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">sortArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// method 2 - \u5F52\u5E76\u6392\u5E8F</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token function">divide</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5206\u6CBB</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// left &lt; right</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">divide</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">divide</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5408\u5E76</span>
        <span class="token function">merge</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5408\u5E76</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6682\u5B58\u6392\u5E8F\u597D\u7684\u6570\u7EC4</span>
        <span class="token comment">// \u53CC\u6307\u9488\u6CD5\u8FDB\u884C\u5408\u5E76</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span> <span class="token comment">// \u5DE6\u6570\u7EC4\u9996\u5143\u7D20\u4E0B\u6807</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u53F3\u6570\u7EC4\u9996\u5143\u7D20\u4E0B\u6807</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// res \u5F53\u524D\u4E0B\u6807</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                index <span class="token operator">++</span><span class="token punctuation">;</span>
                i <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                index <span class="token operator">++</span><span class="token punctuation">;</span>
                j <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD\u662F\u5426\u8FD8\u6709\u67D0\u4FA7\u6570\u7EC4\u6CA1\u6709\u6DFB\u52A0\u5B8C</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            index <span class="token operator">++</span><span class="token punctuation">;</span>
            i <span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            index <span class="token operator">++</span><span class="token punctuation">;</span>
            j <span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> left<span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> m <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">[</span>m <span class="token operator">-</span> left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+o+`" alt="img_2.png"></p><hr><h3 id="\u89E3\u6CD5-3-\u5806\u6392-\u5927\u6839\u5806" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-3-\u5806\u6392-\u5927\u6839\u5806" aria-hidden="true">#</a> \u89E3\u6CD5 3 - \u5806\u6392\uFF08\u5927\u6839\u5806\uFF09</h3><p>\u5927\u6839\u5806 \uFF1A \u5806\u9876\u5143\u7D20 &gt;= \u5806\u91CC\u5176\u4ED6\u5143\u7D20</p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A <ul><li>best = O(nlog n)</li><li>avg = O(nlog n) [\u6BCF\u4E2A\u5143\u7D20 \u5EFA\u5806 / \u5F39\u51FA \u590D\u6742\u5EA6\u5747\u4E3A O(log n) * \u603B\u5143\u7D20\u6570 n]</li><li>worst = O(nlog n)</li></ul></li><li>\u7A7A\u95F4\u590D\u6742\u5EA6 <ul><li>O(1) [\u539F\u6570\u7EC4\u539F\u5730\u4EA4\u6362]</li></ul></li><li>\u4E0D\u7A33\u5B9A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">sortArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// method 3 :\u5EFA\u7ACB\u5927\u6839\u5806</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u5EFA\u7ACB\u5927\u6839\u5806</span>
        <span class="token function">build</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F9D\u6B21\u5C06\u5927\u6839\u5806\u5806\u9876\u5143\u7D20\u653E\u5230\u6570\u7EC4\u672B\u5C3E</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53D6\u8D70\u5806\u9876\u5143\u7D20\u540E\u91CD\u65B0\u8C03\u6574\uFF0C\u4F7F\u5F97\u5269\u4E0B\u5143\u7D20\u4ECD\u7EC4\u6210\u4E00\u4E2A\u5927\u6839\u5806</span>
            <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E0B\u6807\u4E3A i\uFF0C\u88AB\u5806\u9876\u5143\u7D20\u53D6\u4EE3\u540E\uFF0C\u4E0D\u8BA1\u5165 endIndex \u8303\u56F4</span>
            <span class="token comment">// \u6240\u4EE5 endIndex = i - 1</span>
            <span class="token function">resize</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u6240\u6709\u5143\u7D20\uFF0C\u4E00\u4E2A\u4E2A\u6DFB\u52A0\u5230\u5DF2\u7ECF\u6784\u5EFA\u597D\u7684\u5927\u6839\u5806\u4E2D\uFF0C\u5F62\u6210\u66F4\u5927\u7684\u5927\u6839\u5806</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> curIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">int</span> curVal <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u8981\u52A0\u5165\u5927\u6839\u5806\u7684\u5143\u7D20</span>
            <span class="token keyword">int</span> parentIndex <span class="token operator">=</span> <span class="token punctuation">(</span>curIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u7236\u8282\u70B9\u7684\u4E0B\u6807</span>
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981\u4E0A\u6D6E</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>curIndex <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> parentIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> curVal <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>parentIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> curIndex<span class="token punctuation">,</span> parentIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                curIndex <span class="token operator">=</span> parentIndex<span class="token punctuation">;</span>
                curVal <span class="token operator">=</span> nums<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
                parentIndex <span class="token operator">=</span> <span class="token punctuation">(</span>curIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u65B0\u7684\u7236\u8282\u70B9\u4E0B\u6807</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> curIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u5F53\u524D\u5143\u7D20\u6240\u5728\u4F4D\u7F6E\uFF0C\u662F\u5426\u4ECD\u662F\u4E00\u4E2A\u5927\u6839\u5806</span>
        <span class="token comment">// \u82E5\u4E0D\u662F\uFF0C\u5219\u9700\u8981\u8FDB\u884C\u4E0B\u6C89</span>
        <span class="token comment">// \u8FB9\u754C\u503C endIndex</span>
        <span class="token keyword">int</span> leftIndex <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5DE6\u5B50\u8282\u70B9\u4E0B\u6807</span>
        <span class="token keyword">int</span> rightIndex <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> curIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u5224\u65AD\u662F\u5426\u8FD8\u6709\u5B50\u8282\u70B9</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>leftIndex <span class="token operator">&gt;</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// leftIndex &lt;= endIndex =&gt; \u81F3\u5C11\u8FD8\u6709\u4E00\u4E2A\u5DE6\u5B69\u5B50\u9700\u8981\u5224\u65AD\u6BD4\u8F83</span>
        <span class="token comment">// \u7531\u4E8E\u5927\u6839\u5806\u4EFB\u4F55\u4E00\u4E2A\u8282\u70B9\u4F5C\u4E3A\u5806\u9876\uFF0C\u5747\u6BD4\u5176\u4ED6\u5143\u7D20\u5927\uFF0C</span>
        <span class="token comment">// \u56E0\u6B64\u53EA\u9700\u6BD4\u8F83\u5F53\u524D\u8282\u70B9 &amp; \u5B83\u5DE6\u53F3\u5B50\u8282\u70B9\u7684\u503C\uFF0C\u5373\u53EF\uFF0C\u4E0D\u53EF\u80FD\u662F\u5B59\u5B50\u8F88\u8282\u70B9</span>
        <span class="token keyword">int</span> maxChildIndex <span class="token operator">=</span> leftIndex<span class="token punctuation">;</span>
        <span class="token comment">// \u5224\u65AD\u53F3\u5B69\u5B50\u662F\u5426\u4E5F\u9700\u8981\u52A0\u5165\u6BD4\u8F83\u8303\u56F4</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>rightIndex <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>rightIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>leftIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                maxChildIndex <span class="token operator">=</span> rightIndex<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD \u5F53\u524D\u8282\u70B9\u662F\u5426\u6BD4 \u62E5\u6709\u6700\u5927\u503C\u7684\u5B69\u5B50\u8282\u70B9\u503C\u8981\u5927</span>
        <span class="token comment">// \u5982\u679C &lt;\uFF0C\u5219\u9700\u8981\u4E0B\u6C89</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>maxChildIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E0B\u6C89</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> curIndex<span class="token punctuation">,</span> maxChildIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            curIndex <span class="token operator">=</span> maxChildIndex<span class="token punctuation">;</span>
            <span class="token function">resize</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> curIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+c+'" alt="img_3.png"></p>',26),u=[i];function k(r,d){return s(),a("div",null,u)}var b=n(l,[["render",k],["__file","912\u6392\u5E8F\u6570\u7EC4.html.vue"]]);export{b as default};
