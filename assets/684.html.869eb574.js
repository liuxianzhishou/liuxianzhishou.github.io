import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_1.81c2f4d5.png",e="/assets/img.92f2c75f.png";const o={},c=p('<h1 id="_684-\u5197\u4F59\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#_684-\u5197\u4F59\u8FDE\u63A5" aria-hidden="true">#</a> \u{1F315} \u{1F315} 684. \u5197\u4F59\u8FDE\u63A5</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_1.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findRedundantConnection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u5E76\u67E5\u96C6</span>
        <span class="token comment">// \u6BCF\u6B21\u9047\u5230\u4E00\u4E2A (from, to) \u5BF9\uFF0C\u7ED9 from \u8BBE\u7F6E to \u4F5C\u4E3A\u7236\u4EB2</span>
        <span class="token comment">// \u82E5\u8BBE\u7F6E\u6210\u529F\uFF0C\u8BF4\u660E\u4E4B\u524D\u5728\u4E0D\u540C\u7684\u533A\u5757\uFF0C\u53EF\u4EE5\u8FDE\u63A5</span>
        <span class="token comment">// \u82E5\u662F\u8BBE\u7F6E\u5931\u8D25\uFF0C\u8BF4\u660E from \u4E4B\u524D\u5DF2\u7ECF\u53EF\u4EE5\u8FDE\u63A5\u5230 to\uFF0C\u90A3\u4E48\u8BE5 (from, to) \u5BF9\u5C31\u662F\u91CD\u590D\u7684\uFF0C\u6EE1\u8DB3 res</span>
        <span class="token comment">// \u9898\u76EE\u8981\u6C42\u8FD4\u56DE\u6700\u540E\u51FA\u73B0\u7684\u8FB9\uFF0C\u90A3\u4E48\u53EA\u80FD\u4ECE\u524D\u5F80\u540E\u904D\u5386\uFF0C\u7B2C\u4E00\u6B21\u51FA\u73B0\u91CD\u590D\u7684\u8282\u70B9\u5BF9\u5C31\u662F\u6700\u540E\u51FA\u73B0\u7684\u8FB9</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> edges<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6765\u5B58\u50A8\u4E0D\u540C\u4E0B\u6807\u5904\u8282\u70B9\u7684 \u7236\u4EB2\u6240\u5728\u7684\u4E0B\u6807</span>
        <span class="token comment">// \u521D\u59CB\u5316\uFF0C\u8BA9\u5176\u6307\u5411\u81EA\u5DF1\uFF0C\u4EE5\u540E\u5224\u65AD\u65F6 == \u81EA\u5DF1\uFF0C\u8BF4\u660E\u8BE5\u8282\u70B9\u8FD8\u6CA1\u6709\u8BBE\u7F6E\u65B0\u7684\u7236\u4EB2\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u7236\u4EB2</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u904D\u5386 (from, to) \u5BF9\uFF0C\u5C1D\u8BD5\u5C06\u5B83\u4EEC\u8FDE\u63A5</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> from <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">union</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> array<span class="token punctuation">;</span> <span class="token comment">// \u9996\u6B21\u8FDE\u63A5\u5931\u8D25\uFF0C\u8FD4\u56DE</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> from<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token keyword">to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230 from &amp; to \u7684\u7956\u5148\uFF0C\u82E5\u662F\u4E00\u4E2A\u7956\u5148\uFF0C\u8BF4\u660E\u8BE5\u5173\u7CFB\u4E4B\u524D\u5DF2\u7ECF\u8FDE\u63A5</span>
        <span class="token keyword">int</span> fatherFrom <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> fatherTo <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>fatherFrom <span class="token operator">==</span> fatherTo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C06\u7956\u5148\u8FDE\u63A5</span>
            parent<span class="token punctuation">[</span>fatherFrom<span class="token punctuation">]</span> <span class="token operator">=</span> parent<span class="token punctuation">[</span>fatherTo<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">findFather</span><span class="token punctuation">(</span><span class="token keyword">int</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">==</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">findFather</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+e+'" alt="img.png"></p>',10),i=[c];function l(u,r){return s(),a("div",null,i)}var m=n(o,[["render",l],["__file","684.html.vue"]]);export{m as default};
