import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.5aebcaaa.js";const p={},e=t(`<h1 id="quicklist" tabindex="-1"><a class="header-anchor" href="#quicklist" aria-hidden="true">#</a> \u{1F3F5}\uFE0F quickList</h1><h2 id="_1-\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 1. \u6570\u636E\u7ED3\u6784</h2><ul><li>\u65F6\u95F4 &amp; \u7A7A\u95F4 \u7684\u6298\u4E2D</li></ul><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u8282\u70B9\u7C7B</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">quicklistNode</span> <span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">quicklistNode</span> <span class="token operator">*</span>prev<span class="token punctuation">;</span> <span class="token comment">// \u524D\u7F6E\u8282\u70B9</span>
    <span class="token keyword">struct</span> <span class="token class-name">quicklistNode</span> <span class="token operator">*</span>next<span class="token punctuation">;</span> <span class="token comment">// \u540E\u7F6E\u8282\u70B9</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>entry<span class="token punctuation">;</span> <span class="token comment">// \u6570\u636E\u6307\u9488\uFF0C\u82E5\u8282\u70B9\u6570\u636E\u672A\u88AB\u538B\u7F29\uFF0C\u5219\u6307\u5411 ziplist\uFF1B\u82E5\u5426\uFF0C\u6307\u5411 quicklistLZF \u7ED3\u6784</span>
    <span class="token class-name">size_t</span> sz<span class="token punctuation">;</span>             <span class="token comment">/* entry \u5927\u5C0F\uFF0C\u82E5 entry \u88AB\u538B\u7F29\uFF0C\u5927\u5C0F\u4ECD\u4E3A \u672A\u88AB\u538B\u7F29\u524D\u7684\u5927\u5C0F */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> count <span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">;</span>     <span class="token comment">/* ziplist \u91CC\u9762\u7684\u6570\u636E\u9879\u4E2A\u6570 */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> encoding <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>   <span class="token comment">/* \u662F\u5426\u88AB\u538B\u7F29\uFF0CRAW==1 or LZF==2 */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> container <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">/* \u9884\u7559\u5B57\u6BB5\uFF0C\u56FA\u5B9A\u4E3A 2\uFF1BPLAIN==1 or PACKED==2 */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> recompress <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* \u8BB0\u5F55\u5F53\u524D\u8282\u70B9\u4E4B\u524D\u662F\u5426\u88AB\u538B\u7F29\uFF0C\u4F8B\u5982\u67E5\u770B\u67D0\u4E2A\u8282\u70B9\u65F6\uFF0C\u82E5\u88AB\u538B\u7F29\uFF0C\u90A3\u4E48\u67E5\u770B\u540E\u9700\u8981\u4FEE\u6539\u4E3A 1\uFF0C\u4E4B\u540E\u6709\u65F6\u95F4\u518D\u538B\u7F29\u56DE\u53BB */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> attempted_compress <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* \u8282\u70B9\u4E0D\u80FD\u88AB\u538B\u7F29\uFF0C\u7528\u4E8E\u81EA\u52A8\u5316\u6D4B\u8BD5 */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> dont_compress <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* \u963B\u6B62\u8282\u70B9\u7684\u538B\u7F29 */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> extra <span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token comment">/* \u9884\u7559\u5B57\u6BB5 */</span>
<span class="token punctuation">}</span> quicklistNode<span class="token punctuation">;</span>

<span class="token comment">// \u88AB\u538B\u7F29\u7684 entry \u7ED3\u6784</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">quicklistLZF</span> <span class="token punctuation">{</span>
    <span class="token class-name">size_t</span> sz<span class="token punctuation">;</span> <span class="token comment">// \u88AB\u538B\u7F29\u540E\u7684 entry \u5927\u5C0F</span>
    <span class="token keyword">char</span> compressed<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u67D4\u6027\u6570\u7EC4\uFF0C\u5B58\u653E\u538B\u7F29\u540E\u7684 ziplist \u5B57\u8282\u6570\u7EC4</span>
<span class="token punctuation">}</span> quicklistLZF<span class="token punctuation">;</span>

<span class="token comment">// quicklist</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">quicklist</span> <span class="token punctuation">{</span>
    quicklistNode <span class="token operator">*</span>head<span class="token punctuation">;</span> <span class="token comment">// \u5934\u8282\u70B9</span>
    quicklistNode <span class="token operator">*</span>tail<span class="token punctuation">;</span> <span class="token comment">// \u5C3E\u8282\u70B9</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> count<span class="token punctuation">;</span> <span class="token comment">// \u6240\u6709 ziplist \u6570\u636E\u9879\u7684 \u4E2A\u6570\u548C</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> len<span class="token punctuation">;</span>  <span class="token comment">// \u8282\u70B9\u6570</span>
    <span class="token keyword">signed</span> <span class="token keyword">int</span> fill <span class="token operator">:</span> QL_FILL_BITS<span class="token punctuation">;</span> <span class="token comment">// \u5927\u5C0F\u8BBE\u7F6E\uFF0C\u5B58\u653E list-max-ziplist-size \u53C2\u6570\u503C</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> compress <span class="token operator">:</span> QL_COMP_BITS<span class="token punctuation">;</span> <span class="token comment">// \u8282\u70B9\u538B\u7F29\u6DF1\u5EA6\uFF0C\u5B58\u653E list-compress-depth \u53C2\u6570\u503C</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> bookmark_count<span class="token operator">:</span> QL_BM_BITS<span class="token punctuation">;</span>
    quicklistBookmark bookmarks<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> quicklist<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2-\u53C2\u6570\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#_2-\u53C2\u6570\u7279\u5F81" aria-hidden="true">#</a> 2. \u53C2\u6570\u7279\u5F81</h2><h3 id="_1-list-max-ziplist-size" tabindex="-1"><a class="header-anchor" href="#_1-list-max-ziplist-size" aria-hidden="true">#</a> 1) list-max-ziplist-size</h3><ol><li><strong>\u6B63\u6570</strong><ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u4E2A\u6570</li></ul></li><li><strong>\u8D1F\u6570</strong><ul><li>-1 <ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u5927\u5C0F <code>&lt;= 4KB</code></li></ul></li><li>-2 <ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u5927\u5C0F <code>&lt;= 8KB</code></li><li><code>default</code></li></ul></li><li>-3 <ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u5927\u5C0F <code>&lt;= 16KB</code></li></ul></li><li>-4 <ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u5927\u5C0F <code>&lt;= 32KB</code></li></ul></li><li>-5 <ul><li>\u6BCF\u4E2A <code>quicklistNode</code> \u4E0A\u7684 ziplist \u5927\u5C0F <code>&lt;= 64KB</code></li></ul></li></ul></li></ol><h3 id="_2-list-compress-depth" tabindex="-1"><a class="header-anchor" href="#_2-list-compress-depth" aria-hidden="true">#</a> 2) list-compress-depth</h3><ol><li>\u4E00\u4E2A <code>quicklist</code> \u4E24\u7AEF\u4E0D\u88AB\u538B\u7F29\u7684\u8282\u70B9\u4E2A\u6570</li><li><strong>\u53D6\u503C</strong>\uFF1A <ul><li><strong>0</strong><ul><li>\u4E0D\u538B\u7F29</li><li><code>default</code></li></ul></li><li><strong>1</strong><ul><li>\u4E24\u7AEF\u5404\u6709 <code>1</code> \u4E2A\u8282\u70B9\u4E0D\u88AB\u538B\u7F29\uFF0C\u4E2D\u95F4\u8282\u70B9\u88AB\u538B\u7F29</li></ul></li><li><strong>2</strong></li><li><strong>3</strong></li><li>...</li></ul></li></ol><hr><h2 id="_2-\u5E38\u89C1\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u5E38\u89C1\u51FD\u6570" aria-hidden="true">#</a> 2. \u5E38\u89C1\u51FD\u6570</h2><h3 id="_1-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#_1-\u521D\u59CB\u5316" aria-hidden="true">#</a> 1) \u521D\u59CB\u5316</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u94FE\u8868\u521D\u59CB\u5316</span>
quicklist <span class="token operator">*</span><span class="token function">quicklistCreate</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">quicklist</span> <span class="token operator">*</span>quicklist<span class="token punctuation">;</span>

    quicklist <span class="token operator">=</span> <span class="token function">zmalloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span>quicklist<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>head <span class="token operator">=</span> quicklist<span class="token operator">-&gt;</span>tail <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>compress <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>fill <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>bookmark_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> quicklist<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5934\u5C3E\u63D2\u5165\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-\u5934\u5C3E\u63D2\u5165\u8282\u70B9" aria-hidden="true">#</a> 2) \u5934\u5C3E\u63D2\u5165\u8282\u70B9</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/* \u5934\u90E8\u63D2\u5165\u8282\u70B9
 *
 * Returns 0 if used existing head.
 * Returns 1 if new head created. */</span>
<span class="token keyword">int</span> <span class="token function">quicklistPushHead</span><span class="token punctuation">(</span>quicklist <span class="token operator">*</span>quicklist<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>value<span class="token punctuation">,</span> <span class="token class-name">size_t</span> sz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    quicklistNode <span class="token operator">*</span>orig_head <span class="token operator">=</span> quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">unlikely</span><span class="token punctuation">(</span><span class="token function">isLargeElement</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">__quicklistInsertPlainNode</span><span class="token punctuation">(</span>quicklist<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">likely</span><span class="token punctuation">(</span> <span class="token comment">// \u5728 entry \u4E2D\u63D2\u5165\u65B0\u8282\u70B9</span>
        <span class="token function">_quicklistNodeAllowInsert</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>fill<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        quicklist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>entry <span class="token operator">=</span> <span class="token function">lpPrepend</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>entry<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quicklistNodeUpdateSz</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A entry\uFF0C\u7136\u540E\u63D2\u5165</span>
        quicklistNode <span class="token operator">*</span>node <span class="token operator">=</span> <span class="token function">quicklistCreateNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        node<span class="token operator">-&gt;</span>entry <span class="token operator">=</span> <span class="token function">lpPrepend</span><span class="token punctuation">(</span><span class="token function">lpNew</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quicklistNodeUpdateSz</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">_quicklistInsertNodeBefore</span><span class="token punctuation">(</span>quicklist<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    quicklist<span class="token operator">-&gt;</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>head<span class="token operator">-&gt;</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>orig_head <span class="token operator">!=</span> quicklist<span class="token operator">-&gt;</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u5C3E\u90E8\u63D2\u5165\u8282\u70B9
 *
 * Returns 0 if used existing tail.
 * Returns 1 if new tail created. */</span>
<span class="token keyword">int</span> <span class="token function">quicklistPushTail</span><span class="token punctuation">(</span>quicklist <span class="token operator">*</span>quicklist<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>value<span class="token punctuation">,</span> <span class="token class-name">size_t</span> sz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    quicklistNode <span class="token operator">*</span>orig_tail <span class="token operator">=</span> quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">unlikely</span><span class="token punctuation">(</span><span class="token function">isLargeElement</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">__quicklistInsertPlainNode</span><span class="token punctuation">(</span>quicklist<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">likely</span><span class="token punctuation">(</span>
        <span class="token function">_quicklistNodeAllowInsert</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>fill<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        quicklist<span class="token operator">-&gt;</span>tail<span class="token operator">-&gt;</span>entry <span class="token operator">=</span> <span class="token function">lpAppend</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>tail<span class="token operator">-&gt;</span>entry<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">quicklistNodeUpdateSz</span><span class="token punctuation">(</span>quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        quicklistNode <span class="token operator">*</span>node <span class="token operator">=</span> <span class="token function">quicklistCreateNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        node<span class="token operator">-&gt;</span>entry <span class="token operator">=</span> <span class="token function">lpAppend</span><span class="token punctuation">(</span><span class="token function">lpNew</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> sz<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">quicklistNodeUpdateSz</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">_quicklistInsertNodeAfter</span><span class="token punctuation">(</span>quicklist<span class="token punctuation">,</span> quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    quicklist<span class="token operator">-&gt;</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    quicklist<span class="token operator">-&gt;</span>tail<span class="token operator">-&gt;</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>orig_tail <span class="token operator">!=</span> quicklist<span class="token operator">-&gt;</span>tail<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","quicklist.html.vue"]]);export{r as default};
