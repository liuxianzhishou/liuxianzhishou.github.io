import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as i,o as u,c as k,b as c,w as a,e as r,a as n,d as s}from"./app.5aebcaaa.js";var d="/assets/img.895ed452.png";const m={},v=r(`<h1 id="java-\u5E38\u89C1\u7C7B" tabindex="-1"><a class="header-anchor" href="#java-\u5E38\u89C1\u7C7B" aria-hidden="true">#</a> \u{1F555} Java \u5E38\u89C1\u7C7B</h1><h2 id="_1-object" tabindex="-1"><a class="header-anchor" href="#_1-object" aria-hidden="true">#</a> 1. Object</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>lang</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Object \u7C7B\u4E3A\u6240\u6709\u7C7B\u7684\u7236\u7C7B\uFF0C\u6240\u6709\u5BF9\u8C61(\u5305\u62EC\u6570\u7EC4)\u90FD\u9700\u8981\u5B9E\u73B0\u8BE5\u65B9\u6CD5
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u8BE5 Object \u5BF9\u8C61\u8FD0\u884C\u65F6\u7684\u7C7B\uFF0C\u8FD4\u56DE\u7684\u7C7B\u662F \u88AB\u8868\u793A\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\u9501\u5B9A\u7684 \u5BF9\u8C61
     * \u793A\u4F8B\u5982\u4E0B\uFF1A\u65E0\u9700\u8FDB\u884C\u5F3A\u5236\u8F6C\u6362
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">Number</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span></span>                             <span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span> <span class="token punctuation">}</span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u5BF9\u8C61\u7684 Hash \u503C
     * \u5728\u5B58\u5165\u4E0E Hash \u503C\u76F8\u5173\uFF0C\u4F8B\u5982 HashMap\u3001HashSet \u7B49\u65F6\u4F1A\u7528\u5230\u8BE5\u65B9\u6CD5
     * \u9075\u5FAA\u5982\u4E0B\u534F\u8BAE\u89C4\u5B9A\uFF1A
     * 1. \u5728\u540C\u4E00 Java \u8FD0\u884C\u7A0B\u5E8F\uFF0C\u540C\u4E00\u5BF9\u8C61\u6BCF\u6B21\u8C03\u7528\u8BE5\u65B9\u6CD5\u5F97\u5230\u7684 hash \u503C\u5747\u76F8\u540C
     * 2. \u82E5\u4E24\u4E2A\u5BF9\u8C61\u6EE1\u8DB3 equals()\uFF0C\u90A3\u4E48 hashCode() \u7ED3\u679C\u4E5F\u5FC5\u76F8\u540C
     * 3. \u82E5\u4FE9\u4E2A\u5BF9\u8C61\u4E0D\u6EE1\u8DB3 equals()\uFF0C\u90A3\u4E48 hashCode() \u7ED3\u679C\u4E5F\u5FC5\u4E0D\u76F8\u540C
     * 
     * \u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4E0D\u540C\u5BF9\u8C61\u901A\u8FC7 hashCode() \u5F97\u5230\u7684\u7ED3\u679C\u503C\u4E0D\u76F8\u540C\uFF0C\u4E00\u822C\u901A\u8FC7\u5C06\u5BF9\u8C61\u7684 \u5185\u90E8\u5730\u5740\u8F6C\u6362\u4E3A int \u5B9E\u73B0
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u91CD\u5199\u8BE5\u65B9\u6CD5\u65F6\uFF0C\u9700\u8981\u4FDD\u8BC1 \u4E0A\u8FF0\u534F\u8BAE\uFF1A\u5373
     * \u82E5\u4E24\u4E2A\u5BF9\u8C61\u6EE1\u8DB3 equals()\uFF0C\u90A3\u4E48 hashCode() \u7ED3\u679C\u4E5F\u5FC5\u76F8\u540C
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u9ED8\u8BA4\u6D45\u62F7\u8D1D
     * \u4EFB\u4F55\u7C7B\u8981\u5B9E\u73B0\u8BE5\u65B9\u6CD5\uFF0C\u5FC5\u987B implements Cloneable\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u5F02\u5E38
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">native</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CloneNotSupportedException</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u5B57\u7B26\u4E32\u5F62\u5F0F\uFF0C\u5EFA\u8BAE\u6240\u6709\u5B50\u7C7B\u5B9E\u73B0\u8BE5\u65B9\u6CD5
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;@&quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5524\u9192\u4EFB\u610F\u4E00\u4E2A\u6B63\u5728\u7B49\u5F85\u8BE5 \u5BF9\u8C61\u9501 \u7684\u7EBF\u7A0B
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5524\u9192\u6240\u6709\u6B63\u5728\u7B49\u5F85\u8BE5 \u5BF9\u8C61\u9501 \u7684\u7EBF\u7A0B
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8BA9\u5F53\u524D\u7EBF\u7A0B\u7B49\u5F85\uFF0C\u76F4\u5230\u88AB\u5176\u4ED6\u7EBF\u7A0B notify() | notifyAll() | \u88AB\u5176\u4ED6\u7EBF\u7A0B\u4E2D\u65AD | \u7B49\u5F85\u65F6\u95F4\u8FBE\u5230
     * \u5F53\u524D\u7EBF\u7A0B\u5FC5\u987B\u83B7\u53D6\u8BE5\u5BF9\u8C61\u7684 monitor
     * 
     * \u4F2A\u5524\u9192\uFF1A\u7EBF\u7A0B\u4E0D\u5904\u4E8E\u4EE5\u4E0A\u60C5\u51B5\u4E5F\u53EF\u80FD\u6062\u590D\uFF0C\u56E0\u6B64\u6709\u65F6\u9700\u8981\u52A0 while()\uFF0C\u5982\u4E0B\u6240\u793A
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>
     *     synchronized (obj) <span class="token punctuation">{</span>
     *         while (<span class="token entity named-entity" title="&lt;">&amp;lt;</span>condition does not hold<span class="token entity named-entity" title="&gt;">&amp;gt;</span>)
     *             obj.wait(timeout);
     *         ... // Perform action appropriate to condition
     *     <span class="token punctuation">}</span>
     *
     * <span class="token keyword">@param</span>      <span class="token parameter">timeout</span>   the maximum time to wait in milliseconds.
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span>      \u8D85\u65F6\u65F6\u95F4 &lt; 0 \u4E0D\u5408\u6CD5
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span>  \u5F53\u524D\u7EBF\u7A0B\u5E76\u6CA1\u6709\u83B7\u53D6 \u8BE5\u5BF9\u8C61\u9501
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span> \u7EBF\u7A0B\u88AB\u4E2D\u65AD\uFF0C\u4F1A\u6E05\u7A7A\u4E2D\u65AD\u6807\u5FD7\u4F4D
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span> timeout<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nanos <span class="token operator">&gt;</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;nanosecond timeout value out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            timeout<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">wait</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * JVM \u5783\u573E\u56DE\u6536\u76F8\u5173
     * \u5728\u56DE\u6536\u524D\uFF0C\u6709\u4E00\u6B21\u9003\u8131\u7684\u673A\u4F1A\uFF0C\u8BE5\u65B9\u6CD5\u53EA\u80FD\u6267\u884C \u4E00\u6B21
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u4E3A\u4EC0\u4E48\u91CD\u5199-equals-\u65F6\u9700\u8981\u91CD\u5199-hashcode-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u4E3A\u4EC0\u4E48\u91CD\u5199-equals-\u65F6\u9700\u8981\u91CD\u5199-hashcode-\u65B9\u6CD5" aria-hidden="true">#</a> 1) \u4E3A\u4EC0\u4E48\u91CD\u5199 equals() \u65F6\u9700\u8981\u91CD\u5199 hashCode() \u65B9\u6CD5</h3><ul><li>\u5F53\u6211\u4EEC\u9700\u8981\u5C06 \u5BF9\u8C61 \u6DFB\u52A0\u5230 <code>HashSet</code> | <code>HashMap</code> \u7B49 <code>Hash</code> \u76F8\u5173\u6570\u636E\u7ED3\u6784\u65F6\uFF0C</li><li>\u9996\u5148\u4F1A\u6839\u636E\u5BF9\u8C61\u7684 <code>hashCode()</code> \u786E\u5B9A\u5B58\u5165\u4E0B\u6807</li><li>\u7136\u540E\u5728\u8BE5\u4E0B\u6807\u5904\uFF0C\u5224\u65AD <code>equals()</code> \u6DFB\u52A0\u662F\u5426\u6EE1\u8DB3\uFF0C <ul><li>\u5982\u679C\u6EE1\u8DB3\uFF0C\u5219\u8BF4\u660E \u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49\uFF0C\u5DF2\u7ECF\u5B58\u5728\u8BE5\u5BF9\u8C61</li><li>\u82E5\u4E0D\u6EE1\u8DB3\uFF0C\u8BF4\u660E \u4E24\u4E2A\u5BF9\u8C61\u4E0D\u76F8\u7B49</li></ul></li><li>\u56E0\u6B64\uFF0C\u82E5\u6211\u4EEC\u6CA1\u6709 \u91CD\u5199 <code>hashCode()</code>\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5BF9\u8C61\u7684 <code>hashCode()</code> \u4E0E\u5BF9\u8C61\u5730\u5740\u6709\u5173\uFF0C\u51E0\u4E4E\u4E0D\u53EF\u80FD <code>hashCode()</code> \u76F8\u7B49 <ul><li>\u90A3\u4E48\uFF0C\u5B58\u5165\u4E0B\u6807\u4E5F\u4E0D\u4E00\u5B9A\u80FD\u591F\u4FDD\u8BC1\u662F\u76F8\u7B49\u7684</li><li>\u8FD9\u6837\u8FD9\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u5F88\u5927\u6982\u7387\u4F1A\u653E\u5728\u4E0D\u540C\u4E0B\u6807\u7684\u6876\u4E2D\uFF0C\u8868\u793A \u4E24\u4E2A\u5BF9\u8C61 \u4E0D\u76F8\u7B49</li><li>\u800C\u6211\u4EEC\u9884\u671F\u662F\uFF0C\u8FD9\u4E24\u4E2A\u5BF9\u8C61 \u5E94\u8BE5\u662F\u76F8\u7B49\u7684\uFF0C\u653E\u5728\u540C\u4E00\u6570\u7EC4\u4E0B\u6807\uFF0C\u4E14\u5728\u67E5\u627E\u65F6\uFF0C\u53D1\u73B0 <code>equals() </code>\u6EE1\u8DB3\u6761\u4EF6</li></ul></li><li>\u56E0\u6B64\uFF0C\u5728\u6B64\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u9996\u5148\u8981\u6EE1\u8DB3\u76F8\u540C\u5BF9\u8C61\u7684 <code>hashCode()</code> \u76F8\u7B49\uFF0C\u7136\u540E\u624D\u4F1A\u5224\u65AD <code>equals()</code><ul><li>\u53EA\u91CD\u5199\u4E86 <code>equals()</code> \u8BA9\u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49\uFF0C\u662F\u65E0\u6CD5\u6EE1\u8DB3\u6761\u4EF6\u7684</li></ul></li></ul><hr><h2 id="_2-\u5305\u88C5\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2-\u5305\u88C5\u7C7B" aria-hidden="true">#</a> 2. \u5305\u88C5\u7C7B</h2><h3 id="_1-integer" tabindex="-1"><a class="header-anchor" href="#_1-integer" aria-hidden="true">#</a> 1) Integer</h3><ul><li>\u7F13\u5B58\u533A\u95F4 [-128, 127]</li><li>\u53EF\u901A\u8FC7 <code>java.lang.Integer.IntegerCache.high</code> \u8BBE\u7F6E \u53F3\u533A\u95F4\u8FB9\u754C\u503C</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Integer</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Native</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>   MIN_VALUE <span class="token operator">=</span> <span class="token number">0x80000000</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Native</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span>   MAX_VALUE <span class="token operator">=</span> <span class="token number">0x7fffffff</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>low <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>high<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>low<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u5B58\u5728\u4E8E\u7F13\u5B58\u4E2D\uFF0C\u65B0\u751F\u6210\u4E00\u4E2A \u5305\u88C5\u7C7B</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7F13\u5B58\u5185\u90E8\u7C7B</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IntegerCache</span> <span class="token punctuation">{</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">;</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> high<span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4 = 127\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5927\u5C0F</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> cache<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7F13\u5B58\u6570\u7EC4</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
            <span class="token comment">// \u83B7\u53D6\u7528\u6237\u81EA\u5B9A\u4E49\u7684 high \u503C\uFF0C\u5982\u679C\u5B58\u5728\u7684\u5316\uFF0C\u4F46\u662F\u6700\u7EC8\u4F1A\u53D6 max{\u81EA\u5B9A\u4E49 high, 127}</span>
            <span class="token class-name">String</span> integerCacheHighPropValue <span class="token operator">=</span> sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span>VM<span class="token punctuation">.</span><span class="token function">getSavedProperty</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Integer.IntegerCache.high&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>integerCacheHighPropValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>integerCacheHighPropValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    i <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    h <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token operator">-</span>low<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span> <span class="token class-name">NumberFormatException</span> nfe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If the property cannot be parsed into an int, ignore it.</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            high <span class="token operator">=</span> h<span class="token punctuation">;</span>

            cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> j <span class="token operator">=</span> low<span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                cache<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// high &gt;= 127</span>
            <span class="token keyword">assert</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">.</span>high <span class="token operator">&gt;=</span> <span class="token number">127</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token class-name">IntegerCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-byte" tabindex="-1"><a class="header-anchor" href="#_2-byte" aria-hidden="true">#</a> 2) Byte</h3><ul><li>\u7F13\u5B58\u533A\u95F4 [-128, 127]</li><li>\u5168\u90E8\u7F13\u5B58</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Byte</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Byte</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">byte</span>   MIN_VALUE <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">byte</span>   MAX_VALUE <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u7F13\u5B58\u6570\u7EC4\u5B58\u653E\u6240\u6709 byte \u503C</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Byte</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ByteCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>b <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7F13\u5B58\u5185\u90E8\u7C7B\uFF0C\u65E0\u6CD5\u81EA\u5B9A\u4E49\u7F13\u5B58\u533A\u95F4</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ByteCache</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">ByteCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Byte</span> cache<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Byte</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">127</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-boolean" tabindex="-1"><a class="header-anchor" href="#_3-boolean" aria-hidden="true">#</a> 3) Boolean</h3><ul><li>\u76F4\u63A5\u7F13\u5B58\u7684 <code>TRUE</code> &amp; <code>FALSE</code> \u4E24\u4E2A\u53D8\u91CF\uFF0C\u65E0\u6240\u8C13\u7F13\u5B58\u4E0D\u7F13\u5B58</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Boolean</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Boolean</span> TRUE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Boolean</span> FALSE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u6BCF\u6B21\u8FD4\u56DE\u7684 \u90FD\u662F\u4E00\u4E2A \u65B0\u7684 Boolean \u5BF9\u8C61</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>b <span class="token operator">?</span> TRUE <span class="token operator">:</span> FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-character" tabindex="-1"><a class="header-anchor" href="#_4-character" aria-hidden="true">#</a> 4) Character</h3><ul><li>\u7F13\u5B58\u533A\u95F4 [0, 127]</li><li>\u65E0\u6CD5\u4FEE\u6539\u7F13\u5B58\u533A\u95F4\u5927\u5C0F</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Character \u672C\u8EAB\u8303\u56F4\u5C31\u662F \u975E\u8D1F\u6570</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Character</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span> MIN_VALUE <span class="token operator">=</span> <span class="token char">&#39;\\u0000&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span> MAX_VALUE <span class="token operator">=</span> <span class="token char">&#39;\\uFFFF&#39;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Character</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u7F13\u5B58\u8303\u56F4 - [0, 127]</span>
            <span class="token keyword">return</span> <span class="token class-name">CharacterCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7F13\u5B58\u7C7B</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CharacterCache</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">CharacterCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Character</span> cache<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">[</span><span class="token number">127</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [0, 127]</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-short" tabindex="-1"><a class="header-anchor" href="#_5-short" aria-hidden="true">#</a> 5) Short</h3><ul><li>\u7F13\u5B58\u533A\u95F4 [-128, 127]</li><li>\u65E0\u6CD5\u4FEE\u6539\u7F13\u5B58\u533A\u95F4\u5927\u5C0F</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Short</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Short</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">short</span>   MIN_VALUE <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">32768</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">short</span>   MAX_VALUE <span class="token operator">=</span> <span class="token number">32767</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Short</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">short</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sAsInt <span class="token operator">=</span> s<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sAsInt <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">128</span> <span class="token operator">&amp;&amp;</span> sAsInt <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// must cache</span>
            <span class="token keyword">return</span> <span class="token class-name">ShortCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>sAsInt <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Short</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ShortCache</span> <span class="token punctuation">{</span> <span class="token comment">// [-128, 127]</span>
        <span class="token keyword">private</span> <span class="token class-name">ShortCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Short</span> cache<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Short</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">127</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Short</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-float" tabindex="-1"><a class="header-anchor" href="#_6-float" aria-hidden="true">#</a> 6) Float</h3><ul><li>\u65E0\u7F13\u5B58\uFF0C\u76F4\u63A5\u8FD4\u56DE\u65B0\u5BF9\u8C61</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Float</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">float</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Float</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u7F13\u5B58\uFF0C\u76F4\u63A5\u8FD4\u56DE\u65B0\u5BF9\u8C61</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-double" tabindex="-1"><a class="header-anchor" href="#_7-double" aria-hidden="true">#</a> 7) Double</h3><ul><li>\u65E0\u7F13\u5B58\uFF0C\u76F4\u63A5\u8FD4\u56DE\u65B0\u5BF9\u8C61</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Double</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u7F13\u5B58\uFF0C\u76F4\u63A5\u8FD4\u56DE\u65B0\u5BF9\u8C61</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-long" tabindex="-1"><a class="header-anchor" href="#_8-long" aria-hidden="true">#</a> 8) Long</h3><ul><li>\u7F13\u5B58\u533A\u95F4 [-128, 127]</li><li>\u65E0\u6CD5\u4FEE\u6539\u7F13\u5B58\u533A\u95F4\u5927\u5C0F</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Long</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> offset <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">128</span> <span class="token operator">&amp;&amp;</span> l <span class="token operator">&lt;=</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// [-128, 127]</span>
            <span class="token keyword">return</span> <span class="token class-name">LongCache</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>l <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u7F13\u5B58\u6C60 - [-128, 127]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LongCache</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">LongCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Long</span> cache<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">127</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_3-\u5B57\u7B26\u4E32\u7C7B" tabindex="-1"><a class="header-anchor" href="#_3-\u5B57\u7B26\u4E32\u7C7B" aria-hidden="true">#</a> 3. \u5B57\u7B26\u4E32\u7C7B</h2><h3 id="_1-string" tabindex="-1"><a class="header-anchor" href="#_1-string" aria-hidden="true">#</a> 1) String</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// final \u4FEE\u9970\u7C7B - \u65E0\u6CD5\u88AB\u7EE7\u627F</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">String</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B58\u50A8 char[] \u6570\u7EC4\uFF0Cfinal \u4FEE\u9970\u4E00\u65E6\u521D\u59CB\u5316\u4E0D\u53EF\u518D\u66F4\u6539</span>
    <span class="token comment">// JDK 9 \u5F00\u59CB\u8F6C\u6362\u4E3A byte[] \u5B58\u50A8\uFF0C\u8282\u7701\u4E86\u5B58\u50A8\u7A7A\u95F4</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">char</span> value<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
    <span class="token keyword">private</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4 hash \u503C\uFF0C\u5F53\u4E3A 0 \u65F6\uFF0ChashCode() \u65F6\u9700\u8981\u6839\u636E val[] \u5143\u7D20\u91CD\u65B0\u8BA1\u7B97</span>
    
    <span class="token comment">// \u91CD\u5199 equals\uFF0C\u4F9D\u6B21\u6BD4\u8F83\u6BCF\u4E2A\u5143\u7D20</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> anObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> anObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>anObject <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> anotherString <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>anObject<span class="token punctuation">;</span>
            <span class="token keyword">int</span> n <span class="token operator">=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">char</span> v1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token keyword">char</span> v2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>v1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> v2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    i<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u91CD\u5199 hashCode()\uFF0C\u4FDD\u8BC1 equals \u6210\u7ACB\u6761\u4EF6\u4E0B\uFF0ChashCode \u80AF\u5B9A\u76F8\u7B49</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> h <span class="token operator">=</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span> val<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                h <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> h <span class="token operator">+</span> val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0E\u6BCF\u4E2A\u5143\u7D20\u6709\u5173\uFF0C\u53D6\u51B3\u4E8E\u5143\u7D20\u4E2A\u6570 &amp; \u5143\u7D20\u987A\u5E8F</span>
            <span class="token punctuation">}</span>
            hash <span class="token operator">=</span> h<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> h<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5B57\u7B26\u4E32\u6C60\uFF0C\u6700\u521D\u4E3A\u7A7A\uFF0C\u7531\u7C7B {@code String} \u79C1\u4E0B\u7EF4\u62A4\u3002 </span>
    <span class="token comment">// \u5F53\u8C03\u7528 intern \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C\u6C60\u4E2D\u5DF2\u7ECF\u5305\u542B\u4E00\u4E2A\u7B49\u4E8E {@link equals(Object)} \u65B9\u6CD5\u786E\u5B9A\u7684\u6B64 {@code String} \u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\uFF0C\u5219\u8FD4\u56DE\u6C60\u4E2D\u7684\u5B57\u7B26\u4E32\u3002</span>
    <span class="token comment">// \u5426\u5219\uFF0C\u5C06\u6B64 {@code String} \u5BF9\u8C61\u6DFB\u52A0\u5230\u6C60\u4E2D\uFF0C\u5E76\u8FD4\u56DE\u5BF9\u6B64 {@code String} \u5BF9\u8C61\u7684\u5F15\u7528\u3002 </span>
    <span class="token comment">// \u56E0\u6B64\u5BF9\u4E8E\u4EFB\u4F55\u4E24\u4E2A\u5B57\u7B26\u4E32 s &amp; t\uFF0C\u5F53\u4E14\u4EC5\u5F53 s.equals(t) \u6EE1\u8DB3\u6761\u4EF6\u65F6\uFF0Cs.intern() == t.intern() </span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">String</span> <span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-stringbuilder" tabindex="-1"><a class="header-anchor" href="#_2-stringbuilder" aria-hidden="true">#</a> 2) StringBuilder</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">StringBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractStringBuilder</span>
                                  <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">4383685877147921099L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u9ED8\u8BA4\u521B\u5EFA\u957F\u5EA6\u4E3A 16 \u7684\u7A7A\u6570\u7EC4
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u957F\u5EA6\u4E3A capacity \u7684\u7A7A\u6570\u7EC4
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5728\u6307\u5B9A\u5B57\u7B26\u4E32\u957F\u5EA6\u7684\u57FA\u7840\u4E0A\uFF0C\u518D\u52A0\u4E0A 16 \u7684\u521D\u59CB\u5BB9\u91CF
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u63D2\u5165\u5143\u7D20</span>
    <span class="token comment">// \u5728\u63D2\u5165\u8FC7\u7A0B\u4E2D\uFF0C\u82E5 \u65B0\u7684\u603B\u957F\u5EA6 &gt; \u6570\u7EC4\u5DF2\u6709\u957F\u5EA6\uFF0C\u5219\u6269\u5BB9\u4E3A 2n + 2 --&gt; \u6765\u81EA\u62BD\u8C61\u7236\u7C7B</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> sb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span> offset<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5220\u9664\u5143\u7D20</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5220\u9664\u533A\u95F4 [start, end) | [start, len)</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">deleteCharAt</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">deleteCharAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u67E5\u627E\u5143\u7D20</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token keyword">int</span> fromIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> fromIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u53CD\u8F6C\u5B57\u7B26\u4E32</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">StringBuilder</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5E76\u6CA1\u6709\u91CD\u5199 equal &amp; hashCode</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-stringbuffer" tabindex="-1"><a class="header-anchor" href="#_3-stringbuffer" aria-hidden="true">#</a> 3) StringBuffer</h3><ul><li>\u65B9\u6CD5\u540C StringBuilder</li><li>\u6240\u6709\u65B9\u6CD5\u52A0\u4E0A <code>synchronized</code> \u5173\u952E\u5B57\u4FEE\u9970</li></ul><h3 id="string-\u7684-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#string-\u7684-\u64CD\u4F5C" aria-hidden="true">#</a> String \u7684 <code>+</code> \u64CD\u4F5C</h3><ol><li>String \u7684 <code>+</code> \u64CD\u4F5C\u5B9E\u9645\u8C03\u7528\u7684\u662F <code>StringBuilder.append().toString() </code></li><li>\u4F46\u662F\uFF0C\u5728\u5FAA\u73AF\u4F53\u4E2D\uFF0C\u4E0D\u5B9C\u4F7F\u7528 <code>+</code> \u62FC\u63A5\u5B57\u7B26\u4E32 <ul><li>\u6BCF\u6B21\u5FAA\u73AF\u90FD\u4EA7\u751F\u4E00\u4E2A <code>StringBuilder</code> \u5BF9\u8C61\uFF0C\u6709\u591A\u5C11\u6B21\u5FAA\u73AF\u5C31\u4F1A\u4EA7\u751F\u591A\u5C11\u4E2A <code>StringBuilder</code> \u5BF9\u8C61\uFF0C\u53EF\u80FD\u9020\u6210 \u5185\u5B58\u6EA2\u51FA</li></ul></li></ol><hr><h2 id="_4-arrays-sort" tabindex="-1"><a class="header-anchor" href="#_4-arrays-sort" aria-hidden="true">#</a> 4. Arrays.sort()</h2><ol><li>\u9488\u5BF9 <code>byte</code> <code>char</code> <code>short</code>\uFF0C<strong>len &gt; 29 | len &gt; 3200</strong> \u65F6\uFF0C\u4F18\u5148\u9009\u62E9 <mark>\u8BA1\u6570\u6392\u5E8F</mark><ul><li>\u8BA1\u6570\u6392\u5E8F\uFF0C\u904D\u5386\u6570\u7EC4\u83B7\u5F97 min &amp; max\uFF0C\u5EFA\u7ACB\u5BF9\u5E94\u957F\u5EA6\u7684\u6570\u7EC4</li><li>\u518D\u6B21\u904D\u5386\uFF0C\u6BCF\u4E2A\u6570\u7EC4\u4E0B\u6807\u5904\u8BB0\u5F55\u5143\u7D20\u7684\u51FA\u73B0\u6B21\u6570</li><li>\u6700\u540E\u904D\u5386\uFF0C\u586B\u5145\u7ED3\u679C\u96C6</li><li>\u7531\u4E8E \u4EE5\u4E0A\u4E09\u79CD\u6570\u636E\u7C7B\u578B \u503C\u7684\u53D6\u503C\u8303\u56F4\u8F83\u5C0F\uFF0C\u56E0\u6B64\u53EF\u4EE5\u901A\u8FC7\u5EFA\u7ACB\u8FD9\u4E48\u957F\u7684\u6570\u7EC4\uFF0C\u4E14 len \u8D8A\u5927\uFF0C\u6BCF\u4E2A\u4E0B\u6807\u5904\u9891\u6B21\u8D8A\u9AD8\uFF0C\u6548\u679C\u8D8A\u597D</li></ul></li><li>\u9488\u5BF9<code>\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B</code>\uFF0C<strong>len &lt; 47</strong> \u65F6\uFF0C\u4F18\u5148\u9009\u62E9 <mark>\u63D2\u6392</mark></li><li>\u9488\u5BF9<code>\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B</code>\uFF0C<strong>len &lt; 286</strong> \u65F6\uFF0C\u4F18\u5148\u9009\u62E9 <mark>\u5FEB\u6392</mark></li><li>\u5176\u4F59\u60C5\u51B5\uFF0C\u9488\u5BF9<code>\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B &amp; \u5BF9\u8C61\u7C7B\u578B</code>\uFF0C\u4F7F\u7528 <mark>\u5F52\u5E76\u6392\u5E8F</mark>\uFF0C\u7B97\u6CD5\u7A33\u5B9A</li><li>\u9488\u5BF9<code>\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B</code>\uFF0C\u91C7\u7528\u7684\u662F <code>DualPivotQuicksort</code> \u7C7B\uFF1B\u9488\u5BF9 <code>\u5BF9\u8C61\u7C7B\u578B</code>\uFF0C\u4F7F\u7528\u7684\u662F <code>ComparableTimSort</code> \u7C7B\u7684\u7B97\u6CD5</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">DualPivotQuicksort</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">DualPivotQuicksort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u79C1\u6709\u6784\u9020\u51FD\u6570\uFF0C\u9632\u6B62\u5B9E\u4F8B\u5316</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_RUN_COUNT <span class="token operator">=</span> <span class="token number">67</span><span class="token punctuation">;</span> <span class="token comment">// \u5F52\u5E76\u6392\u5E8F\u6700\u5927\u5141\u8BB8\u6B21\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_RUN_LENGTH <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span> <span class="token comment">// \u5F52\u5E76\u6392\u5E8F\u4E2D\u8FD0\u884C\u7684\u6700\u5927\u957F\u5EA6</span>

    <span class="token comment">// \u5982\u679C\u8981\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u957F\u5EA6\u5C0F\u4E8E 286\uFF0C\u5219\u4F18\u5148\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F\u800C\u4E0D\u662F\u5F52\u5E76\u6392\u5E8F</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> QUICKSORT_THRESHOLD <span class="token operator">=</span> <span class="token number">286</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u5982\u679C\u8981\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u957F\u5EA6\u5C0F\u4E8E 47\uFF0C\u5219\u4F7F\u7528\u63D2\u5165\u6392\u5E8F\u4F18\u5148\u4E8E\u5FEB\u901F\u6392\u5E8F</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> INSERTION_SORT_THRESHOLD <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span> 
    
    <span class="token comment">// \u5982\u679C\u8981\u6392\u5E8F\u7684\u5B57\u8282\u6570\u7EC4\u7684\u957F\u5EA6\u5927\u4E8E 29\uFF0C\u5219\u4F18\u5148\u4F7F\u7528\u8BA1\u6570\u6392\u5E8F\u800C\u4E0D\u662F\u63D2\u5165\u6392\u5E8F</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> COUNTING_SORT_THRESHOLD_FOR_BYTE <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span> 
    <span class="token comment">// \u5982\u679C\u8981\u6392\u5E8F\u7684 short | char \u6570\u7EC4\u7684\u957F\u5EA6\u5927\u4E8E 3200\uFF0C\u5219\u4F18\u5148\u4F7F\u7528\u8BA1\u6570\u6392\u5E8F\u800C\u4E0D\u662F\u5FEB\u901F\u6392\u5E8F</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> COUNTING_SORT_THRESHOLD_FOR_SHORT_OR_CHAR <span class="token operator">=</span> <span class="token number">3200</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-\u5F02\u5E38\u7C7B" tabindex="-1"><a class="header-anchor" href="#_5-\u5F02\u5E38\u7C7B" aria-hidden="true">#</a> 5. \u5F02\u5E38\u7C7B</h2><h3 id="_1-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u56FE" aria-hidden="true">#</a> 1) \u7C7B\u56FE</h3><p><img src="`+d+`" alt="img.png"></p><h3 id="_2-throwable" tabindex="-1"><a class="header-anchor" href="#_2-throwable" aria-hidden="true">#</a> 2) Throwable</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Throwable</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD4\u56DE\u8BE6\u7EC6\u4FE1\u606F</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> detailMessage<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">//</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token function">getLocalizedMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>message <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span> <span class="token operator">:</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">//</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-try-catch-finally" tabindex="-1"><a class="header-anchor" href="#_3-try-catch-finally" aria-hidden="true">#</a> 3) try-catch-finally</h3><h4 id="_1-\u82E5-finally-\u4E2D\u5B58\u5728-return-\u5219\u4F1A\u76F4\u63A5\u8FD4\u56DE-finally-\u4E2D\u7684\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#_1-\u82E5-finally-\u4E2D\u5B58\u5728-return-\u5219\u4F1A\u76F4\u63A5\u8FD4\u56DE-finally-\u4E2D\u7684\u7ED3\u679C" aria-hidden="true">#</a> \u2460 \u82E5 finally \u4E2D\u5B58\u5728 return\uFF0C\u5219\u4F1A\u76F4\u63A5\u8FD4\u56DE finally \u4E2D\u7684\u7ED3\u679C</h4><ul><li>\u5982\u679C\u5728 finally \u4E2D\u5B58\u5728 return \u8BED\u53E5\uFF0C\u90A3\u4E48 try-catch \u4E2D\u7684 return \u503C\u90FD\u4F1A\u88AB\u8986\u76D6 <ul><li>\u5982\u679C\u6709\u8FD4\u56DE\u503C\uFF0C\u4F1A\u628A try \u4E2D <strong>return \u7684\u53D8\u91CF\u5F53\u524D\u503C</strong> \u4FDD\u5B58\u5230 \u5C40\u90E8\u53D8\u91CF\u8868 \u4E2D\uFF0C<strong>\u538B\u5165\u64CD\u4F5C\u6570\u6808</strong></li><li>\u7136\u540E\u8DF3\u8F6C\u5230 finally \u4E2D\u7EE7\u7EED\u6267\u884C</li><li>\u6267\u884C\u5B8C finally \u8BED\u53E5\u540E\uFF0C\u4F1A\u8FD4\u56DE\u4E4B\u524D\u4FDD\u5B58\u5728 \u5C40\u90E8\u53D8\u91CF\u8868 \u91CC\u7684\u503C</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884C\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        num<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// num = 1</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        num<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// num = 2</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE 2</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-finally-\u4E2D\u7684\u4EE3\u7801\u4E0D\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_2-finally-\u4E2D\u7684\u4EE3\u7801\u4E0D\u6267\u884C" aria-hidden="true">#</a> \u2461 finally \u4E2D\u7684\u4EE3\u7801\u4E0D\u6267\u884C</h4>`,56),b=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"FileNotFoundException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\u6267\u884C\u7ED3\u679C:"'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" num"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u8FD4\u56DE\u6267\u884C finally \u4E4B\u524D\u7684 num \u503C == 1"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"finally"),s(),n("span",{class:"token punctuation"},"{"),s(`
        num`),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// num = 2"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"FileNotFoundException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"\u6267\u884C\u7ED3\u679C:"'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// doSth()"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"finally"),s(),n("span",{class:"token punctuation"},"{"),s(`
        num`),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// num = 2"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" num"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u8FD4\u56DE num = 2"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("ul",null,[n("li",null,[s("\u5728 try-catch \u8BED\u53E5\u4E2D\u6267\u884C\u4E86 "),n("code",null,"System.exit(0)")]),n("li",null,"\u5728 try-catch \u8BED\u53E5\u4E2D\u51FA\u73B0\u4E86\u6B7B\u5FAA\u73AF"),n("li",null,"\u5728 finally \u6267\u884C\u4E4B\u524D\u6389\u7535\u6216\u8005 JVM \u5D29\u6E83\u4E86")],-1),h=n("hr",null,null,-1),g=n("h2",{id:"_6-bigdecimal",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-bigdecimal","aria-hidden":"true"},"#"),s(" 6. BigDecimal")],-1),f=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Number"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// ----------------------- \u6784\u9020\u51FD\u6570 ----------------"),s(`
    `),n("span",{class:"token comment"},"// \u5C3D\u7BA1\u5B58\u5728\u53C2\u6570\u4E3A int | double \u7B49\u7C7B\u578B\uFF0C\u4F46\u662F\u4E3A\u4E86\u9632\u6B62\u7CBE\u5EA6\u4E22\u5931\uFF0C\u63A8\u8350\u4F7F\u7528 \u5B57\u7B26\u4E32 \u4F5C\u4E3A\u53C2\u6570\u4F20\u5165"),s(`
    `),n("span",{class:"token comment"},"// \u82E5\u4F20\u5165 double = 0.9\uFF0C\u5219\u4FDD\u5B58\u7684\u53EF\u80FD\u662F 0.900001 \u4E4B\u7C7B\u7684\u6570"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" val"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toCharArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" val"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" val"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"MathContext"),s(" mc"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toCharArray"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" val"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" mc"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[s("    "),n("span",{class:"token comment"},"// -------------- \u52A0\u51CF\u4E58\u9664 ----------------"),s(`
    `),n("span",{class:"token comment"},"// \u52A0"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),s(" augend"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("augend"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("augend"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("augend"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" augend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token comment"},"// \u51CF"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(),n("span",{class:"token function"},"subtract"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),s(" subtrahend"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("subtrahend"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),s("subtrahend"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"negate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("subtrahend"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// Pair of subtrahend values given before pair of"),s(`
                `),n("span",{class:"token comment"},"// values from this BigDecimal to avoid need for"),s(`
                `),n("span",{class:"token comment"},"// method overloading on the specialized add method"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),s("subtrahend"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"negate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" subtrahend"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token comment"},"// \u4E58"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),s(" multiplicand"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" productScale "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"checkScale"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"long"),n("span",{class:"token punctuation"},")"),s(" scale "),n("span",{class:"token operator"},"+"),s(" multiplicand"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("multiplicand"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" multiplicand"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" productScale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(" multiplicand"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" productScale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("multiplicand"),n("span",{class:"token punctuation"},"."),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),s("multiplicand"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" productScale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"multiply"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" multiplicand"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},","),s(" productScale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token comment"},"// \u9664"),s(`
    `),n("span",{class:"token comment"},"// scale - \u5C0F\u6570\u4F4D\u6570"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode - \u679A\u4E3E\u7C7B\uFF0C\u5C0F\u6570\u7684\u4FDD\u7559\u89C4\u5219\uFF0C\u6709\u5982\u4E0B\u60C5\u51B5"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.UP - \u6B63\u6570\u6709\u5C0F\u6570\uFF0C\u5219 ++\uFF1B\u8D1F\u6570\u6709\u5C0F\u6570\uFF0C\u5219 --"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.DOWN - \u6B63\u8D1F\u6570\u5747\u62B9\u53BB \u5C0F\u6570\u90E8\u5206"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.CEILING - \u5982\u679C\u7ED3\u679C\u4E3A\u6B63\uFF0C\u5219\u4E0E RoundingMode.UP \u4E00\u6837\uFF1B\u5982\u679C\u4E3A\u8D1F\uFF0C\u5219\u4E0E RoundingMode.DOWN \u7684\u884C\u4E3A\u76F8\u540C"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.FLOOR - \u5982\u679C\u7ED3\u679C\u4E3A\u6B63\uFF0C\u5219\u4E0E RoundingMode.DOWN \u4E00\u6837\uFF1B\u5982\u679C\u4E3A\u8D1F\uFF0C\u5219\u4E0E RoundingMode.UP \u4E00\u6837"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.HALF_UP - \u5982\u679C\u5C0F\u6570 >= 0.5\uFF0C\u5219\u884C\u4E3A\u4E0E RoundingMode.UP \u76F8\u540C\uFF1B\u5426\u5219\uFF0C\u884C\u4E3A\u4E0E RoundingMode.DOWN \u76F8\u540C"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.HALF_DOWN - \u5982\u679C\u5C0F\u6570 > 0.5\uFF0C\u5219\u884C\u4E3A\u4E0E RoundingMode.UP \u76F8\u540C\uFF1B\u5426\u5219\uFF0C\u884C\u4E3A\u4E0E RoundingMode.DOWN \u76F8\u540C\u3002"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.HALF_EVEN - \u5982\u679C\u4E22\u5F03\u7684\u5206\u6570\u5DE6\u8FB9\u7684\u6570\u5B57\u662F\u5947\u6570\uFF0C\u5219\u8868\u73B0\u4E0E RoundingMode.HALF_UP \u76F8\u540C\uFF1B\u5982\u679C\u662F\u5076\u6570\uFF0C\u5176\u884C\u4E3A\u4E0E RoundingMode.HALF_DOWN \u76F8\u540C"),s(`
    `),n("span",{class:"token comment"},"// RoundingMode.UNNECESSARY - \u5C0F\u6570\u90E8\u5206\u5FC5\u987B\u4E3A 0\uFF0C\u82E5\u4E0D\u662F 0 \u5219\u629B\u5F02\u5E38 ArithmeticException"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),s(" divisor"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RoundingMode"),s(" roundingMode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"divide"),n("span",{class:"token punctuation"},"("),s("divisor"),n("span",{class:"token punctuation"},","),s(" scale"),n("span",{class:"token punctuation"},","),s(" roundingMode"),n("span",{class:"token punctuation"},"."),s("oldMode"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[s("    "),n("span",{class:"token comment"},"// ---------------- \u6BD4\u8F83 -----------------"),s(`
    `),n("span",{class:"token comment"},"// \u7B49\u503C\u6BD4\u8F83\u9700\u8981\u7528\u5230\u6B64\u65B9\u6CD5\uFF0C\u800C\u975E equals()"),s(`
    `),n("span",{class:"token comment"},"// \u5C06\u6B64 BigDecimal \u4E0E\u6307\u5B9A\u7684 BigDecimal \u8FDB\u884C\u6BD4\u8F83\u3002"),s(`
    `),n("span",{class:"token comment"},"// \u6B64\u65B9\u6CD5\u8BA4\u4E3A\u4E24\u4E2A\u503C\u76F8\u7B49\u4F46\u6BD4\u4F8B\u4E0D\u540C\uFF08\u5982 2.0 \u548C 2.00\uFF09\u7684 BigDecimal \u5BF9\u8C61\u662F\u76F8\u7B49\u7684\u3002"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),s(" val"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// Quick path for equal scale and non-inflated case."),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"=="),s(" val"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"long"),s(" xs "),n("span",{class:"token operator"},"="),s(" intCompact"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"long"),s(" ys "),n("span",{class:"token operator"},"="),s(" val"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xs "),n("span",{class:"token operator"},"!="),s(" INFLATED "),n("span",{class:"token operator"},"&&"),s(" ys "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"return"),s(" xs "),n("span",{class:"token operator"},"!="),s(" ys "),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("xs "),n("span",{class:"token operator"},">"),s(" ys"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" xsign "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"signum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" ysign "),n("span",{class:"token operator"},"="),s(" val"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"signum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xsign "),n("span",{class:"token operator"},"!="),s(" ysign"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("xsign "),n("span",{class:"token operator"},">"),s(" ysign"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xsign "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" cmp "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"compareMagnitude"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("xsign "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(" cmp "),n("span",{class:"token operator"},":"),s(),n("span",{class:"token operator"},"-"),s("cmp"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token comment"},"// \u5C06\u6B64 BigDecimal \u4E0E\u6307\u5B9A\u7684 Object \u8FDB\u884C\u6BD4\u8F83\u662F\u5426\u76F8\u7B49\u3002"),s(`
    `),n("span",{class:"token comment"},"// \u4E0E compareTo \u4E0D\u540C\uFF0C\u6B64\u65B9\u6CD5\u4EC5\u5F53\u4E24\u4E2A BigDecimal \u5BF9\u8C61\u7684\u503C\u548C\u6BD4\u4F8B\u76F8\u7B49\u65F6\u624D\u8BA4\u4E3A\u5B83\u4EEC\u76F8\u7B49\uFF08\u56E0\u6B64\uFF0C\u901A\u8FC7\u6B64\u65B9\u6CD5\u8FDB\u884C\u6BD4\u8F83\u65F6\uFF0C2.0 \u4E0D\u7B49\u4E8E 2.00\uFF09\u3002"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"equals"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Object"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"BigDecimal"),s(" xDec "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"!="),s(" xDec"),n("span",{class:"token punctuation"},"."),s("scale"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"long"),s(" s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"long"),s(" xs "),n("span",{class:"token operator"},"="),s(" xDec"),n("span",{class:"token punctuation"},"."),s("intCompact"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xs "),n("span",{class:"token operator"},"=="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(`
                xs `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"compactValFor"),n("span",{class:"token punctuation"},"("),s("xDec"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"return"),s(" xs "),n("span",{class:"token operator"},"=="),s(" s"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xs "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"return"),s(" xs "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token function"},"compactValFor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("intVal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"inflated"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"equals"),n("span",{class:"token punctuation"},"("),s("xDec"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"inflated"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[s("    "),n("span",{class:"token comment"},"// ----------------- \u8F6C\u6362\u4E3A \u57FA\u672C\u6570\u636E\u7C7B\u578B ------------------"),s(`
    `),n("span",{class:"token comment"},"// \u8BE5 BigDecimal \u7684\u4EFB\u4F55\u5C0F\u6570\u90E8\u5206\u90FD\u5C06\u88AB\u4E22\u5F03\uFF0C\u5E76\u4E14\u5982\u679C\u751F\u6210\u7684\u201CBigInteger\u201D\u592A\u5927\u800C\u65E0\u6CD5\u653E\u5165a long\uFF0C\u53EA\u8FD4\u56DE\u4F4E\u4F4D 64 \u4F4D\u3002"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"long"),s(),n("span",{class:"token function"},"longValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED "),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"return"),s(" intCompact"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// Fastpath zero and small values"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"signum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token function"},"fractionOnly"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"||"),s(`
                `),n("span",{class:"token comment"},"// Fastpath very large-scale values that will result"),s(`
                `),n("span",{class:"token comment"},"// in a truncated value of zero. If the scale is -64"),s(`
                `),n("span",{class:"token comment"},"// or less, there are at least 64 powers of 10 in the"),s(`
                `),n("span",{class:"token comment"},"// value of the numerical result. Since 10 = 2*5, in"),s(`
                `),n("span",{class:"token comment"},"// that case there would also be 64 powers of 2 in the"),s(`
                `),n("span",{class:"token comment"},"// result, meaning all 64 bits of a long will be zero."),s(`
                scale `),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"64"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"toBigInteger"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"longValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"intValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s("  "),n("span",{class:"token punctuation"},"("),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED "),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},")"),s("intCompact "),n("span",{class:"token operator"},":"),s(`
            `),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},")"),n("span",{class:"token function"},"longValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"float"),s(),n("span",{class:"token function"},"floatValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),n("span",{class:"token punctuation"},")"),s("intCompact"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},`/*
                 * If both intCompact and the scale can be exactly
                 * represented as float values, perform a single float
                 * multiply or divide to compute the (properly
                 * rounded) result.
                 */`),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"abs"),n("span",{class:"token punctuation"},"("),s("intCompact"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1L"),n("span",{class:"token operator"},"<<"),n("span",{class:"token number"},"22"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token comment"},"// Don't have too guard against"),s(`
                    `),n("span",{class:"token comment"},"// Math.abs(MIN_VALUE) because of outer check"),s(`
                    `),n("span",{class:"token comment"},"// against INFLATED."),s(`
                    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},"<"),s(" float10pow"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),n("span",{class:"token punctuation"},")"),s("intCompact "),n("span",{class:"token operator"},"/"),s(" float10pow"),n("span",{class:"token punctuation"},"["),s("scale"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
                    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"-"),s("float10pow"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),n("span",{class:"token punctuation"},")"),s("intCompact "),n("span",{class:"token operator"},"*"),s(" float10pow"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),s("scale"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
                    `),n("span",{class:"token punctuation"},"}"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// Somewhat inefficient, but guaranteed to work."),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token class-name"},"Float"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parseFloat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"double"),s(),n("span",{class:"token function"},"doubleValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("intCompact "),n("span",{class:"token operator"},"!="),s(" INFLATED"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"double"),n("span",{class:"token punctuation"},")"),s("intCompact"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},`/*
                 * If both intCompact and the scale can be exactly
                 * represented as double values, perform a single
                 * double multiply or divide to compute the (properly
                 * rounded) result.
                 */`),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"abs"),n("span",{class:"token punctuation"},"("),s("intCompact"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1L"),n("span",{class:"token operator"},"<<"),n("span",{class:"token number"},"52"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token comment"},"// Don't have too guard against"),s(`
                    `),n("span",{class:"token comment"},"// Math.abs(MIN_VALUE) because of outer check"),s(`
                    `),n("span",{class:"token comment"},"// against INFLATED."),s(`
                    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},"<"),s(" double10pow"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"double"),n("span",{class:"token punctuation"},")"),s("intCompact "),n("span",{class:"token operator"},"/"),s(" double10pow"),n("span",{class:"token punctuation"},"["),s("scale"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
                    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("scale "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" scale "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"-"),s("double10pow"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"double"),n("span",{class:"token punctuation"},")"),s("intCompact "),n("span",{class:"token operator"},"*"),s(" double10pow"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),s("scale"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
                    `),n("span",{class:"token punctuation"},"}"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// Somewhat inefficient, but guaranteed to work."),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parseDouble"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function S(j,I){const o=i("Tabs");return u(),k("div",null,[v,c(o,{data:[{title:"orig"},{title:"\u4FEE\u6B63"}],"tab-id":"code10"},{tab0:a(({title:t,value:e,isActive:p})=>[b]),tab1:a(({title:t,value:e,isActive:p})=>[y]),_:1}),w,h,g,c(o,{data:[{title:"\u6784\u9020\u51FD\u6570"},{title:"\u52A0\u51CF\u4E58\u9664"},{title:"\u6BD4\u8F83"},{title:"\u7C7B\u578B\u8F6C\u6362"}],"tab-id":"code6"},{tab0:a(({title:t,value:e,isActive:p})=>[f]),tab1:a(({title:t,value:e,isActive:p})=>[C]),tab2:a(({title:t,value:e,isActive:p})=>[_]),tab3:a(({title:t,value:e,isActive:p})=>[x]),_:1})])}var N=l(m,[["render",S],["__file","\u5E38\u89C1\u7C7B.html.vue"]]);export{N as default};
