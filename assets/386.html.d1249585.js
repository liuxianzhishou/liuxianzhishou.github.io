import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var e="/assets/img_56.9a2c075b.png",t="/assets/img_55.aa81f4ca.png",c="/assets/img_57.fed26fed.png";const o={},l=p('<h1 id="_386-\u5B57\u5178\u5E8F\u6392\u6570" tabindex="-1"><a class="header-anchor" href="#_386-\u5B57\u5178\u5E8F\u6392\u6570" aria-hidden="true">#</a> \u{1F315}\u{1F315} 386. \u5B57\u5178\u5E8F\u6392\u6570</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+e+`" alt="img_56.png"></p><hr><h3 id="\u89E3\u6CD5-1-\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-\u9012\u5F52" aria-hidden="true">#</a> \u89E3\u6CD5 1 - \u9012\u5F52</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">lexicalOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u53EF\u4EE5\u770B\u4F5C\u591A\u53C9\u6811\uFF0C\u6BCF\u4E00\u5C42\u6709 0-9 \u79CD\u9009\u62E9</span>
        <span class="token comment">// \u5148\u5E8F\u904D\u5386\u7ED3\u679C\u5373\u4E3A\u5B57\u5178\u5E8F</span>
        <span class="token comment">// \u6700\u591A\u6709 5 \u5C42\uFF0C\u56E0\u6B64\u53EF\u4EE5\u770B\u4F5C O(1) \u7A7A\u95F4\u590D\u6742\u5EA6</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">mySol</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// left &lt;= right</span>
        res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EE7\u7EED\u5F80\u4E0B\u4E00\u5C42\u5BFB\u627E</span>
        left <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">mySol</span><span class="token punctuation">(</span>left <span class="token operator">+</span> i<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+t+`" alt="img_55.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u8FED\u4EE3" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u8FED\u4EE3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">lexicalOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u8FED\u4EE3</span>
        <span class="token comment">// \u5047\u8BBE\u5F53\u524D\u503C\u4E3A cur\uFF0C\u4E0B\u4E00\u6B21\u5C1D\u8BD5\u6DFB\u52A0 cur * 10\uFF0C\u5982\u679C cur*10 \u4E0D\u6EE1\u8DB3\u8981\u6C42\uFF0C\u5C1D\u8BD5\u6DFB\u52A0 cur + 1\uFF0C</span>
        <span class="token comment">// \u76F4\u5230 cur \u6700\u4F4E\u4E3A\u4E3A 9\uFF0C\u8FD4\u56DE\u4E0A\u4E00\u5C42\uFF0C\u5373 cur /= 10</span>
        <span class="token comment">// \u6BCF\u6B21\u5FAA\u73AF\u53D8\u66F4\u4E00\u6B21 cur \u7684\u72B6\u6001\uFF0C\u56E0\u6B64\u4E00\u5171\u9700\u8981\u5FAA\u73AF n \u6B21</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u83B7\u53D6 cur \u7684\u4E0B\u4E00\u4E2A\u6709\u6548\u72B6\u6001</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cur <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u5C1D\u8BD5\u5728 cur \u540E\u9762\u6DFB\u52A0 0</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// cur \u5DF2\u7ECF\u662F\u6700\u5E95\u5C42\u4E86\uFF0C\u65E0\u6CD5\u7EE7\u7EED\u5230\u4E0B\u4E00\u5C42</span>
                <span class="token comment">// \u5C1D\u8BD5\u5728\u5F53\u524D\u5C42\u627E\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u5982\u679C\u5F53\u524D\u5C42\u4E0D\u5B58\u5728\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u7EE7\u7EED\u5F80\u4E0A\u4E00\u5C42\u627E</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span>cur <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">9</span> <span class="token operator">||</span> cur <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cur <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u76F4\u5230\u4E0A\u9762\u7684\u67D0\u4E2A\u5C42\u5E76\u4E0D\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9</span>
                <span class="token punctuation">}</span>
                cur <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+c+'" alt="img_57.png"></p>',16),i=[l];function u(r,k){return s(),a("div",null,i)}var v=n(o,[["render",u],["__file","386.html.vue"]]);export{v as default};
