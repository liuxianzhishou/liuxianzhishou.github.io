import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.5aebcaaa.js";var p="/assets/img_22.0143e172.png",e="/assets/img_21.13c3d5b5.png",o="/assets/img_23.757f3b2e.png";const c={},i=t('<h1 id="_307-\u533A\u57DF\u548C\u68C0\u7D22-\u6570\u7EC4\u53EF\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#_307-\u533A\u57DF\u548C\u68C0\u7D22-\u6570\u7EC4\u53EF\u4FEE\u6539" aria-hidden="true">#</a> \u{1F315}\u{1F315}\u{1F317} 307. \u533A\u57DF\u548C\u68C0\u7D22 - \u6570\u7EC4\u53EF\u4FEE\u6539</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}\u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+p+`" alt="img_22.png"></p><hr><h3 id="\u89E3\u6CD5-1-\u6811\u72B6\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-\u6811\u72B6\u6570\u7EC4" aria-hidden="true">#</a> \u89E3\u6CD5 1 - \u6811\u72B6\u6570\u7EC4</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">NumArray</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u601D\u8DEF\uFF1A</span>
    <span class="token comment">// \u6811\u72B6\u6570\u7EC4 - \u4FEE\u6539\u67D0\u4E2A\u4E0B\u6807\u5904\u7684\u503C\u65F6\uFF0C\u53EA\u4FEE\u6539\u90E8\u5206\u4E0B\u6807\u5904\u7684\u503C\uFF1B\u67E5\u8BE2\u67D0\u4E2A\u533A\u95F4\u548C\u65F6\uFF0C\u67E5\u8BE2\u90E8\u5206\u533A\u95F4- O(logN)</span>
    <span class="token comment">// \u5229\u7528\u516C\u5F0F x &amp; (-x) \u83B7\u53D6\u9700\u8981\u7684\u67D0\u4E9B\u4E2A\u4E0B\u6807\uFF0C\u8BE5\u516C\u5F0F\u53EF\u4EE5\u5F97\u5230 x \u7684\u6700\u4F4E\u4F4D 1 \u6240\u5728\u7684\u4F4D\u5BF9\u5E94\u7684 2 \u7684\u5E42</span>
    <span class="token comment">// \u4F8B\uFF1A</span>
    <span class="token comment">// x == 5 == 0 0101 ; -x = x \u7684\u8865\u7801 + 1 = 1 1010 + 1 = 1 1011 ; x &amp; (-x) = 0 0101 &amp; 1 1011 = 1 = 2 ^ 0</span>
    <span class="token comment">// \u7531\u4E8E 0 \u7684\u7279\u6B8A\u6027\uFF0C0 &amp; (-0) = 0 \u9632\u6B62\u9020\u6210\u6B7B\u5FAA\u73AF\uFF0C\u9700\u8981\u4ECE \u4E0B\u6807 1 \u5F00\u59CB\uFF0C\u8BBE\u4E3A arr[len + 1]</span>
    <span class="token comment">// 1 : 0 0001 --&gt; 2^0 = 1</span>
    <span class="token comment">// 2 : 0 0010 --&gt; 2^1 = 2</span>
    <span class="token comment">// 3 : 0 0011 --&gt; 2^0 = 1</span>
    <span class="token comment">// 4 : 0 0100 --&gt; 2^2 = 4</span>
    <span class="token comment">// 5 : 0 0101 --&gt; 2^0 = 1</span>
    <span class="token comment">// 6 : 0 0110 --&gt; 2^1 = 2</span>
    <span class="token comment">// 7 : 0 0111 --&gt; 2^0 = 1</span>
    <span class="token comment">// 8 : 0 1000 --&gt; 2^3 = 8</span>
    <span class="token comment">// 9 : 0 1001 --&gt; 2^0 = 1</span>
    <span class="token comment">// 10: 0 1010 --&gt; 2^1 = 2</span>
    <span class="token comment">// 11: 0 1011 --&gt; 2^0 = 1</span>
    <span class="token comment">// 12: 0 1100 --&gt; 2^2 = 4</span>
    <span class="token comment">// 13: 0 1101 --&gt; 2^0 = 1</span>
    <span class="token comment">// 14: 0 1110 --&gt; 2^1 = 2</span>
    <span class="token comment">// 15: 0 1111 --&gt; 2^0 = 1</span>
    <span class="token comment">// \u53EF\u5C31\u662F\u8BF4\uFF0C\u4FEE\u6539 | \u63D2\u5165 \u67D0\u4E2A\u4E0B\u6807\u65F6\uFF0C\u9700\u8981\u4FEE\u6539\u4E00\u6761\u94FE\u8DEF\uFF0C\u5047\u8BBE max(index) = 16\uFF0C\u5373 len == 17\uFF0C\u5219</span>
    <span class="token comment">// 1 --&gt; 2 --&gt; 4 --&gt; 8 --&gt; 16</span>
    <span class="token comment">// 3 --&gt; 4 --&gt; 8 --&gt; 16</span>
    <span class="token comment">// 5 --&gt; 6 --&gt; 8 --&gt; 16</span>
    <span class="token comment">// 7 --&gt; 8 --&gt; 16</span>
    <span class="token comment">// 9 --&gt; 10 --&gt; 12 --&gt; 16</span>
    <span class="token comment">// 11 --&gt; 12 --&gt; 16</span>
    <span class="token comment">// 13 --&gt; 14 --&gt; 16</span>
    <span class="token comment">// 15 --&gt; 16</span>
    <span class="token comment">// \u5C06\u8FD9\u4E9B\u4F9D\u8D56\u5173\u7CFB\u753B\u6210\u6811\u7ED3\u6784\uFF0C\u53EF\u4EE5\u770B\u51FA\uFF0C\u662F\u4E00\u9897\u975E\u5BF9\u79F0\u7684\u591A\u53C9\u6811\uFF0C\u4FEE\u6539\u67D0\u4E2A\u53F6\u5B50\u8282\u70B9\uFF0C\u5219\u8BE5\u6761\u6811\u8F6C\u4E0A\u7684\u503C\u5747\u9700\u6539\u53D8</span>
    <span class="token comment">// \u8981\u6C42\u67D0\u4E2A\u533A\u95F4 [0, ?] \u7684\u533A\u95F4\u548C\uFF0C\u90A3\u4E48\u5C31\u53CD\u5411\u8BA1\u7B97\uFF0C\u7528 ? - \u5F53\u524D\u7684 x &amp; (0x) \u4F5C\u4E3A\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C</span>
    <span class="token comment">// \u4F8B\uFF0C[0, 11] = arr[12] + arr[12 - 4] = arr[12] + arr[8]</span>

    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">;</span>
    <span class="token keyword">int</span> len<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">NumArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nums <span class="token operator">=</span> nums<span class="token punctuation">;</span>
        arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0B\u6807 0 \u5E9F\u5F03\u9632\u6B62\u51FA\u73B0\u6B7B\u5FAA\u73AF</span>
        <span class="token comment">// \u521D\u59CB\u5316 arr</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">insert</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println(Arrays.toString(arr));</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316\u65F6\uFF0C\u5C06\u521D\u59CB\u6570\u7EC4\u7684\u503C\u4F9D\u6B21\u63D2\u5165\u5230 arr \u5BF9\u5E94\u4F4D\u7F6E\uFF0C\u6B64\u5916\u76F8\u5173\u94FE\u8DEF\u5904\u7684\u503C\u4E5F\u9700\u6539\u53D8</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">&lt;=</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+=</span> val<span class="token punctuation">;</span>
            index <span class="token operator">=</span> <span class="token function">getNextIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getNextIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> index <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> index <span class="token operator">+</span> step<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u66F4\u65B0\u5F53\u524D\u4E0B\u6807\u5BF9\u5E94\u4E00\u6574\u6761\u94FE\u8DEF\u7684\u76F8\u5173\u503C</span>
        <span class="token keyword">int</span> diff <span class="token operator">=</span> val <span class="token operator">-</span> nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5DEE\u503C</span>
        nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0 nums</span>
        <span class="token function">insert</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> diff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sumRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// sum[right + 1] - sum[left]</span>
        <span class="token keyword">return</span> <span class="token function">getSum</span><span class="token punctuation">(</span>right <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getSum</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// sum[0, end - 1] = arr[end] + arr[...]</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>end <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">+=</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
            end <span class="token operator">=</span> <span class="token function">getPrevIndex</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getPrevIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> index <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">-</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> index <span class="token operator">-</span> step<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.update(index,val);
 * int param_2 = obj.sumRange(left,right);
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img_21.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u7EBF\u6BB5\u6811" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u7EBF\u6BB5\u6811" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u7EBF\u6BB5\u6811</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">NumArray</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u601D\u8DEF\uFF1A</span>
    <span class="token comment">// \u7EBF\u6BB5\u6811 - \u5C06\u6574\u4E2A\u533A\u95F4\u5206\u6210 2 \u90E8\u5206\uFF0C\u7136\u540E\u9012\u5F52\u7EE7\u7EED\u5206\uFF0C\u76F4\u5230\u67D0\u4E2A\u533A\u95F4\u53EA\u5269\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token comment">// \u4FEE\u6539\u65F6\uFF0C\u4FEE\u6539\u8BE5\u8282\u70B9\u5BF9\u5E94\u7684\u6574\u6761\u94FE\u8DEF</span>
    <span class="token comment">// \u5982\u679C\u8BF4 \u6811\u72B6\u6570\u7EC4\u662F\u975E\u5E73\u8861\u591A\u53C9\u6811\uFF0C\u90A3\u4E48 \u7EBF\u6BB5\u6811 \u5C31\u662F \u5E73\u8861\u4E8C\u53C9\u6811</span>
    <span class="token comment">// \u80FD\u7528 \u7EBF\u6BB5\u6811 \u89E3\u51B3\u7684\u95EE\u9898\uFF0C\u6811\u72B6\u6570\u7EC4\u4E0D\u4E00\u5B9A\u80FD\u591F\u89E3\u51B3\uFF1B\u4F46\u53CD\u4E4B\u4E00\u5B9A\u6210\u7ACB\u3002</span>
    <span class="token comment">// \u56E0\u6B64 \u7EBF\u6BB5\u6811 \u7684\u529F\u80FD\u6BD4 \u6811\u72B6\u6570\u7EC4 \u8981\u5F3A\u5927</span>

    <span class="token keyword">private</span> <span class="token class-name">TreeNode</span> root<span class="token punctuation">;</span>
    <span class="token keyword">int</span> len<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">NumArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nums <span class="token operator">=</span> nums<span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u7EBF\u6BB5\u6811</span>
        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span> cur <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">addDiff</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u627E\u5230 index \u5BF9\u5E94\u7684\u53F6\u5B50\u8282\u70B9</span>
    <span class="token keyword">private</span> <span class="token class-name">TreeNode</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> cur<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>startIndex <span class="token operator">==</span> cur<span class="token punctuation">.</span>endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> cur<span class="token punctuation">.</span>startIndex <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>endIndex <span class="token operator">-</span> cur<span class="token punctuation">.</span>startIndex<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6CA1\u6709\u5B50\u8282\u70B9\uFF0C\u5148\u8FDB\u884C\u521D\u59CB\u5316</span>
            cur<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>startIndex<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> cur<span class="token punctuation">.</span>endIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>left<span class="token punctuation">.</span>parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>right<span class="token punctuation">.</span>parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD\u662F\u5F80\u5DE6\u5B50\u6811\u627E\u8FD8\u662F\u53F3\u5B50\u6811\u627E</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getNode</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getNode</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>right<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4ECE\u53F6\u5B50\u8282\u70B9\u5F00\u59CB\uFF0C\u5F80\u4E0A\u4FEE\u6539\u6574\u6761\u94FE\u8DEF\u7684\u503C</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addDiff</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> cur<span class="token punctuation">,</span> <span class="token keyword">int</span> diff<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cur<span class="token punctuation">.</span>val <span class="token operator">+=</span> diff<span class="token punctuation">;</span>
        <span class="token comment">// \u5DF2\u7ECF\u5230\u8FBE\u6839\u8282\u70B9\uFF0C\u4FEE\u6539\u5B8C\u6839\u8282\u70B9\u540E\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">addDiff</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>parent<span class="token punctuation">,</span> diff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> diff <span class="token operator">=</span> val <span class="token operator">-</span> nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span> cur <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addDiff</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> diff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">sumRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getSum</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> cur<span class="token punctuation">,</span> <span class="token keyword">int</span> startIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>startIndex <span class="token operator">==</span> startIndex <span class="token operator">&amp;&amp;</span> cur<span class="token punctuation">.</span>endIndex <span class="token operator">==</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cur<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD\u662F\u5305\u542B\u4E00\u4E2A\u5B50\u6811 \u8FD8\u662F \u4E24\u4E2A\u5B50\u6811 \u5747\u6709\u90E8\u5206</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> cur<span class="token punctuation">.</span>startIndex <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>endIndex <span class="token operator">-</span> cur<span class="token punctuation">.</span>startIndex<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>endIndex <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EA\u6709\u5DE6\u5B50\u6811</span>
            <span class="token keyword">return</span> <span class="token function">getSum</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>startIndex <span class="token operator">&gt;</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53EA\u6709\u53F3\u5B50\u6811</span>
            <span class="token keyword">return</span> <span class="token function">getSum</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>right<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E24\u4E2A\u5B50\u6811\u5747\u6709\u90E8\u5206\u8981\u6C42\u548C</span>
            <span class="token keyword">return</span> <span class="token function">getSum</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> mid<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getSum</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>right<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6784\u9020\u7EBF\u6BB5\u6811\u8282\u70B9\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">TreeNode</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> startIndex<span class="token punctuation">;</span>
    <span class="token keyword">int</span> endIndex<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span> <span class="token comment">// [startIndex, endIndex] \u533A\u95F4\u548C</span>
    
    <span class="token class-name">TreeNode</span> parent<span class="token punctuation">;</span> <span class="token comment">// \u9664\u4E86\u9700\u8981\u5F80\u4E0B\u9012\u5F52\uFF0C\u5728\u66F4\u65B0\u8282\u70B9\u65F6\uFF0C\u8FD8\u9700\u8981\u5F80\u4E0A\u9012\u5F52\u66F4\u65B0\u7236\u8282\u70B9\u503C</span>
    <span class="token class-name">TreeNode</span> left<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> right<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> startIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> endIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>startIndex <span class="token operator">=</span> startIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endIndex <span class="token operator">=</span> endIndex<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.update(index,val);
 * int param_2 = obj.sumRange(left,right);
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+o+'" alt="img_23.png"></p>',16),l=[i];function u(k,r){return s(),a("div",null,l)}var v=n(c,[["render",u],["__file","307.html.vue"]]);export{v as default};
