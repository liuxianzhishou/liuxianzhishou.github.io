import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.5aebcaaa.js";var p="/assets/img_20.0a8775db.png",t="/assets/img_18.bff267c5.png",o="/assets/img_19.8f8ac273.png";const c={},l=e('<h1 id="_190-\u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D" tabindex="-1"><a class="header-anchor" href="#_190-\u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D" aria-hidden="true">#</a> \u{1F315} \u{1F317} 190. \u98A0\u5012\u4E8C\u8FDB\u5236\u4F4D</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+p+`" alt="img_20.png"></p><hr><h3 id="\u89E3\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1" aria-hidden="true">#</a> \u89E3\u6CD5 1</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">// you need treat n as an unsigned value</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">reverseBits</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF:</span>
        <span class="token comment">// 2^0 * [31] + 2^2 * [30] + ... + 2^31 * [0]</span>
        <span class="token comment">// \u4ECE\u4F4E\u4F4D\u5F00\u59CB\u4F9D\u6B21\u5224\u65AD\u662F\u5426\u4E3A 1\uFF0C\u82E5\u4E3A 1 * \u5BF9\u5E94\u7684 2 \u7684 n \u6B21\u65B9</span>
        <span class="token keyword">long</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// System.out.println(i + &quot;  &quot; + res);</span>
                res <span class="token operator">=</span> res <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">31</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            n <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+t+`" alt="img_18.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u5206\u6CBB" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u5206\u6CBB" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u5206\u6CBB</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">// you need treat n as an unsigned value</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">reverseBits</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u4F18\u5316 - \u5206\u6CBB</span>
        <span class="token comment">// \u5047\u8BBE\u73B0\u5728\u6709 8 \u4F4D\u4E8C\u8FDB\u5236\u8868\u793A\u7684\u6570\uFF0C\u4E8C\u8FDB\u5236\u8868\u793A\u4E3A a b c d e f g h</span>
        <span class="token comment">// \u8981\u60F3\u83B7\u5F97\u53CD\u8F6C\u7ED3\u679C h g f e d c b a</span>
        <span class="token comment">// \u53EF\u4EE5\u91C7\u7528\u4EE5\u4E0B\u65B9\u5F0F\uFF1A</span>
        <span class="token comment">// 1. \u4EE5 2 \u4F4D \u4E3A\u5355\u4F4D\u8FDB\u884C\u4E92\u6362 =&gt; b a | d c | f e | h g</span>
        <span class="token comment">// 2. \u4EE5 4 \u4F4D \u4E3A\u5355\u4F4D\u4E92\u6362 =&gt; dc ba | hg fe</span>
        <span class="token comment">// 3. \u4EE5 8 \u4F4D \u4E3A\u5355\u4F4D\u4E92\u6362 =&gt; hg fe dc ba \u4ECE\u800C\u5F97\u5230\u7ED3\u679C</span>
        <span class="token comment">// 32 \u4F4D\u540C\u7406</span>
        <span class="token keyword">int</span> tmp2 <span class="token operator">=</span> <span class="token number">1431655765</span><span class="token punctuation">;</span> <span class="token comment">// 01010101010101010101010101010101</span>
        <span class="token keyword">int</span> tmp4 <span class="token operator">=</span> <span class="token number">858993459</span><span class="token punctuation">;</span> <span class="token comment">// 00110011001100110011001100110011</span>
        <span class="token keyword">int</span> tmp8 <span class="token operator">=</span> <span class="token number">252645135</span><span class="token punctuation">;</span> <span class="token comment">// 00001111000011110000111100001111;</span>
        <span class="token keyword">int</span> tmp16 <span class="token operator">=</span> <span class="token number">16711935</span><span class="token punctuation">;</span> <span class="token comment">// 00000000111111110000000011111111;</span>
        <span class="token keyword">int</span> tmp32 <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span> <span class="token comment">// 00000000000000001111111111111111;</span>

        <span class="token comment">// \u4EE5 2 \u4F4D\u4E3A\u5355\u4F4D\u8FDB\u884C\u4E92\u6362\uFF0C\u5373 \u83B7\u53D6\u5947\u6570\u4F4D a &amp; \u5076\u6570\u4F4D b \u540E\uFF0C\u5C06 b \u8C03\u6362\u5230 a \u7684\u524D\u9762</span>
        <span class="token keyword">int</span> odd <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tmp2<span class="token punctuation">;</span>
        <span class="token keyword">int</span> even <span class="token operator">=</span> n <span class="token operator">&amp;</span> tmp2<span class="token punctuation">;</span>
        even <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5076\u6570\u4F4D\u5DE6\u79FB\uFF0C\u5947\u6570\u4F4D\u5DF2\u7ECF\u53F3\u79FB\u4E86</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> odd <span class="token operator">|</span> even<span class="token punctuation">;</span>
        <span class="token comment">// \u4EE5 4 \u4F4D\u4E3A\u5355\u4F4D\u4E92\u6362</span>
        odd <span class="token operator">=</span> <span class="token punctuation">(</span>res <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tmp4<span class="token punctuation">;</span> <span class="token comment">// res \u53F3\u79FB\u53EF\u4EE5\u770B\u51FA\uFF0Codd \u4F4D\u5DF2\u7ECF\u5230\u4E86\u4F4E\u4F4D\u5904</span>
        even <span class="token operator">=</span> res <span class="token operator">&amp;</span> tmp4<span class="token punctuation">;</span>
        even <span class="token operator">&lt;&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> odd <span class="token operator">|</span> even<span class="token punctuation">;</span>

        odd <span class="token operator">=</span> <span class="token punctuation">(</span>res <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tmp8<span class="token punctuation">;</span>
        even <span class="token operator">=</span> res <span class="token operator">&amp;</span> tmp8<span class="token punctuation">;</span>
        even <span class="token operator">&lt;&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> odd <span class="token operator">|</span> even<span class="token punctuation">;</span>

        odd <span class="token operator">=</span> <span class="token punctuation">(</span>res <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tmp16<span class="token punctuation">;</span>
        even <span class="token operator">=</span> res <span class="token operator">&amp;</span> tmp16<span class="token punctuation">;</span>
        even <span class="token operator">&lt;&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> odd <span class="token operator">|</span> even<span class="token punctuation">;</span>

        odd <span class="token operator">=</span> <span class="token punctuation">(</span>res <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tmp32<span class="token punctuation">;</span>
        even <span class="token operator">=</span> res <span class="token operator">&amp;</span> tmp32<span class="token punctuation">;</span>
        even <span class="token operator">&lt;&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        res <span class="token operator">=</span> odd <span class="token operator">|</span> even<span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+o+'" alt="img_19.png"></p>',16),i=[l];function r(u,d){return s(),a("div",null,i)}var v=n(c,[["render",r],["__file","190.html.vue"]]);export{v as default};
