import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_3.299e9abe.png",e="/assets/img_2.9bfb1642.png";const o={},c=p('<h1 id="_421-\u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u6700\u5927\u5F02\u6216\u503C" tabindex="-1"><a class="header-anchor" href="#_421-\u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u6700\u5927\u5F02\u6216\u503C" aria-hidden="true">#</a> \u{1F315}\u{1F315}\u{1F317} 421. \u6570\u7EC4\u4E2D\u4E24\u4E2A\u6570\u7684\u6700\u5927\u5F02\u6216\u503C</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}\u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_3.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMaximumXOR</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u6784\u9020\u5B57\u5178\u6811\uFF0C\u53EA\u6709\u5DE6\u53F3\u4E24\u4E2A\u8282\u70B9\uFF0C\u5206\u522B\u8868\u793A 0 &amp; 1</span>
        <span class="token comment">// 1. \u904D\u5386\u5143\u7D20\uFF0C\u521D\u59CB\u5316\u5B57\u5178\u6811</span>
        <span class="token comment">// 2. \u5B9A\u4F4D\u5230\u9996\u8282\u70B9\uFF0C\u8BE5\u8282\u70B9\u5904 cur.left != null &amp;&amp; cur.right != null \u6B63\u597D\u51FA\u73B0 0 &amp; 1 </span>
        <span class="token comment">// 3. \u9012\u5F52\u627E\u5230\u6700\u5927\u8FD0\u7B97\u7ED3\u679C</span>
        <span class="token class-name">Node</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1. \u590D\u6742\u5EA6 O(30 * N)</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2^31 - 1 \u6700\u9AD8\u4F4D\u7684 1 \u6240\u5728\u4F4D\u7F6E\u4E3A 1 &lt;&lt;&lt; 30</span>
            <span class="token keyword">int</span> monitor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u53C2\u7167\u503C\u4E0E\u4E4B\u5F02\u6216\u5224\u65AD\u8BE5\u4F4D\u662F\u5426\u4E3A 1</span>
            <span class="token class-name">Node</span> tmp <span class="token operator">=</span> root<span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>monitor <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6839\u636E\u6BCF\u4F4D\u7684\u503C\u8FDB\u884C\u5DE6\u53F3\u8282\u70B9\u7684\u63D2\u5165</span>
                <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token punctuation">(</span>monitor <span class="token operator">&amp;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        tmp<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    tmp <span class="token operator">=</span> tmp<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        tmp<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    tmp <span class="token operator">=</span> tmp<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                monitor <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2. \u590D\u6742\u5EA6 O(31)</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> root<span class="token punctuation">;</span>
        <span class="token keyword">int</span> pow <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
        <span class="token comment">// node != null \u4E3A\u4E86\u9632\u6B62\u53EA\u6709\u4E00\u6761\u5206\u53C9\u7EBF\u5BFC\u81F4 node == null</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                node <span class="token operator">=</span> node<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                node <span class="token operator">=</span> node<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            pow <span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// node.left != null &amp;&amp; node.right != null</span>
        <span class="token comment">// \u51FA\u73B0\u540C\u65F6\u5B58\u5728 0 &amp; 1 \u7684\u8282\u70B9</span>
        <span class="token keyword">return</span> <span class="token function">mySol</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> pow<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token class-name">Node</span> a<span class="token punctuation">,</span> <span class="token class-name">Node</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> pow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6C42 \u8282\u70B9 a &amp; \u8282\u70B9 b \u7684\u5F02\u6216\u503C </span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>val <span class="token operator">!=</span> b<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BE5\u4F4D\u8D21\u732E\u4E86\u4E00\u4EFD\u5F02\u6216\u503C</span>
            res <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> pow<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5224\u65AD\u5F80\u54EA\u4E2A\u65B9\u5411\u9012\u5F52</span>
        <span class="token comment">// \u6BCF\u4E2A\u8282\u70B9\u6709 2 \u79CD\u5206\u652F\u9009\u62E9\uFF0C\u4F46\u82E5\u662F\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\uFF0C\u90A3\u4E48\u53EA\u5269\u4E0B\u4E00\u6761\u8DEF</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// a.right != null --&gt; a \u53EA\u80FD\u8D70 right \u65B9\u5411\uFF0C\u6700\u7406\u60F3\u7684\u60C5\u51B5\u662F b \u80FD\u8D70 left \u65B9\u5411</span>
            <span class="token comment">// \u5224\u65AD b \u8D70\u54EA\u4E2A\u65B9\u5411</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>right<span class="token punctuation">,</span> b<span class="token punctuation">.</span>left<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>right<span class="token punctuation">,</span> b<span class="token punctuation">.</span>right<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// a.left != null</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>left<span class="token punctuation">,</span> b<span class="token punctuation">.</span>right<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>left<span class="token punctuation">,</span> b<span class="token punctuation">.</span>left<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// a.left != null &amp;&amp; a.right != null</span>
            <span class="token comment">// \u4E0D\u8BBA\u8D70 b \u7684\u5DE6\u8FB9\u8FD8\u662F\u53F3\u8FB9\uFF0C\u603B\u80FD\u6709\u4E00\u79CD\u9009\u62E9\u6EE1\u8DB3\u540C\u65F6\u51FA\u73B0 1 &amp; 0 \u7684\u60C5\u51B5</span>
            <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>left<span class="token punctuation">,</span> b<span class="token punctuation">.</span>right<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mySol</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>right<span class="token punctuation">,</span> b<span class="token punctuation">.</span>left<span class="token punctuation">,</span> pow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> left<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> right<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+e+'" alt="img_2.png"></p>',10),l=[c];function i(u,k){return s(),a("div",null,l)}var m=n(o,[["render",i],["__file","421.html.vue"]]);export{m as default};
