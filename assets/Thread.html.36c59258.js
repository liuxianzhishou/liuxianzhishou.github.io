import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.5aebcaaa.js";var t="/assets/img_3.591a820d.png";const p={},c=e(`<h1 id="thread" tabindex="-1"><a class="header-anchor" href="#thread" aria-hidden="true">#</a> \u{1F7E4} Thread</h1><h2 id="_1-\u7C7B\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u6CE8\u91CA" aria-hidden="true">#</a> 1. \u7C7B\u6CE8\u91CA</h2><ul><li>JVM \u5141\u8BB8\u591A\u7EBF\u7A0B\u5E76\u53D1\u6267\u884C</li></ul><hr><ul><li>\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u6709\u7528\u4E00\u4E2A<strong>\u4F18\u5148\u7EA7</strong>\uFF1A\u4F18\u5148\u7EA7\u8D8A\u9AD8\u8BF4\u660E\u7EBF\u7A0B\u8D8A\u5BB9\u6613\u88AB\u6267\u884C</li><li>\u6BCF\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u88AB\u8BBE\u7F6E\u4E3A <strong>\u5B88\u62A4\u7EBF\u7A0B</strong></li><li>\u82E5\u67D0\u4E2A\u7EBF\u7A0B\u91CC\u9762\u53C8\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65B0\u7EBF\u7A0B\u548C\u7236\u7EBF\u7A0B\u6709\u76F8\u540C\u7684\u4F18\u5148\u7EA7\uFF0C\u4E14\u82E5\u7236\u7EBF\u7A0B\u4E3A \u5B88\u62A4\u7EBF\u7A0B\uFF0C\u5219\u8BE5\u65B0\u7EBF\u7A0B\u4E5F\u4E3A\u5B88\u62A4\u7EBF\u7A0B</li></ul><hr><ul><li>\u5F53 JVM \u8FD0\u884C\u65F6\uFF0C\u901A\u5E38\u6709\u4E00\u4E2A <code>main</code> \u7684\u975E\u5B88\u62A4\u7EBF\u7A0B</li><li>JVM \u4F1A\u7EE7\u7EED\u8FD0\u884C\uFF0C\u76F4\u5230\u6709\u4EE5\u4E0B\u67D0\u79CD\u60C5\u51B5\u53D1\u751F\uFF1A <ul><li>\u5728 Runtime \u671F\u95F4\u6267\u884C <code>exit()</code></li><li>\u6240\u6709 <strong>\u975E\u5B88\u62A4\u7EBF\u7A0B</strong> \u5747\u5DF2<strong>\u6267\u884C\u5B8C\u6BD5</strong>\uFF0C\u8981\u4E48\u6267\u884C run() \u540E\u6B63\u5E38\u8FD4\u56DE\uFF0C\u8981\u4E48\u5728 run() \u4E2D\u629B\u51FA\u5F02\u5E38</li></ul></li></ul><hr><ul><li>\u521B\u5EFA\u65B0\u7EBF\u7A0B\u7684 2 \u79CD\u65B9\u5F0F\uFF1A <ul><li>\u521B\u5EFA\u4E00\u4E2A\u7C7B <code>extends Thread</code>\uFF0C\u5E76\u91CD\u5199\u91CC\u9762\u7684 <code>run()</code> \u65B9\u6CD5</li><li>\u521B\u5EFA\u4E00\u4E2A\u7C7B <code>implements Runnable</code>\uFF0C\u5E76\u91CD\u5199\u91CC\u9762\u7684 <code>run()</code> \u65B9\u6CD5</li></ul></li></ul><hr><ul><li>\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u6709\u4E00\u4E2A\u540D\u5B57\u7528\u4E8E\u533A\u5206\uFF0C\u4E5F\u8BB8\u6709\u591A\u4E2A\u7EBF\u7A0B\u62E5\u6709\u540C\u4E00\u4E2A\u540D\u5B57</li><li>\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u521B\u5EFA\u7684\u65F6\u5019\u6CA1\u6709\u6307\u5B9A\u540D\u79F0\uFF0C\u5219\u4F1A\u88AB\u81EA\u52A8\u5206\u914D\u4E00\u4E2A\u540D\u79F0</li></ul><hr><h2 id="_2-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_2-\u7C7B\u56FE" aria-hidden="true">#</a> 2. \u7C7B\u56FE</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Thread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+`" alt="img_3.png"></p><hr><h2 id="_3-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_3-\u5C5E\u6027" aria-hidden="true">#</a> 3. \u5C5E\u6027</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">/* Make sure registerNatives is the first thing &lt;clinit&gt; does. */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u64CD\u4F5C</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u540D\u79F0</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span>            priority<span class="token punctuation">;</span> <span class="token comment">// \u4F18\u5148\u7EA7</span>
    <span class="token keyword">private</span> <span class="token class-name">Thread</span>         threadQ<span class="token punctuation">;</span> 
    <span class="token keyword">private</span> <span class="token keyword">long</span>           eetop<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     single_step<span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u5904\u4E8E \u5355\u6B65\u6267\u884C \u72B6\u6001</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     daemon <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u662F\u5426\u4E3A \u5B88\u62A4\u7EBF\u7A0B</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span>     stillborn <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// JVM \u5F53\u524D\u72B6\u6001</span>

    <span class="token keyword">private</span> <span class="token class-name">Runnable</span> target<span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u7684\u662F target \u7684 run() \u65B9\u6CD5</span>

    <span class="token keyword">private</span> <span class="token class-name">ThreadGroup</span> group<span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u6240\u5C5E\u7684 \u7EBF\u7A0B\u7EC4</span>

    <span class="token keyword">private</span> <span class="token class-name">ClassLoader</span> contextClassLoader<span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u7684 \u7C7B\u52A0\u8F7D\u5668</span>

    <span class="token comment">/* The inherited AccessControlContext of this thread */</span>
    <span class="token keyword">private</span> <span class="token class-name">AccessControlContext</span> inheritedAccessControlContext<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> threadInitNumber<span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E8E\u7EBF\u7A0B\u7684\u547D\u540D</span>
    
    <span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> threadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// ThreadLocal \u76F8\u5173</span>
    <span class="token class-name">ThreadLocal<span class="token punctuation">.</span>ThreadLocalMap</span> inheritableThreadLocals <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    
    <span class="token keyword">private</span> <span class="token keyword">long</span> stackSize<span class="token punctuation">;</span> <span class="token comment">// \u6808\u6DF1\u5EA6\uFF0C\u5982\u679C\u521B\u5EFA\u65F6\u6CA1\u6709\u6307\u5B9A\uFF0C\u5219\u4E3A 0\uFF1B\u6709\u7684 JVM \u7528\u5230\u4E86\u8FD9\u4E2A\u53C2\u6570\uFF0C\u6709\u7684\u6CA1\u6709\u7528\u5230</span>
    
    <span class="token keyword">private</span> <span class="token keyword">long</span> nativeParkEventPointer<span class="token punctuation">;</span> <span class="token comment">// \u672C\u673A\u7EBF\u7A0B\u7EC8\u6B62\u540E\u6301\u7EED\u5B58\u5728\u7684 JVM \u79C1\u6709\u72B6\u6001</span>
    
    <span class="token keyword">private</span> <span class="token keyword">long</span> tid<span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B id</span>
    
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> threadSeqNumber<span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E8E\u751F\u6210\u7EBF\u7A0B id</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> threadStatus <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u72B6\u6001</span>
    
    <span class="token keyword">volatile</span> <span class="token class-name">Object</span> parkBlocker<span class="token punctuation">;</span> <span class="token comment">// LockSupport.park \u65F6\u6709\u7528</span>
    
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Interruptible</span> blocker<span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E8E \u7EBF\u7A0B\u7684 interruptible I/O</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> blockerLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> MIN_PRIORITY <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u6700\u4F4E\u4F18\u5148\u7EA7</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> NORM_PRIORITY <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// \u9ED8\u8BA4\u4F18\u5148\u7EA7</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span> MAX_PRIORITY <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u9AD8\u4F18\u5148\u7EA7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_4-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 4. \u6784\u9020\u51FD\u6570</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;Thread-&quot;</span> <span class="token operator">+</span> <span class="token function">nextThreadNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>  <span class="token parameter">target</span> - \u5F53\u5F53\u524D\u7EBF\u7A0B\u6267\u884C start() \u65F6\uFF0C\u6267\u884C\u7684\u662F target \u6240\u5728\u7C7B\u7684 run() \u65B9\u6CD5
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;Thread-&quot;</span> <span class="token operator">+</span> <span class="token function">nextThreadNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u4E00\u4E2A\u5E26\u6307\u5B9A\u6743\u9650\u63A7\u5236\u7684\u7EBF\u7A0B - \u4E3A\u975E public \u6784\u9020\u5668
     */</span>
    <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> <span class="token class-name">AccessControlContext</span> acc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;Thread-&quot;</span> <span class="token operator">+</span> <span class="token function">nextThreadNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> acc<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>  <span class="token parameter">group</span> - \u7EBF\u7A0B\u6240\u5728\u7684\u7EC4
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">target</span> - \u7EBF\u7A0B\u542F\u52A8\u65F6\uFF0C\u6267\u884C\u7684 run() \u65B9\u6CD5\u6240\u5728\u7684\u7C7B
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">SecurityException</span></span> - \u5728\u6307\u5B9A\u7EBF\u7A0B\u7EC4\u4E0B\u65E0\u6CD5\u521B\u5EFA\u7EBF\u7A0B
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> group<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token string">&quot;Thread-&quot;</span> <span class="token operator">+</span> <span class="token function">nextThreadNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>   <span class="token parameter">name</span> - \u6307\u5B9A\u7EBF\u7A0B\u540D\u79F0
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> group<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> group<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> group<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">long</span> stackSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> stackSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * \u7EBF\u7A0B\u7684\u521D\u59CB\u5316
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span><span class="token punctuation">,</span><span class="token class-name">Runnable</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token keyword">long</span><span class="token punctuation">,</span><span class="token class-name">AccessControlContext</span><span class="token punctuation">,</span><span class="token keyword">boolean</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> g<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">long</span> stackSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">init</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> stackSize<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u7EBF\u7A0B\u7684\u521D\u59CB\u5316
     *
     * <span class="token keyword">@param</span> <span class="token parameter">g</span> - \u7EBF\u7A0B\u6240\u5728\u7684\u7EC4
     * <span class="token keyword">@param</span> <span class="token parameter">target</span> - \u6267\u884C target \u5BF9\u8C61\u7684 run() \u65B9\u6CD5
     * <span class="token keyword">@param</span> <span class="token parameter">name</span> \u7EBF\u7A0B\u7684\u540D\u79F0
     * <span class="token keyword">@param</span> <span class="token parameter">stackSize</span> - \u7EBF\u7A0B\u60F3\u8981\u7684\u6808\u6DF1\u5EA6
     * <span class="token keyword">@param</span> <span class="token parameter">acc</span> - \u60F3\u8981\u7684 \u6743\u9650\u63A7\u5236
     * <span class="token keyword">@param</span> <span class="token parameter">inheritThreadLocals</span> - \u82E5\u4E3A\u771F\uFF0C\u5219\u9700\u8981\u7EE7\u627F
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ThreadGroup</span> g<span class="token punctuation">,</span> 
                      <span class="token class-name">Runnable</span> target<span class="token punctuation">,</span> 
                      <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                      <span class="token keyword">long</span> stackSize<span class="token punctuation">,</span> 
                      <span class="token class-name">AccessControlContext</span> acc<span class="token punctuation">,</span>
                      <span class="token keyword">boolean</span> inheritThreadLocals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;name cannot be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> parent <span class="token operator">=</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SecurityManager</span> security <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/* Determine if it&#39;s an applet or not */</span>

            <span class="token comment">/* If there is a security manager, ask the security manager
               what to do. */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                g <span class="token operator">=</span> security<span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">/* If the security doesn&#39;t have a strong opinion of the matter
               use the parent thread group. */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>g <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                g <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        g<span class="token punctuation">.</span><span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u7EC4\u7684\u6743\u9650\u8BA4\u8BC1</span>

        <span class="token comment">/*
         * Do we have the required permissions?
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCCLOverridden</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                security<span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span>SUBCLASS_IMPLEMENTATION_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        g<span class="token punctuation">.</span><span class="token function">addUnstarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>group <span class="token operator">=</span> g<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>daemon <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">isDaemon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0E\u7236\u7C7B \u7B49\u540C</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>priority <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0E\u7236\u7C7B \u7B49\u540C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isCCLOverridden</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>contextClassLoader <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>contextClassLoader <span class="token operator">=</span> parent<span class="token punctuation">.</span>contextClassLoader<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inheritedAccessControlContext <span class="token operator">=</span> acc <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> acc <span class="token operator">:</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
        <span class="token function">setPriority</span><span class="token punctuation">(</span>priority<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>inheritThreadLocals <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span>inheritableThreadLocals <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>inheritableThreadLocals <span class="token operator">=</span> <span class="token class-name">ThreadLocal</span><span class="token punctuation">.</span><span class="token function">createInheritedMap</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>inheritableThreadLocals<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stackSize <span class="token operator">=</span> stackSize<span class="token punctuation">;</span>

        tid <span class="token operator">=</span> <span class="token function">nextThreadID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u7EBF\u7A0B\u5BF9\u8C61
     *
     * <span class="token keyword">@return</span>  the currently executing thread.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token class-name">Thread</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * \u5224\u65AD\u662F\u5426\u6709\u4FEE\u6539\u5F53\u524D\u7EBF\u7A0B\u7684\u6743\u9650
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * If there is a security manager, its <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">checkAccess</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> method
     * is called with this thread as its argument. This may result in
     * throwing a <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">SecurityException</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>.
     *
     * <span class="token keyword">@exception</span>  <span class="token reference"><span class="token class-name">SecurityException</span></span>  if the current thread is not allowed to
     *               access this thread.
     * <span class="token keyword">@see</span>        <span class="token reference"><span class="token class-name">SecurityManager</span><span class="token punctuation">#</span><span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SecurityManager</span> security <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            security<span class="token punctuation">.</span><span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Verifies that this (possibly subclass) instance can be constructed
     * without violating security constraints: the subclass must not override
     * security-sensitive non-final methods, or else the
     * &quot;enableContextClassLoaderOverride&quot; RuntimePermission is checked.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isCCLOverridden</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cl <span class="token operator">==</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token function">processQueue</span><span class="token punctuation">(</span><span class="token class-name">Caches</span><span class="token punctuation">.</span>subclassAuditsQueue<span class="token punctuation">,</span> <span class="token class-name">Caches</span><span class="token punctuation">.</span>subclassAudits<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WeakClassKey</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakClassKey</span><span class="token punctuation">(</span>cl<span class="token punctuation">,</span> <span class="token class-name">Caches</span><span class="token punctuation">.</span>subclassAuditsQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Boolean</span> result <span class="token operator">=</span> <span class="token class-name">Caches</span><span class="token punctuation">.</span>subclassAudits<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token function">auditSubclass</span><span class="token punctuation">(</span>cl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Caches</span><span class="token punctuation">.</span>subclassAudits<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">long</span> <span class="token function">nextThreadID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">++</span>threadSeqNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#_5-\u5185\u90E8\u7C7B" aria-hidden="true">#</a> 5. \u5185\u90E8\u7C7B</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u7EBF\u7A0B\u72B6\u6001\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u53EA\u80FD\u5904\u4E8E\u4EE5\u4E0B\u7684\u5176\u4E2D\u4E00\u79CD\u72B6\u6001\uFF1A
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u8FD8\u6CA1\u6709 start \u7684\u7EBF\u7A0B
         */</span>
        NEW<span class="token punctuation">,</span>

        <span class="token doc-comment comment">/**
         * \u8FD0\u884C\u4E2D\u7684\u7EBF\u7A0B
         * \u88AB JVM \u6267\u884C\uFF0C\u4F46\u4E5F\u8BB8\u9700\u8981\u7B49\u5F85 \u64CD\u4F5C\u7CFB\u7EDF \u5206\u914D\u8D44\u6E90
         */</span>
        RUNNABLE<span class="token punctuation">,</span>

        <span class="token doc-comment comment">/**
         * \u963B\u585E\u72B6\u6001 - \u7B49\u5F85\u83B7\u53D6\u4E00\u4E2A\u76D1\u89C6\u5668\u9501
         */</span>
        BLOCKED<span class="token punctuation">,</span>

        <span class="token doc-comment comment">/**
         * \u7B49\u5F85\u72B6\u6001
         * \u53EF\u80FD\u7531\u4E8E\u6267\u884C\u4E86\u4EE5\u4E0B\u65B9\u6CD5\uFF1A
         * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Object</span><span class="token punctuation">#</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> Object.wait<span class="token punctuation">}</span> with no timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> Thread.join<span class="token punctuation">}</span> with no timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LockSupport</span><span class="token punctuation">#</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> LockSupport.park<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
         */</span>
        WAITING<span class="token punctuation">,</span>

        <span class="token doc-comment comment">/**
         * \u6709\u9650\u65F6\u95F4\u7B49\u5F85\u72B6\u6001
         * \u53EF\u80FD\u6267\u884C\u4E86\u4EE5\u4E0B\u65B9\u6CD5\uFF1A
         * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">sleep</span></span> Thread.sleep<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Object</span><span class="token punctuation">#</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span></span> Object.wait<span class="token punctuation">}</span> with timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span></span> Thread.join<span class="token punctuation">}</span> with timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LockSupport</span><span class="token punctuation">#</span><span class="token field">parkNanos</span></span> LockSupport.parkNanos<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         *   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LockSupport</span><span class="token punctuation">#</span><span class="token field">parkUntil</span></span> LockSupport.parkUntil<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
         * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
         */</span>
        TIMED_WAITING<span class="token punctuation">,</span>

        <span class="token doc-comment comment">/**
         * \u7EC8\u6B62\u72B6\u6001
         */</span>
        TERMINATED<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_6-\u5E38\u89C1\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6-\u5E38\u89C1\u65B9\u6CD5" aria-hidden="true">#</a> 6. \u5E38\u89C1\u65B9\u6CD5</h2><h3 id="_1-currentthread" tabindex="-1"><a class="header-anchor" href="#_1-currentthread" aria-hidden="true">#</a> 1) currentThread()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u7EBF\u7A0B\u5BF9\u8C61
     *
     * <span class="token keyword">@return</span>  the currently executing thread.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token class-name">Thread</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-yield" tabindex="-1"><a class="header-anchor" href="#_2-yield" aria-hidden="true">#</a> 2) yield()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>     <span class="token doc-comment comment">/**
     * \u544A\u77E5 \u8C03\u5EA6\u7A0B\u5E8F \u5F53\u524D\u7EBF\u7A0B\u613F\u610F\u653E\u5F03\u5BF9 \u5F53\u524D CPU \u7684\u4F7F\u7528\uFF0C\u8C03\u5EA6\u7A0B\u5E8F\u4E5F\u53EF\u4EE5\u5FFD\u7565\u6B64\u63D0\u793A
     *
     * \u5E38\u7528\u4E8E \u6D4B\u8BD5 | \u5E76\u53D1\u5305\u7684\u5E76\u53D1\u63A7\u5236
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-sleep" tabindex="-1"><a class="header-anchor" href="#_3-sleep" aria-hidden="true">#</a> 3) sleep()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u7761\u7720
     * \u671F\u95F4\u4E0D\u53C2\u4E0E \u7CFB\u7EDF\u8C03\u5EA6
     * \u4E0D\u4F1A\u91CA\u653E\u5DF2\u7ECF\u62E5\u6709\u7684 \u8D44\u6E90
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">millis</span> - \u6BEB\u79D2
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> - \u8F93\u5165\u6BEB\u79D2\u6570 &lt; 0
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span> - \u5176\u4ED6\u7EBF\u7A0B\u4E2D\u65AD\u4E86\u5F53\u524D\u7EBF\u7A0B\uFF1B\u5F53\u5F02\u5E38\u88AB\u629B\u51FA\u65F6\uFF0Cinterrupted \u72B6\u6001\u88AB\u6E05\u7A7A
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>  <span class="token parameter">millis</span> - \u6BEB\u79D2
     * <span class="token keyword">@param</span>  <span class="token parameter">nanos</span> - \u7EB3\u79D2\u6570 \u2208 [0, 999999]
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span>
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nanos <span class="token operator">&gt;</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;nanosecond timeout value out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;=</span> <span class="token number">500000</span> <span class="token operator">||</span> <span class="token punctuation">(</span>nanos <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> millis <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            millis<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">sleep</span><span class="token punctuation">(</span>millis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Thread.yield () VS Thread.sleep(0)</p></blockquote><ol><li><code>Thread.yield()</code> &amp; <code>Thread.sleep(0)</code> \u7684\u5B9E\u73B0\u53D6\u51B3\u4E8E\u5177\u4F53\u7684 JVM \u865A\u62DF\u673A\uFF0C <ul><li>\u67D0\u4E9B JVM \u53EF\u80FD\u4EC0\u4E48\u90FD\u4E0D\u505A\uFF0C</li><li>\u800C\u5927\u591A\u6570\u865A\u62DF\u673A\u4F1A\u8BA9\u7EBF\u7A0B <strong>\u653E\u5F03\u5269\u4F59\u7684 CPU \u65F6\u95F4\u7247</strong>\uFF0C\u91CD\u65B0\u53D8\u4E3A READY \u72B6\u6001\uFF0C\u5E76\u653E\u5176\u5230 <strong>\u540C\u4F18\u5148\u7EA7\u7EBF\u7A0B\u961F\u5217\u7684\u672B\u5C3E\u7B49\u5F85cpu\u8D44\u6E90</strong></li><li>\u4F46\u662F\u5F53\u6211\u4EEC\u8C03\u7528 <code>Thread.yield()</code> \u7684\u90A3\u4E00\u523B\uFF0C\u5E76\u4E0D\u610F\u5473\u7740\u5F53\u524D\u7EBF\u7A0B\u7ACB\u9A6C\u91CA\u653Ecpu\u8D44\u6E90\uFF0C <ul><li>\u8FD9\u662F\u56E0\u4E3A\u83B7\u5F97\u65F6\u95F4\u7247\u7684\u7EBF\u7A0B\u4ECE RUNNING \u5207\u6362\u5230 READY \u4ECD\u9700\u8981\u4E00\u5B9A\u7684\u51C6\u5907\u65F6\u95F4\uFF0C\u8FD9\u6BB5\u65F6\u95F4\u5F53\u524D\u7EBF\u7A0B\u4ECD\u53EF\u80FD\u8FD0\u884C\u4E00\u5C0F\u6BB5\u65F6\u95F4</li></ul></li></ul></li></ol><h3 id="_4-run" tabindex="-1"><a class="header-anchor" href="#_4-run" aria-hidden="true">#</a> 4) run()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u82E5\u6784\u9020\u51FD\u6570\u4E2D\u521D\u59CB\u5316\u4E86 target\uFF0C\u90A3\u4E48\u4F1A\u8BA9 target \u6267\u884C\uFF0C\u4F46\u662F\u662F\u5728\u5F53\u524D\u7EBF\u7A0B\u6267\u884C\uFF0C\u800C\u975E\u65B0\u7EBF\u7A0B</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-start" tabindex="-1"><a class="header-anchor" href="#_5-start" aria-hidden="true">#</a> 5) start()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u4F7F\u8BE5\u7EBF\u7A0B\u5F00\u59CB\u6267\u884C\uFF1B 
     * Java \u865A\u62DF\u673A\u8C03\u7528\u8BE5\u7EBF\u7A0B\u7684 run \u65B9\u6CD5\u3002\u7ED3\u679C\u662F\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8FD0\u884C\uFF1A
     * \u5F53\u524D\u7EBF\u7A0B\uFF08\u4ECE\u5BF9 start \u65B9\u6CD5\u7684\u8C03\u7528\u8FD4\u56DE\uFF09\u548C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\uFF08\u6267\u884C\u5176 run \u65B9\u6CD5\uFF09\u3002
     * \u591A\u6B21\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\u662F\u4E0D\u5408\u6CD5\u7684\u3002\u7279\u522B\u662F\uFF0C\u7EBF\u7A0B\u4E00\u65E6\u5B8C\u6210\u6267\u884C\u5C31\u53EF\u80FD\u4E0D\u4F1A\u91CD\u65B0\u542F\u52A8\u3002
     *
     * <span class="token keyword">@exception</span>  <span class="token reference"><span class="token class-name">IllegalThreadStateException</span></span> - \u7EBF\u7A0B\u5DF2\u7ECF\u662F started \u72B6\u6001
     * <span class="token keyword">@see</span>        <span class="token reference"><span class="token punctuation">#</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
     * <span class="token keyword">@see</span>        <span class="token reference"><span class="token punctuation">#</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>threadStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>started<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    group<span class="token punctuation">.</span><span class="token function">threadStartFailed</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">/* do nothing. If start0 threw a Throwable then
                  it will be passed up the call stack */</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">start0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-interrupt" tabindex="-1"><a class="header-anchor" href="#_6-interrupt" aria-hidden="true">#</a> 6) interrupt()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u4E2D\u65AD\u8FD9\u4E2A\u7EBF\u7A0B\u3002
     * \u9664\u975E\u5F53\u524D\u7EBF\u7A0B\u6B63\u5728\u4E2D\u65AD\u81EA\u5DF1\uFF0C\u8FD9\u603B\u662F\u5141\u8BB8\u7684\uFF0C\u5426\u5219\u4F1A\u8C03\u7528\u8BE5\u7EBF\u7A0B\u7684 checkAccess \u65B9\u6CD5\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5BFC\u81F4\u629B\u51FA SecurityException\u3002
     *
     * \u5982\u679C\u8BE5\u7EBF\u7A0B\u5728\u8C03\u7528 Object \u7C7B\u7684 wait()\u3001wait(long)\u3001 wait(long, int)  | Thread \u7C7B\u7684 join()\u3001join(long)\u3001join(long, int) \u65F6\u88AB\u963B\u585E, 
     * sleep(long), or sleep(long, int)\uFF0C
     * \u90A3\u4E48\u5B83\u7684\u4E2D\u65AD\u72B6\u6001\u4F1A\u88AB\u6E05\u9664\u5E76\u4E14\u4F1A\u6536\u5230\u4E00\u4E2AInterruptedException\u3002
     *
     * \u5982\u679C\u8BE5\u7EBF\u7A0B\u5728 InterruptibleChannel \u4E0A\u7684 IO \u64CD\u4F5C\u4E2D\u88AB\u963B\u585E\uFF0C\u5219\u901A\u9053\u5C06\u5173\u95ED\uFF0C\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u91CD\u7F6E\uFF0C
     * \u7EBF\u7A0B\u5C06\u6536\u5230 java.nio.channels.ClosedByInterruptException\u3002
     * \u5982\u679C\u8BE5\u7EBF\u7A0B\u5728 java.nio.channels.Selector \u4E2D\u88AB\u963B\u585E\uFF0C\u5219\u8BE5\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u5C06\u88AB\u91CD\u7F6E\uFF0C
     * \u5E76\u4E14\u5B83\u5C06\u7ACB\u5373\u4ECE Selector \u64CD\u4F5C\u8FD4\u56DE\uFF0C\u53EF\u80FD\u8FD4\u56DE\u4E00\u4E2A\u975E\u96F6\u503C\uFF0C\u5C31\u50CF\u8C03\u7528\u4E86\u9009\u62E9\u5668\u7684\u5524\u9192\u65B9\u6CD5\u4E00\u6837\u3002
     * \u5982\u679C\u524D\u9762\u7684\u6761\u4EF6\u90FD\u4E0D\u6210\u7ACB\uFF0C\u5219\u5C06\u8BBE\u7F6E\u8BE5\u7EBF\u7A0B\u7684\u4E2D\u65AD\u72B6\u6001\u3002
     *
     * \u4E2D\u65AD\u4E00\u4E2A\u4E0D\u6D3B\u52A8\u7684\u7EBF\u7A0B\u4E0D\u9700\u8981\u6709\u4EFB\u4F55\u6548\u679C\u3002
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">!=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u975E\u672C\u7EBF\u7A0B\u81EA\u5DF1\u4E2D\u65AD\uFF0C\u8FDB\u884C \u6743\u9650\u6821\u9A8C</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>blockerLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Interruptible</span> b <span class="token operator">=</span> blocker<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">interrupt0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// Just to set the interrupt flag</span>
                b<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">interrupt0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5\u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u88AB\u4E2D\u65AD
     * \u8BE5\u65B9\u6CD5\u4F1A\u6E05\u9664\u4E2D\u65AD\u6807\u5FD7\u4F4D
     * \u6362\u53E5\u8BDD\u8BF4\uFF0C\u5982\u679C\u8BE5\u65B9\u6CD5\u88AB\u8C03\u7528\u4E24\u6B21\uFF0C\u7B2C\u4E00\u6B21\u6E05\u7A7A\u4E86\u4E2D\u65AD\u6807\u5FD7\u4F4D\uFF0C\u7B2C\u4E8C\u6B21\u518D\u6B21\u8C03\u7528\u5982\u679C\u671F\u95F4\u6CA1\u6709\u518D\u6B21\u88AB\u4E2D\u65AD\uFF0C\u90A3\u4E48\u80AF\u5B9A\u8FD4\u56DE false
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>A thread interruption ignored because a thread was not alive
     * at the time of the interrupt will be reflected by this method
     * returning false.
     *
     * <span class="token keyword">@return</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if the current thread has been interrupted;
     *          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> otherwise.
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
     * <span class="token keyword">@revised</span> 6.0
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
     <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5\u67D0\u4E2A\u7EBF\u7A0B\u662F\u5426\u88AB\u4E2D\u65AD
     * \u4E2D\u65AD\u72B6\u6001\u6CA1\u6709\u88AB\u91CD\u7F6E
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>A thread interruption ignored because a thread was not alive
     * at the time of the interrupt will be reflected by this method
     * returning false.
     *
     * <span class="token keyword">@return</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if this thread has been interrupted;
     * <span class="token keyword">@see</span>     <span class="token reference"><span class="token punctuation">#</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
     * <span class="token keyword">@revised</span> 6.0
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
     <span class="token doc-comment comment">/**
     * \u6D4B\u8BD5\u67D0\u4E2A\u7EBF\u7A0B\u662F\u5426\u88AB\u4E2D\u65AD
     * \u4E2D\u65AD\u72B6\u6001\u662F\u5426\u88AB\u91CD\u7F6E\u53D6\u51B3\u4E8E\u8F93\u5165\u53C2\u6570 ClearInterrupted
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> <span class="token class-name">ClearInterrupted</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-join" tabindex="-1"><a class="header-anchor" href="#_7-join" aria-hidden="true">#</a> 7) join()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u6700\u591A\u7B49\u5F85\u6BEB\u79D2\u52A0\u4E0A\u7EB3\u79D2\u79D2\u6570\u4EE5\u4F7F\u8BE5\u7EBF\u7A0B\u7EC8\u6B62\u3002
     * \u6B64\u5B9E\u73B0\u4F7F\u7528\u4EE5 this.isAlive \u4E3A\u6761\u4EF6\u7684 this.wait \u8C03\u7528\u5FAA\u73AF\u3002
     * \u5F53\u7EBF\u7A0B\u7EC8\u6B62\u65F6\uFF0C\u5C06\u8C03\u7528 this.notifyAll \u65B9\u6CD5\u3002
     * \u5EFA\u8BAE\u5E94\u7528\u7A0B\u5E8F\u4E0D\u8981\u5728 Thread \u5B9E\u4F8B\u4E0A\u4F7F\u7528 wait\u3001notify \u6216 notifyAll\u3002
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">millis</span>
     *         the time to wait in milliseconds
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span>
     *          if the value of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">millis</span></span><span class="token punctuation">}</span> is negative
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     *          if any thread has interrupted the current thread. The
     *          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>interrupted status<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> of the current thread is
     *          cleared when this exception is thrown.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> base <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u8981\u7EBF\u7A0B\u4E00\u76F4\u5B58\u6D3B\uFF0C\u5C31\u4E00\u76F4\u7B49\u5F85</span>
                <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> delay <span class="token operator">=</span> millis <span class="token operator">-</span> now<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FBE\u5230\u65F6\u95F4\u5C31\u8DF3\u51FA</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">wait</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
                now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> base<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
     <span class="token doc-comment comment">/**
     * \u5224\u65AD\u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u4E3A\u6D3B\u8DC3\u72B6\u6001 - \u5373\u7EBF\u7A0B\u5DF2\u7ECF\u6267\u884C\u4E86 start() \u4E14\u6CA1\u6709\u6B7B\u4EA1
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5F53\u524D\u7EBF\u7A0B\u6700\u591A\u7B49\u5F85 millis \u6BEB\u79D2 + nanos \u7EB3\u79D2 \u540E\u6267\u884C\u6B7B\u4EA1
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">millis</span> - \u7B49\u5F85\u7684\u6BEB\u79D2\u6570
     * <span class="token keyword">@param</span>  <span class="token parameter">nanos</span> - \u53D6\u503C\u8303\u56F4 \u2208 [0, 999999] \u7684\u7EB3\u79D2\u6570
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> - \u6BEB\u79D2\u6570 &lt; 0 || \u7EB3\u79D2\u6570\u8D85\u8303
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span> - \u4EFB\u4F55\u7EBF\u7A0B\u4E2D\u65AD\u4E86\u5F53\u524D\u7EBF\u7A0B
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">long</span> millis<span class="token punctuation">,</span> <span class="token keyword">int</span> nanos<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>millis <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;timeout value is negative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nanos <span class="token operator">&gt;</span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;nanosecond timeout value out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nanos <span class="token operator">&gt;=</span> <span class="token number">500000</span> <span class="token operator">||</span> <span class="token punctuation">(</span>nanos <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> millis <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            millis<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">join</span><span class="token punctuation">(</span>millis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u7B49\u5F85\u8FD9\u4E2A\u7EBF\u7A0B\u6B7B\u6389\u3002
     * \u6B64\u65B9\u6CD5\u7684\u8C03\u7528\u4E0E\u8C03\u7528 join(0) \u7684\u884C\u4E3A\u65B9\u5F0F\u5B8C\u5168\u76F8\u540C
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     *          if any thread has interrupted the current thread. The
     *          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>interrupted status<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> of the current thread is
     *          cleared when this exception is thrown.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token function">join</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-thread-runnable-callable" tabindex="-1"><a class="header-anchor" href="#_7-thread-runnable-callable" aria-hidden="true">#</a> 7. Thread &amp; Runnable &amp; Callable</h2><h3 id="_1-thread-\u521B\u5EFA\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_1-thread-\u521B\u5EFA\u7EBF\u7A0B" aria-hidden="true">#</a> 1) Thread \u521B\u5EFA\u7EBF\u7A0B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Thread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            target<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u81EA\u5B9A\u4E49 Thread \u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u516D\u7EBF\u4E4B\u9996&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MultiThreads</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EE7\u627F Thread \u7C7B\u521B\u5EFA\u7EBF\u7A0B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyThread</span> myThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-runnable-\u521B\u5EFA\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_2-runnable-\u521B\u5EFA\u7EBF\u7A0B" aria-hidden="true">#</a> 2) Runnable \u521B\u5EFA\u7EBF\u7A0B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span> <span class="token comment">// \u8BF4\u660E\u662F\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u53EF\u7528 Lambda \u8868\u8FBE\u5F0F</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u81EA\u5B9A\u4E49 Runnable \u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u541E\u4F5B\u7AE5\u5B50&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MultiThreads</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B9E\u73B0 Runnable \u63A5\u53E3\u521B\u5EFA\u7EBF\u7A0B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MyRunnable</span> myRunnable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>myRunnable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-callable-\u521B\u5EFA\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#_3-callable-\u521B\u5EFA\u7EBF\u7A0B" aria-hidden="true">#</a> 3) Callable \u521B\u5EFA\u7EBF\u7A0B</h3><ul><li><code>get</code> \u4E3A <strong>\u963B\u585E</strong> \u8FDB\u7A0B</li><li><code>get(long time, TimeUnit unit)</code> \u5728 \u6709\u6548\u65F6\u95F4 \u5185\u963B\u585E\u8FDB\u7A0B\uFF0C\u5728\u6709\u9650\u65F6\u95F4\u5185\u65E0\u6CD5\u8BFB\u53D6\u7ED3\u679C\uFF0C\u5219\u8FD4\u56DE</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token class-name">V</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u81EA\u5B9A\u4E49 Callable \u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">MyCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F5B\u5251\u5206\u8BF4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u5BB5&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MultiThreads</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">// Callable \u7C7B\u5E76\u6CA1\u6709\u7EE7\u627F Thread | \u5B9E\u73B0 Runnable\uFF0C\u56E0\u6B64\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528 new Thread() \u4EE3\u5165</span>
        <span class="token class-name">MyCallable</span> myCallable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// FutureTask implements RunnableFuture&lt;V&gt;\uFF0C\u800C RunnableFuture&lt;V&gt; extends Runnable, Future&lt;V&gt; \u5B9E\u73B0 Runnable</span>
        <span class="token class-name">FutureTask</span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>callableThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),o=[c];function l(i,u){return s(),a("div",null,o)}var d=n(p,[["render",l],["__file","Thread.html.vue"]]);export{d as default};
