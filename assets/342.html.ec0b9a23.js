import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.5aebcaaa.js";var p="/assets/img_46.c18a4d64.png",t="/assets/img_44.e4b9f14d.png",o="/assets/img_45.949d876a.png";const c={},l=e('<h1 id="_342-4\u7684\u5E42" tabindex="-1"><a class="header-anchor" href="#_342-4\u7684\u5E42" aria-hidden="true">#</a> \u{1F315} 342. 4\u7684\u5E42</h1><p>\u96BE\u5EA6: \u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+p+`" alt="img_46.png"></p><hr><h3 id="\u89E3\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1" aria-hidden="true">#</a> \u89E3\u6CD5 1</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfFour</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// 4 \u7684\u5E42 \u8BF4\u660E \u4E00\u5B9A\u662F 2 \u7684\u5E42</span>
        <span class="token comment">// \u9996\u5148\u9A8C\u8BC1\u662F\u5426\u4E3A 2 \u7684\u5E42</span>
        <span class="token comment">// \u5982\u4F55\u9A8C\u8BC1\u662F\u5426\u4E3A 2 \u7684\u5E42\uFF1F</span>
        <span class="token comment">// \u501F\u52A9 x &amp; (x - 1) \u6D88\u53BB 1 \u4E2A 0 \u540E\u5224\u65AD\u662F\u5426\u4E3A 0 \u5F97\u51FA</span>
        <span class="token comment">// \u7136\u540E\u5224\u65AD\u662F\u5426\u4E3A 4 \u7684\u5E42</span>
        <span class="token comment">// \u53EF\u4EE5\u770B\u51FA\uFF0C4 \u7684\u5E42 \u4E8C\u8FDB\u5236\u4E3A 0001 \u6BCF\u6B21\u5DE6\u79FB 2 \u4F4D</span>
        <span class="token comment">// \u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E8C\u8FDB\u5236\u5076\u6570\u4F4D\u4E0A\u6709\u4E14\u53EA\u6709\u4E00\u4E2A 1\uFF0C\u5947\u6570\u4F4D\u5168\u4E3A 0</span>
        <span class="token comment">// \u2234 \u53EF\u4EE5\u6784\u9020\u4E00\u4E2A\u6570\uFF0C\u4F7F\u5F97 x \u4E0E\u8FD9\u4E2A\u6570\u60F3\u4E0E\u80FD\u591F\u533A\u5206\u51FA \u8FD9\u4E2A\u552F\u4E00\u7684 1 \u5230\u5E95\u5728 \u5947\u6570\u4F4D\u8FD8\u662F \u5076\u6570\u4F4D</span>
        <span class="token comment">// \u4E00\u4E2A\u53EF\u80FD\u7684\u6570\u53EF\u4EE5\u8868\u793A\u4E3A (0101) * 8 = 8 \u4E2A 5</span>
        <span class="token comment">// x &amp; (5555 5555) != 0 \u8BF4\u660E 1 \u5728\u5076\u6570\u4F4D\u4E0A\uFF0C\u5373\u662F 4 \u7684\u5E42</span>
        <span class="token comment">// \u53E6\u4E00\u4E2A\u53EF\u80FD\u7684\u6570\u53EF\u4EE5\u8868\u793A\u4E3A (1010) * 8 = 8 \u4E2A A</span>
        <span class="token comment">// x &amp; (AAAA AAAA) != 0 \u8BF4\u660E 1 \u5728\u5947\u6570\u4F4D\u4E0A\uFF0C\u5373\u4E0D\u662F 4 \u7684\u5E42</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> monitor <span class="token operator">=</span> <span class="token number">0xAAAAAAAA</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> monitor<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+t+`" alt="img_44.png"></p><hr><h3 id="\u89E3\u6CD5-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2" aria-hidden="true">#</a> \u89E3\u6CD5 2</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPowerOfFour</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u8FD8\u662F\u9996\u5148\u5224\u65AD\u662F\u5426\u4E3A 2 \u7684\u5E42</span>
        <span class="token comment">// 4^x = (3 + 1)^x \u5C55\u5F00\u540E\u9664\u53BB 3 \u7684\u4E58\u79EF\uFF0C\u6700\u7EC8\u53EA\u5269\u4E0B 1 \u8FD9\u4E2A\u4F59\u6570</span>
        <span class="token comment">// \u5373 (4^x) % 3 == 1</span>
        <span class="token comment">// \u82E5\u4E3A 2 \u7684\u5E42\u4F46\u4E0D\u662F 4 \u7684\u5E42\uFF0C\u5219</span>
        <span class="token comment">// 2 * 4^x = 2 * 4 * 4^(x - 1) = 8 * 4^(x - 1)</span>
        <span class="token comment">// \u5219 8 * 4^(x - 1) % 3 = 8 % 3 * 1 = 2</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> n <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+o+'" alt="img_45.png"></p>',16),i=[l];function u(r,d){return s(),a("div",null,i)}var v=n(c,[["render",u],["__file","342.html.vue"]]);export{v as default};
