import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as i,o as u,c as k,b as r,w as a,e as t,a as n,d as s}from"./app.5aebcaaa.js";const d={},m=t(`<h1 id="atomic-unsafe" tabindex="-1"><a class="header-anchor" href="#atomic-unsafe" aria-hidden="true">#</a> \u24C2\uFE0F Atomic &amp; Unsafe</h1><h1 id="_1-\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_1-\u539F\u7406" aria-hidden="true">#</a> 1. \u539F\u7406</h1><ul><li>\u57FA\u4E8E <code>UNSAFE</code> \u7C7B\u7684 <code>CAS</code> \u64CD\u4F5C\u5B9E\u73B0</li><li><strong>\u65E0\u9501</strong></li></ul><h1 id="_2-\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2-\u5206\u7C7B" aria-hidden="true">#</a> 2. \u5206\u7C7B</h1><h2 id="_1-\u57FA\u672C\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-\u57FA\u672C\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> 1. \u57FA\u672C\u6570\u636E\u7C7B\u578B</h2><h3 id="_1-\u79CD\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-\u79CD\u7C7B" aria-hidden="true">#</a> 1) \u79CD\u7C7B</h3><ul><li><code>AtomicInteger</code></li><li><code>AtomicBoolean</code></li><li><code>AtomicLong</code></li></ul><h3 id="_2-\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528" aria-hidden="true">#</a> 2) \u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AtomicInteger</span> atomic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E ++</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u503C ++\uFF0C\u7136\u540E \u8F93\u51FA\u5F53\u524D\u503C</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E --</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E +</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E \u8D4B\u65B0\u503C</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndAccumulate</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> left <span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E \u6839\u636E\u6307\u5B9A\u8FD0\u7B97\u65B9\u5F0F\uFF0C\u5F97\u5230\u65B0\u503C</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndUpdate</span><span class="token punctuation">(</span>operand <span class="token operator">-&gt;</span> operand <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u5F53\u524D\u503C\uFF0C\u7136\u540E \u6839\u636E\u6307\u5B9A\u8FD0\u7B97\u65B9\u5F0F\uFF0C\u5F97\u5230\u65B0\u503C</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u6570\u7EC4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u7C7B\u578B" aria-hidden="true">#</a> 2. \u6570\u7EC4\u7C7B\u578B</h2><h3 id="_1-\u79CD\u7C7B-1" tabindex="-1"><a class="header-anchor" href="#_1-\u79CD\u7C7B-1" aria-hidden="true">#</a> 1) \u79CD\u7C7B</h3><ul><li><code>AtomicIntegerArray</code></li><li><code>AtomicLongArray</code></li><li><code>AtomicReferenceArray</code></li></ul><h3 id="_2-\u4F7F\u7528-1" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528-1" aria-hidden="true">#</a> 2) \u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicIntegerArrayTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">AtomicIntegerArray</span> atomic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicIntegerArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//10</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//11</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndDecrement</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//11</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//12</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//10</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndAccumulate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> left <span class="token operator">*</span> right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndUpdate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> operand <span class="token operator">-&gt;</span> operand <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u5F15\u7528\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_3-\u5F15\u7528\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> 3. \u5F15\u7528\u6570\u636E\u7C7B\u578B</h2><h3 id="_1-\u79CD\u7C7B-2" tabindex="-1"><a class="header-anchor" href="#_1-\u79CD\u7C7B-2" aria-hidden="true">#</a> 1) \u79CD\u7C7B</h3><ul><li><code>AtomicReference</code></li><li><code>AtomicStampedReference</code><ul><li>\u6807\u5FD7\u4E3A <code>boolean mark</code></li></ul></li><li><code>AtomicMarkableReference</code><ul><li>\u6807\u5FD7\u4E3A <code>int stamp</code></li></ul></li></ul><h3 id="_2-\u4F7F\u7528-2" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528-2" aria-hidden="true">#</a> 2) \u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicReferenceTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> atomic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">User</span> pwdUpdateUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;newPwd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span>pwdUpdateUser<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>atomic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@ToString</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u7D2F\u52A0\u5668" tabindex="-1"><a class="header-anchor" href="#_4-\u7D2F\u52A0\u5668" aria-hidden="true">#</a> 4. \u7D2F\u52A0\u5668</h2><ul><li>\u4E3A\u4E86\u89E3\u51B3 \u9AD8\u5E76\u53D1\u4E0B\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B CAS \u6210\u529F\u7684\u95EE\u9898</li><li>\u5728\u9AD8\u7ADE\u4E89\u4E0B\uFF0C\u8BE5\u7C7B\u7684\u9884\u671F\u541E\u5410\u91CF\u660E\u663E\u66F4\u9AD8\uFF0C\u4EE3\u4EF7\u662F \u66F4\u9AD8\u7684\u7A7A\u95F4\u6D88\u8017</li><li><code>@sun.misc.Contended</code> \u4FEE\u9970 Cell \u7C7B\uFF0C\u53EF\u907F\u514D\u591A\u4E2A\u53D8\u91CF\u5171\u7528\u540C\u4E00\u7F13\u5B58\u884C\uFF0C\u901A\u8FC7\u7A7A\u95F4\uFF0C\u907F\u514D <mark>\u4F2A\u5171\u4EAB</mark> \u95EE\u9898</li><li><code>ConcurrentHashMap</code> \u4E2D\u7528\u5230\u4E86 <code>LogAdder</code> \u7684\u5C5E\u6027 - \u6876</li></ul><h3 id="_1-\u79CD\u7C7B-3" tabindex="-1"><a class="header-anchor" href="#_1-\u79CD\u7C7B-3" aria-hidden="true">#</a> 1) \u79CD\u7C7B</h3><ul><li><code>LongAdder</code></li><li><code>LongAccumulator</code><ul><li>\u529F\u80FD\u4F1A\u66F4\u52A0\u5F3A\u5927\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u7D2F\u52A0\u7684\u89C4\u5219</li></ul></li><li><code>DoubleAdder</code></li><li><code>DoubleAccumulator</code></li></ul><h3 id="_2-\u4F7F\u7528-3" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528-3" aria-hidden="true">#</a> 2) \u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LongAdderTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LongAdder</span> longAdder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongAdder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BE5\u5F0F\u7B49\u4EF7\u4E8E \u4E0B\u9762\u4E00\u884C</span>
        <span class="token class-name">LongAccumulator</span> accumulator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LongAccumulator</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#_3-\u6E90\u7801" aria-hidden="true">#</a> 3) \u6E90\u7801</h3><h4 id="longadder" tabindex="-1"><a class="header-anchor" href="#longadder" aria-hidden="true">#</a> LongAdder</h4><ul><li>\u4E00\u4E2A\u6216\u591A\u4E2A\u53D8\u91CF\u5171\u540C\u4FDD\u6301\u521D\u59CB\u4E3A 0 \u7684 long \u578B\u6570\u636E\u603B\u548C\u3002</li><li>\u5F53\u8DE8\u7EBF\u7A0B\u4E89\u7528\u66F4\u65B0\uFF08\u65B9\u6CD5\u6DFB\u52A0\uFF09\u65F6\uFF0C\u53D8\u91CF\u96C6\u53EF\u80FD\u4F1A\u52A8\u6001\u589E\u957F\u4EE5\u51CF\u5C11\u4E89\u7528\u3002</li><li>\u65B9\u6CD5 <code>sum</code>\uFF08\u6216\u7B49\u4EF7\u7684 <code>longValue</code>\uFF09\u8FD4\u56DE\u5728\u4FDD\u6301\u603B\u548C\u7684\u53D8\u91CF\u4E4B\u95F4\u7EC4\u5408\u7684\u5F53\u524D\u603B\u548C\u3002</li><li>\u5F53\u591A\u4E2A\u7EBF\u7A0B\u66F4\u65B0\u7528\u4E8E\u6536\u96C6\u7EDF\u8BA1\u4FE1\u606F\u7B49\u76EE\u7684\u7684\u516C\u5171\u603B\u548C\u65F6\uFF0C\u6B64\u7C7B\u901A\u5E38\u6BD4 <code>AtomicLong</code> \u66F4\u53EF\u53D6\uFF0C\u800C\u4E0D\u662F\u7528\u4E8E\u7EC6\u7C92\u5EA6\u7684\u540C\u6B65\u63A7\u5236\u3002</li><li>\u5728\u4F4E\u66F4\u65B0\u4E89\u7528\u4E0B\uFF0C\u8FD9\u4E24\u4E2A\u7C7B\u5177\u6709\u76F8\u4F3C\u7684\u7279\u5F81\u3002</li><li>\u4F46\u662F\u5728\u9AD8\u7ADE\u4E89\u4E0B\uFF0C\u8FD9\u4E2A\u7C7B\u7684 <strong>\u9884\u671F\u541E\u5410\u91CF\u660E\u663E\u66F4\u9AD8</strong>\uFF0C\u4EE3\u4EF7\u662F <strong>\u66F4\u9AD8\u7684\u7A7A\u95F4\u6D88\u8017</strong>\u3002</li><li><code>LongAdders</code> \u53EF\u4EE5\u4E0E java.util.concurrent.<code>ConcurrentHashMap</code> \u4E00\u8D77\u4F7F\u7528\uFF0C\u4EE5\u7EF4\u62A4\u53EF\u6269\u5C55\u7684\u9891\u7387\u56FE\uFF08\u76F4\u65B9\u56FE\u6216\u591A\u91CD\u96C6\u7684\u4E00\u79CD\u5F62\u5F0F\uFF09\u3002 <ul><li>\u4F8B\u5982\uFF0C\u8981\u5C06\u8BA1\u6570\u6DFB\u52A0\u5230 ConcurrentHashMap&lt;String,LongAdder&gt; freqs\uFF0C</li><li>\u5982\u679C\u4E0D\u5B58\u5728\u5219\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528 freqs.computeIfAbsent(k -&gt; new LongAdder()).increment();</li></ul></li><li>\u8BE5\u7C7B\u6269\u5C55\u4E86 Number\uFF0C\u4F46\u6CA1\u6709\u5B9A\u4E49\u8BF8\u5982 equals\u3001hashCode \u548C compareTo \u7B49\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5B9E\u4F8B\u9884\u8BA1\u4F1A\u53D1\u751F\u53D8\u5F02\uFF0C\u56E0\u6B64\u4E0D\u80FD\u7528\u4F5C\u96C6\u5408\u952E\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LongAdder</span> <span class="token keyword">extends</span> <span class="token class-name">Striped64</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
    <span class="token keyword">public</span> <span class="token class-name">LongAdder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    
    <span class="token comment">// \u589E\u52A0</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> 
        <span class="token keyword">long</span> b<span class="token punctuation">,</span> v<span class="token punctuation">;</span> 
        <span class="token keyword">int</span> m<span class="token punctuation">;</span> 
        <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">casBase</span><span class="token punctuation">(</span>b <span class="token operator">=</span> base<span class="token punctuation">,</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> 
                <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> 
                <span class="token operator">||</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> 
                <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">cas</span><span class="token punctuation">(</span>v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">longAccumulate</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ++</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// --</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u8FD4\u56DE\u5F53\u524D\u603B\u548C</span>
    <span class="token comment">// \u8FD4\u56DE\u7684\u503C\u4E0D\u662F\u539F\u5B50\u5FEB\u7167\uFF1B\u5728\u6CA1\u6709\u5E76\u53D1\u66F4\u65B0\u7684\u60C5\u51B5\u4E0B\u8C03\u7528\u4F1A\u8FD4\u56DE\u51C6\u786E\u7684\u7ED3\u679C\uFF0C\u4F46\u5728\u8BA1\u7B97\u603B\u548C\u65F6\u53D1\u751F\u7684\u5E76\u53D1\u66F4\u65B0\u53EF\u80FD\u4E0D\u4F1A\u88AB\u5408\u5E76\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
        <span class="token keyword">long</span> sum <span class="token operator">=</span> base<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u91CD\u7F6E</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> cells<span class="token punctuation">;</span> 
        <span class="token class-name">Cell</span> a<span class="token punctuation">;</span>
        base <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    a<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">floatValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="striped64" tabindex="-1"><a class="header-anchor" href="#striped64" aria-hidden="true">#</a> Striped64</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Striped64</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token punctuation">{</span>
    <span class="token comment">// ------------- \u5C5E\u6027 -------------------</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NCPU <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// CPU \u6570</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Cell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cells<span class="token punctuation">;</span> <span class="token comment">// \u62C6\u5206\u6210\u7684\u6570\u7EC4\uFF0C\u6570\u91CF\u4E3A 2 \u7684\u5E42</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> base<span class="token punctuation">;</span> <span class="token comment">// \u57FA\u503C\uFF0C\u4E3B\u8981\u5728\u65E0\u7ADE\u4E89\u65F6\u4F7F\u7528\uFF0C\u901A\u8FC7 CAS \u66F4\u65B0\u3002</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> cellsBusy<span class="token punctuation">;</span> <span class="token comment">// \u8C03\u6574\u5927\u5C0F | \u521B\u5EFA\u5355\u5143\u683C\u65F6\u4F7F\u7528\u81EA\u65CB\u9501\uFF08\u901A\u8FC7 CAS \u9501\u5B9A\uFF09\u3002</span>
    
    <span class="token comment">// ---------- \u6784\u9020\u51FD\u6570 ---------------</span>
    <span class="token class-name">Striped64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    
    <span class="token comment">// ---------- \u5185\u90E8\u7C7B -------------</span>
    <span class="token annotation punctuation">@sun.misc.Contended</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Cell</span> <span class="token punctuation">{</span>
        <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>
        <span class="token class-name">Cell</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">cas</span><span class="token punctuation">(</span><span class="token keyword">long</span> cmp<span class="token punctuation">,</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> valueOffset<span class="token punctuation">,</span> cmp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Unsafe mechanics</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Unsafe</span> UNSAFE<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> valueOffset<span class="token punctuation">;</span>
        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                UNSAFE <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Unsafe \u7C7B\u83B7\u53D6</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> ak <span class="token operator">=</span> <span class="token class-name">Cell</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
                valueOffset <span class="token operator">=</span> UNSAFE<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span>ak<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ----------- \u5E38\u7528\u65B9\u6CD5 -------------</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">longAccumulate</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token class-name">LongBinaryOperator</span> fn<span class="token punctuation">,</span> <span class="token keyword">boolean</span> wasUncontended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">doubleAccumulate</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span> <span class="token class-name">DoubleBinaryOperator</span> fn<span class="token punctuation">,</span> <span class="token keyword">boolean</span> wasUncontended<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-unsafe" tabindex="-1"><a class="header-anchor" href="#_5-unsafe" aria-hidden="true">#</a> 5. Unsafe</h2><h3 id="_1-\u83B7\u53D6-unsafe-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_1-\u83B7\u53D6-unsafe-\u5BF9\u8C61" aria-hidden="true">#</a> 1) \u83B7\u53D6 Unsafe \u5BF9\u8C61</h3>`,34),v=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Unsafe"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Unsafe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token comment"},"// \u79C1\u6709\u6784\u9020\u51FD\u6570\uFF0C\u7981\u6B62\u5B9E\u4F8B\u5316 - \u5355\u4F8B\u6A21\u5F0F"),s(`
    
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"Unsafe"),s(" theUnsafe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Unsafe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u997F\u6C49\u5F0F\u521B\u5EFA \u5355\u4F8B"),s(`
    
    `),n("span",{class:"token comment"},"// \u63D0\u4F9B\u5BF9\u5916\u83B7\u53D6 \u5355\u4F8B \u7684\u8BBF\u95EE\u63A5\u53E3"),s(`
    `),n("span",{class:"token comment"},"// \u5B83\u53EF\u7528\u4E8E\u5728\u4EFB\u610F\u5185\u5B58\u5730\u5740\u8BFB\u53D6\u548C\u5199\u5165\u6570\u636E\uFF0C\u56E0\u6B64\u7EDD\u4E0D\u80FD\u4F20\u9012\u7ED9\u4E0D\u53D7\u4FE1\u4EFB\u7684\u4EE3\u7801"),s(`
    `),n("span",{class:"token annotation punctuation"},"@CallerSensitive"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},"Unsafe"),s(),n("span",{class:"token function"},"getUnsafe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"Class"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},">")]),s(" caller "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Reflection"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getCallerClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// \u53EA\u6709 Bootstrap classLoader \u52A0\u8F7D\u7684\u7C7B\u624D\u80FD\u591F\u8C03\u7528 Unsafe \u7C7B\u4E2D\u7684\u65B9\u6CD5\uFF0C\u5426\u5219\u629B\u5F02\u5E38"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("VM"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isSystemDomainLoader"),n("span",{class:"token punctuation"},"("),s("caller"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClassLoader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(` 
            `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SecurityException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Unsafe"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" theUnsafe"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},"Unsafe"),s(),n("span",{class:"token function"},"reflectGetUnsafe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"Field"),s(" field "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Unsafe"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getDeclaredField"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"theUnsafe"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u901A\u8FC7\u53CD\u5C04\u83B7\u53D6 \u5C5E\u6027 theUnsafe"),s(`
      field`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setAccessible"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Unsafe"),n("span",{class:"token punctuation"},")"),s(" field"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getMessage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=t(`<h3 id="_2-\u5E38\u89C1\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u5E38\u89C1\u65B9\u6CD5" aria-hidden="true">#</a> 2) \u5E38\u89C1\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// LockSupport \u7C7B\u7528\u5230</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isAbsolute<span class="token punctuation">,</span> <span class="token keyword">long</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">unpark</span><span class="token punctuation">(</span><span class="token class-name">Object</span> thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// CAS \u64CD\u4F5C </span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token keyword">long</span> offset<span class="token punctuation">,</span>
                                                   <span class="token keyword">long</span> expected<span class="token punctuation">,</span>
                                                   <span class="token keyword">long</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function w(f,h){const p=i("Tabs");return u(),k("div",null,[m,r(p,{data:[{title:"Unsafe"},{title:"\u53CD\u5C04\u83B7\u53D6"}],"tab-id":"code19"},{tab0:a(({title:e,value:o,isActive:c})=>[v]),tab1:a(({title:e,value:o,isActive:c})=>[b]),_:1}),y])}var _=l(d,[["render",w],["__file","atomic.html.vue"]]);export{_ as default};
