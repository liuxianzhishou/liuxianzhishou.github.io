import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as t,c as p,b as c,e as n}from"./app.5aebcaaa.js";var o="/assets/img_4.a5586417.png";const l={},i=n('<h1 id="threadpoolexecutor" tabindex="-1"><a class="header-anchor" href="#threadpoolexecutor" aria-hidden="true">#</a> \u{1F7E2} ThreadPoolExecutor</h1><h2 id="_1-\u7C7B\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u6CE8\u91CA" aria-hidden="true">#</a> 1. \u7C7B\u6CE8\u91CA</h2><ol><li><strong>\u4F5C\u7528</strong><ul><li>\u964D\u4F4E\u7EBF\u7A0B\u521B\u5EFA\u3001\u5173\u95ED\u7684\u65F6\u95F4\u6D88\u8017\uFF0C\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6</li><li>\u5927\u91CF\u7EBF\u7A0B\u4F1A\u5360\u7528\u5927\u91CF\u5185\u5B58\u8D44\u6E90\uFF0C\u63D0\u9AD8\u7EBF\u7A0B\u5229\u7528\u7387\uFF0C\u964D\u4F4E\u8D44\u6E90\u6D88\u8017</li><li>\u63D0\u4F9B\u4E86\u5BF9\u76F8\u5173\u72B6\u6001\u7684\u76D1\u63A7</li><li>\u53EF\u63A7\u5236\u6700\u5927\u5E76\u53D1\u6570\uFF0C\u907F\u514D\u8FC7\u5EA6\u7ADE\u4E89</li></ul></li><li><strong>\u6267\u884C\u6D41\u7A0B</strong></li></ol>',3),u=n(`<ol start="3"><li><p><strong>\u6309\u9700\u521B\u5EFA</strong></p><ul><li>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5373\u4F7F\u662F\u6838\u5FC3\u7EBF\u7A0B\u4E5F\u91C7\u7528<mark>\u61D2\u52A0\u8F7D</mark>\u7684\u65B9\u5F0F\uFF0C\u5373\u53EA\u6709\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u5230\u8FBE\u65F6\u624D\u4F1A\u8FDB\u884C\u521B\u5EFA &amp; \u542F\u52A8</li><li>\u4F46\u53EF\u4EE5\u901A\u8FC7 \u91CD\u5199 <code>prestartCoreThread</code> &amp; <code>prestartAllCoreThreads</code> \u65B9\u6CD5\u6765\u6309\u9700\u542F\u52A8</li></ul></li><li><p><strong>\u521B\u5EFA\u65B0\u7EBF\u7A0B</strong></p><ul><li>\u901A\u8FC7 ThreadFactory \u6765\u521B\u5EFA\u65B0\u7EBF\u7A0B</li><li>\u82E5\u6CA1\u6709\u7279\u522B\u6307\u5B9A\uFF0C\u5219\u4F1A\u4F7F\u7528 defaultThreadFactory</li><li>defaultThreadFactory \u521B\u5EFA\u7684\u7EBF\u7A0B\u90FD\u5C06\u5728\u540C\u4E00\u4E2A <code>ThreadGroup</code> \u4E2D\uFF0C\u4E14 \u7EBF\u7A0B\u4F18\u5148\u7EA7\u5747\u4E3A <code>NORM_PRIORITY</code>\uFF0C\u4E14\u5747 <code>\u975E\u5B88\u62A4\u7EBF\u7A0B</code></li><li>\u82E5\u662F\u81EA\u5DF1\u63D0\u4F9B ThreadFactory\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u7EBF\u7A0B\u540D\u79F0\u3001\u7EBF\u7A0B\u7EC4\u3001\u4F18\u5148\u7EA7\u3001\u662F\u5426\u4E3A\u5B88\u62A4\u7EBF\u7A0B\u7B49</li><li>\u82E5\u662F ThreadFactory \u521B\u5EFA\u65B0\u7EBF\u7A0B\u5931\u8D25\uFF0C\u8FD4\u56DE\u4E00\u4E2A null \u7684\u65B0\u7EBF\u7A0B\uFF0C\u7EBF\u7A0B\u6C60\u4F1A\u7EE7\u7EED\u8FDB\u884C\uFF0C\u4F46\u53EF\u80FD\u4E0D\u4F1A\u6267\u884C\u4EFB\u4F55\u4EFB\u52A1</li></ul></li><li><p><strong>\u5B58\u6D3B\u65F6\u95F4</strong></p><ul><li>\u82E5\u5F53\u524D\u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u6570 &gt; corePoolSize\uFF0C\u591A\u4F59\u7684\u7EBF\u7A0B\u5C06\u88AB\u7EC8\u6B62\uFF0C\u82E5\u662F\u5B83\u4EEC\u7684\u7A7A\u95F2\u65F6\u95F4 &gt; keepAliveTime</li><li>\u8FD9\u6837\u5C31\u80FD\u8282\u7701\u8D44\u6E90\u7684\u6D88\u8017\uFF0C\u5F53\u7EBF\u7A0B\u6C60\u4E0D\u518D\u88AB\u6D3B\u8DC3\u4F7F\u7528\uFF0C\u5F53\u7EBF\u7A0B\u6C60\u4E4B\u540E\u53C8\u53D8\u5F97\u6D3B\u8DC3\uFF0C\u65B0\u7EBF\u7A0B\u5C06\u4F1A\u88AB\u521B\u5EFA</li><li>keepAliveTime \u8FD9\u4E2A\u53C2\u6570\u53EF\u4EE5\u5728\u8FD0\u884C\u671F\u95F4\u901A\u8FC7 <code>setKeepAliveTime(long, TimeUnit)</code> \u52A8\u6001\u8C03\u6574</li><li>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u53EA\u6709 <code>\u5F53\u524D\u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u6570 &gt; corePoolSize</code> \u8FD9\u4E00\u60C5\u51B5\u4E0B\uFF0C\u624D\u4F1A\u6267\u884C\u8FD9\u4E00\u7B56\u7565</li><li>\u4F46\u53EF\u4EE5\u901A\u8FC7<code> allowCoreThreadTimeOut(boolean)</code> \u8FD9\u4E00\u65B9\u6CD5\u8BA9\u5176\u540C\u6837\u9002\u7528\u4E8E <mark>\u6838\u5FC3\u7EBF\u7A0B</mark></li></ul></li><li><p><strong>\u5DE5\u4F5C\u961F\u5217</strong></p><ul><li>\u961F\u5217\u53EF\u4EE5\u662F \u4EFB\u4F55 <code>BlockingQueue</code></li><li>\u6709\u4E09\u79CD\u5E38\u89C1\u7B56\u7565\uFF1A <ul><li><strong>\u4E0D\u5B58\u5143\u7D20\u961F\u5217</strong><ul><li>\u4E00\u4E2A\u9ED8\u8BA4\u9009\u62E9\u5C31\u662F <code>SynchronousQueue</code>\uFF0C\u8FD9\u4E2A\u961F\u5217\u4E0D\u5B58\u50A8\u4EFB\u52A1\uFF0C\u5F53\u6709\u4EFB\u52A1\u65F6\uFF0C\u4F1A\u4EA4\u7ED9\u7EBF\u7A0B\u6267\u884C\uFF0C\u56E0\u6B64\u53EA\u8981\u6709\u4EFB\u52A1\uFF0C\u5C31\u4F1A\u521B\u5EFA\u7EBF\u7A0B\u6267\u884C\u8FD9\u4E2A\u4EFB\u52A1</li><li>\u8BE5\u7B56\u7565\u4E0B maximumPoolSizes \u901A\u5E38\u65E0\u754C\uFF0C\u4EE5\u4FDD\u8BC1\u65B0\u4EFB\u52A1\u63D0\u4EA4\u65F6\uFF0C\u5728\u4EFB\u52A1\u5904\u7406\u901F\u5EA6\u5C0F\u4E8E\u4EFB\u52A1\u5904\u7406\u901F\u5EA6\u65F6\uFF0C\u4E0D\u4F1A\u88AB\u62D2\u7EDD</li></ul></li><li><strong>\u65E0\u754C\u961F\u5217</strong><ul><li>\u53EF\u4EE5\u9009\u62E9 <code>LinkedBlockingQueue</code>\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u5F53 \u6838\u5FC3\u7EBF\u7A0B\u6EE1\u65F6\uFF0C\u63D0\u4EA4\u7684\u65B0\u4EFB\u52A1\u4F1A\u88AB\u52A0\u5165\u5230\u5DE5\u4F5C\u961F\u5217\u4E2D\uFF0C\u6C38\u8FDC\u4E0D\u4F1A\u7EE7\u7EED\u521B\u5EFA\u65B0\u7EBF\u7A0B</li><li>\u9002\u7528\u4E8E\u6BCF\u4E2A\u4EFB\u52A1\u90FD\u662F\u4E92\u76F8\u72EC\u7ACB\uFF0C\u4EFB\u4F55\u4EFB\u52A1\u7684\u7ED3\u679C\u90FD\u4E0D\u4F1A\u5F71\u54CD\u5176\u4ED6\u4EFB\u52A1\u7684\u6267\u884C\uFF0C\u4F8B\u5982\u7F51\u9875\u670D\u52A1\u7AEF</li></ul></li><li><strong>\u6709\u754C\u961F\u5217</strong><ul><li>\u53EF\u4EE5\u9009\u62E9 <code>ArrayBlockingQueue</code>\uFF0C\u501F\u52A9 maximumPoolSizes \u53EF\u4EE5\u9632\u6B62\u8D44\u6E90\u8017\u5C3D\uFF0C\u4F46\u662F\u8FD9\u66F4\u96BE\u8C03\u6574\u548C\u63A7\u5236</li><li>\u4F7F\u7528 <code>\u5927\u961F\u5217 + \u5C0F\u7EBF\u7A0B\u6C60</code> \u53EF\u4EE5\u964D\u4F4E CPU \u7684\u4F7F\u7528\uFF0COS \u5185\u6838\u8D44\u6E90\uFF0C\u4EE5\u53CA\u7EBF\u7A0B\u5207\u6362\u8D1F\u62C5\uFF0C\u4F46\u53EF\u80FD\u5BFC\u81F4\u541E\u5410\u91CF\u964D\u4F4E</li><li>\u4F7F\u7528 <code>\u5C0F\u961F\u5217 + \u5927\u7EBF\u7A0B\u6C60</code> \u5C06\u4F7F CPU \u66F4\u52A0\u7E41\u5FD9\uFF0C\u4F46\u53EF\u80FD\u9047\u5230\u66F4\u591A\u7684\u8C03\u5EA6\u5F00\u9500\uFF0C\u4ECE\u800C\u4E5F\u5BFC\u81F4\u541E\u5410\u91CF\u964D\u4F4E</li></ul></li></ul></li></ul></li><li><p><strong>\u62D2\u7EDD\u7B56\u7565</strong></p><ul><li>\u4EC0\u4E48\u60C5\u51B5\u4E0B\u53D1\u751F\uFF1A <ul><li>\u6709\u754C\u5DE5\u4F5C\u961F\u5217\u5DF2\u6EE1 &amp; \u8FBE\u5230\u6700\u5927\u7EBF\u7A0B\u6570</li><li>\u7EBF\u7A0B\u6C60\u88AB\u5173\u95ED\uFF0Cshutdown() | shutdownNow()</li></ul></li><li>4 \u79CD\u5DF2\u7ECF\u88AB\u5B9A\u4E49\u597D\u7684\u62D2\u7EDD\u7B56\u7565\uFF1A <ul><li>ThreadPoolExecutor \u7C7B\u4E0B\u7684 <code>AbortPolicy</code> \u9759\u6001\u5185\u90E8\u7C7B <ul><li>\u62D2\u7EDD\u65B0\u4EFB\u52A1 &amp; \u629B\u51FA RejectedExecutionException \u5F02\u5E38</li><li>\u9ED8\u8BA4\u62D2\u7EDD\u7B56\u7565</li></ul></li><li>ThreadPoolExecutor.<code>CallerRunsPolicy</code><ul><li>\u54EA\u4E2A\u7EBF\u7A0B\u6267\u884C\u7684\u63D0\u4EA4\u4EFB\u52A1\uFF0C\u8BE5\u7EBF\u7A0B\u8D1F\u8D23\u6267\u884C\u8FD9\u4E2A\u4EFB\u52A1</li><li>\u8FD9\u79CD\u7B56\u7565\u662F\u4E00\u79CD\u7B80\u5355\u53CD\u9988\u63A7\u5236\uFF0C\u53EF\u4EE5\u964D\u4F4E\u65B0\u4EFB\u52A1\u7684\u63D0\u4EA4\u901F\u5EA6</li></ul></li><li>ThreadPoolExecutor.<code>DiscardPolicy</code><ul><li>\u82E5\u6267\u884C\u5668\u6CA1\u6709\u88AB\u5173\u95ED\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65E0\u6CD5\u88AB\u63D0\u4EA4\u7684\u65B0\u4EFB\u52A1\u5C06\u88AB\u76F4\u63A5\u4E22\u5F03</li></ul></li><li>ThreadPoolExecutor.<code>DiscardOldestPolicy</code><ul><li>\u82E5\u6267\u884C\u5668\u6CA1\u6709\u88AB\u5173\u95ED\uFF0C\u90A3\u4E48\u5DE5\u4F5C\u961F\u5217\u7684\u961F\u5934\u4EFB\u52A1\u4F1A\u88AB\u4E22\u5F03\uFF0C\u7136\u540E\u91CD\u65B0\u5C1D\u8BD5\u63D0\u4EA4\u65B0\u4EFB\u52A1\uFF0C\u4F46\u4E5F\u8BB8\u8FD8\u662F\u63D0\u4EA4\u5931\u8D25\uFF0C\u5BFC\u81F4\u8FD9\u4E2A\u8FC7\u7A0B\u4E00\u76F4\u88AB\u91CD\u590D</li></ul></li></ul></li><li>\u5176\u4ED6\u62D2\u7EDD\u7B56\u7565 <ul><li>\u53EF\u4EE5\u5B9A\u4E49 &amp; \u4F7F\u7528\u5176\u4ED6\u7C7B\u578B\u7684 RejectedExecutionHandler\uFF0C\u4F46\u9700\u8981\u8C28\u614E</li></ul></li></ul></li><li><p><strong>\u94A9\u5B50\u65B9\u6CD5</strong></p><ul><li>ThreadPoolExecutor \u63D0\u4F9B\u4E86 protected \u4FEE\u9970\u7684\u3001\u53EF\u4EE5\u88AB\u91CD\u5199\u7684\u65B9\u6CD5</li><li>\u4F8B\u5982\uFF0C<code>beforeExecute(Thread, Runnable)</code> &amp; <code>afterExecute(Runnable, Throwable)</code> \u53EF\u4EE5\u5728\u6BCF\u4E2A\u4EFB\u52A1\u88AB\u6267\u884C\u524D\u548C\u540E\u88AB\u8C03\u7528 <ul><li>\u53EF\u4EE5\u7528\u6765\u8BBE\u7F6E\u4E00\u4E9B\u6267\u884C\u73AF\u5883\uFF0C\u4F8B\u5982\uFF0C\u521D\u59CB\u5316 ThreadLocals\u3001\u6574\u5408\u7EDF\u8BA1\u7ED3\u679C\u3001\u6216\u6DFB\u52A0\u65E5\u5FD7\u7B49</li></ul></li><li>\u9664\u6B64\u4E4B\u5916\uFF0C<code>terminated()</code> \u4E5F\u53EF\u4EE5\u88AB\u91CD\u5199\uFF0C\u6765\u6EE1\u8DB3\u67D0\u4E9B\u4E00\u65E6\u6267\u884C\u5668\u5B8C\u5168\u7EC8\u6B62\u5C31\u9700\u8981\u505A\u7684\u7279\u6B8A\u5DE5\u4F5C</li><li>\u82E5\u662F\u94A9\u5B50\u65B9\u6CD5\u629B\u51FA\u4E86\u5F02\u5E38\uFF0C\u5185\u90E8\u5DE5\u4F5C\u7EBF\u7A0B\u53EF\u80FD\u4F1A\u4F9D\u6B21\u5931\u8D25\u5E76\u7A81\u7136\u7EC8\u6B62</li></ul></li><li><p><strong>\u961F\u5217\u7684\u7EF4\u62A4</strong></p><ul><li>\u901A\u8FC7 getQueue() \u65B9\u6CD5\u53EF\u4EE5\u5BF9\u5DE5\u4F5C\u961F\u5217\u8FDB\u884C\u76D1\u63A7\u548C\u8C03\u8BD5\uFF0C\u4F46\u4E0D\u63A8\u8350\u4F7F\u7528\u8BE5\u65B9\u6CD5\u8FDB\u884C\u5176\u4ED6\u76EE\u7684</li><li>\u63D0\u4F9B\u7684 <code>remove(Runnable)</code> &amp; <code>purge() </code>\u5728\u5927\u91CF\u4EFB\u52A1\u88AB\u53D6\u6D88\u65F6\uFF0C\u53EF\u4EE5\u534F\u52A9\u5185\u5B58\u7684\u56DE\u6536</li></ul></li><li><p><strong>\u7EC8\u6B62</strong></p><ul><li>\u82E5\u662F\u7EBF\u7A0B\u6C60\u4E0D\u518D\u88AB\u4EFB\u4F55\u9879\u76EE\u5F15\u7528\uFF0C\u4E14\u6CA1\u6709\u4EFB\u4F55\u9057\u7559\u7684\u7EBF\u7A0B\uFF0C\u90A3\u4E48\u7EBF\u7A0B\u6C60\u5C06\u88AB\u81EA\u52A8 shutdown</li><li>\u82E5\u5728\u7528\u6237\u5FD8\u8BB0\u4F7F\u7528 shutdown \u51FD\u6570\u7684\u60C5\u51B5\u4E0B\uFF0C\u60F3\u8981\u786E\u4FDD\u7EBF\u7A0B\u6C60\u88AB\u56DE\u6536\uFF0C\u5219\u5FC5\u987B\u4FDD\u8BC1\u6CA1\u6709\u88AB\u4F7F\u7528\u7684\u7EBF\u7A0B\u5747\u5DF2\u7ECF\u6B7B\u4EA1\uFF0C\u53EF\u4EE5\u901A\u8FC7 <ul><li>\u8BBE\u7F6E\u5408\u9002\u7684\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4</li><li>\u6838\u5FC3\u7EBF\u7A0B\u6570 &lt; 0 | \u8BBE\u7F6E allowCoreThreadTimeOut(boolean)</li></ul></li></ul></li></ol><hr><h2 id="_2-\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#_2-\u7C7B\u56FE" aria-hidden="true">#</a> 2. \u7C7B\u56FE</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolExecutor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractExecutorService</span> <span class="token punctuation">{</span>
<span class="token comment">// ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="img_4.png"></p><hr><h2 id="_3-\u5E38\u7528\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_3-\u5E38\u7528\u5C5E\u6027" aria-hidden="true">#</a> 3. \u5E38\u7528\u5C5E\u6027</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * ctl \u662F\u539F\u5B50\u7C7B\u6574\u6570\uFF0C\u5B83\u6709\u4E24\u4E2A\u4F5C\u7528\uFF1A
     *   workerCount \uFF1A \u8BB0\u5F55\u6709\u6548\u7EBF\u7A0B\u6570
     *   runState \uFF1A \u8BB0\u5F55\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF0C\u662F\u8FD0\u884C\u4E2D\u8FD8\u662F\u88AB\u5173\u95ED\u7B49
     *
     * \u4E3A\u4E86\u6574\u5408\u5230\u4E00\u4E2A int \u4E2D\uFF0C
     * workerCount \u88AB\u9650\u5236\u6700\u5927\u4E3A (2^29)-1 (about 5 \u4EBF) \u4E2A\u7EBF\u7A0B\uFF0C \u800C\u975E (2^31)-1 (20 \u4EBF)
     * \u82E5\u662F\u8FD9\u4E2A\u6570\u91CF\u503C\u5728\u672A\u6765\u8FD8\u4E0D\u591F\uFF0C\u6210\u4E3A\u4E00\u4E2A\u95EE\u9898\uFF0C\u90A3\u4E48 AtomicInteger \u5C06\u88AB\u66FF\u6362\u4E3A AtomicLong\uFF0C\u4F46\u73B0\u5728\u8FD8\u4E0D\u9700\u8981
     *
     * workerCount \u8868\u793A\u7684\u662F\u5DF2\u7ECF\u5F00\u59CB\u4F46\u662F\u8FD8\u6CA1\u6709\u7ED3\u675F\u7684 workers \u6570\u91CF
     * \u8FD9\u4E2A\u503C\u53EF\u80FD\u548C\u5B9E\u9645\u5B58\u6D3B\u7684\u7EBF\u7A0B\u6570\u6709\u77ED\u65F6\u95F4\u7684\u4E0D\u540C
     * \u4F8B\u5982\uFF0C\u5F53 ThreadFactory \u521B\u5EFA\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u5931\u8D25\uFF0C\u6216\u8005\u6B63\u5728\u7EC8\u6B62\u7684\u7EBF\u7A0B\u5728\u6B63\u5F0F\u7EC8\u6B62\u4E4B\u524D\u4ECD\u88AB\u8BB0\u5F55\u5728\u5185
     *
     * runState \u8BB0\u5F55\u7EBF\u7A0B\u6C60\u751F\u547D\u5468\u671F\u72B6\u6001\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u79CD\u60C5\u51B5\uFF1A
     *
     *   RUNNING:  \u63A5\u53D7\u65B0\u4EFB\u52A1 &amp; \u5904\u7406\u961F\u5217\u4E2D\u7684\u4EFB\u52A1
     *   SHUTDOWN: \u4E0D\u63A5\u53D7\u65B0\u4EFB\u52A1 &amp; \u5904\u7406\u961F\u5217\u4E2D\u7684\u4EFB\u52A1
     *   STOP:     \u4E0D\u63A5\u53D7\u65B0\u4EFB\u52A1 &amp; \u4E0D\u5904\u7406\u961F\u5217\u4E2D\u7684\u4EFB\u52A1 &amp; \u4E2D\u65AD\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1
     *   TIDYING:  \u6240\u6709\u4EFB\u52A1\u90FD\u5DF2\u7ECF\u7EC8\u6B62\uFF0C\u5DE5\u4F5C\u961F\u5217\u6CA1\u6709\u5F85\u5904\u7406\u7684\u4EFB\u52A1\uFF0C\u5C06\u6267\u884C terminated() \u65B9\u6CD5
     *   TERMINATED: terminated() \u65B9\u6CD5\u5DF2\u7ECF\u5B8C\u6210
     *
     * \u7EBF\u7A0B\u6C60\u72B6\u6001\u7684\u8F6C\u6362\u5173\u7CFB\uFF1A\u72B6\u6001\u6570\u503C\u5355\u8C03\u9012\u589E\uFF0C\u4F46\u4E0D\u5FC5\u6BCF\u4E2A\u72B6\u6001\u90FD\u4F1A\u7ECF\u5386
     *
     * RUNNING -&gt; SHUTDOWN  shutdown() \u88AB\u8C03\u7528
     * (RUNNING or SHUTDOWN) -&gt; STOP  shutdownNow() \u88AB\u8C03\u7528
     * SHUTDOWN -&gt; TIDYING  \u961F\u5217 &amp; \u7EBF\u7A0B\u6C60\u5747\u7A7A
     * STOP -&gt; TIDYING  \u7EBF\u7A0B\u6C60\u4E3A\u7A7A
     * TIDYING -&gt; TERMINATED  terminated() \u94A9\u5B50\u65B9\u6CD5\u5DF2\u7ECF\u6267\u884C\u5B8C\u6BD5
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> ctl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span>RUNNING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316 ctl</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> COUNT_BITS <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>SIZE <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 32 - 3 == 29</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CAPACITY   <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5927\u5DE5\u4F5C\u7EBF\u7A0B\u6570</span>

    <span class="token comment">// \u9AD8\u4F4D\u5B58\u653E\u7EBF\u7A0B\u6C60\u72B6\u6001</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RUNNING    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SHUTDOWN   <span class="token operator">=</span>  <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STOP       <span class="token operator">=</span>  <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TIDYING    <span class="token operator">=</span>  <span class="token number">2</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TERMINATED <span class="token operator">=</span>  <span class="token number">3</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>

    <span class="token comment">// \u4ECE ctl \u4E2D\u83B7\u53D6 runState | workerCount\uFF0C\u5C06 runState &amp; workerCount \u5C01\u88C5\u6210 ctl</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>     <span class="token punctuation">{</span> <span class="token keyword">return</span> c <span class="token operator">&amp;</span> <span class="token operator">~</span>CAPACITY<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>  <span class="token punctuation">{</span> <span class="token keyword">return</span> c <span class="token operator">&amp;</span> CAPACITY<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> rs<span class="token punctuation">,</span> <span class="token keyword">int</span> wc<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> rs <span class="token operator">|</span> wc<span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment">/*
     * runState \u72B6\u6001\u503C\u7684\u6BD4\u8F83\uFF0C\u53EF\u4EE5\u76F4\u63A5\u6BD4\u8F83\uFF0C\u65E0\u9700\u8FDB\u884C ctl \u4E2D runState \u7684\u62C6\u5206\u5DE5\u4F5C\uFF0C\u5F53\u7136\u524D\u63D0\u662F workerCount \u7EDD\u4E0D\u53EF\u80FD\u662F \u8D1F\u6570
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">runStateLessThan</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> c <span class="token operator">&lt;</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> c <span class="token operator">&gt;=</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> c <span class="token operator">&lt;</span> SHUTDOWN<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * CAS \u589E\u52A0 ctl \u4E2D workerCount \u7684\u503C
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expect<span class="token punctuation">,</span> expect <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * CAS \u5B9E\u73B0 workerCount --
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expect<span class="token punctuation">,</span> expect <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * CAS \u5B9E\u73B0 workerCount --
     * \u8FD9\u79CD\u60C5\u51B5\u53EA\u53D1\u751F\u5728 processWorkerExit \u7EBF\u7A0B\u7684\u7A81\u7136\u7EC8\u6B62
     * \u4EE5\u53CA\u4E0E getTask() \u65B9\u6CD5\u76F8\u5173
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u7528\u6765\u5B58\u653E\u4EFB\u52A1 &amp; \u4F20\u9012\u4EFB\u52A1\u7ED9 \u5DE5\u4F5C\u7EBF\u7A0B
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u867D\u7136\u53EF\u4EE5\u4F7F\u7528\u67D0\u79CD\u5E76\u53D1\u96C6\u5408\uFF0C\u4F46\u4E8B\u5B9E\u8BC1\u660E\u901A\u5E38\u6700\u597D\u4F7F\u7528\u9501
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5B58\u50A8\u7EBF\u7A0B\u6C60\u4E2D\u6240\u6709\u7684\u5DE5\u4F5C\u7EBF\u7A0B\uFF0C\u53EA\u5728\u6301\u6709 mainLock \u7684\u60C5\u51B5\u4E0B\u8FDB\u884C\u64CD\u4F5C
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Worker</span><span class="token punctuation">&gt;</span></span> workers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Worker</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Wait condition to support awaitTermination
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> termination <span class="token operator">=</span> mainLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8BB0\u5F55\u8FBE\u5230\u8FC7\u7684\u6700\u5927\u7EBF\u7A0B\u6C60\u6570\u91CF\uFF0C\u5FC5\u987B\u5728\u6301\u6709 mainLock \u7684\u60C5\u51B5\u4E0B\u8FDB\u884C\u64CD\u4F5C
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> largestPoolSize<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5DF2\u7ECF\u5B8C\u6210\u7684\u4EFB\u52A1\u4E2A\u6570\uFF0C\u53EA\u6709\u5F53\u67D0\u4E2A\u4EFB\u52A1\u5DF2\u7ECF\u88AB\u7EC8\u6B62\u65F6\u624D\u8FDB\u884C\u66F4\u65B0\uFF0C\u5FC5\u987B\u5728\u6301\u6709 mainLock \u7684\u60C5\u51B5\u4E0B\u8FDB\u884C\u64CD\u4F5C
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> completedTaskCount<span class="token punctuation">;</span>

    <span class="token comment">/*
     * \u4EE5\u4E0B\u662F\u7528\u6237\u63A7\u5236\u53C2\u6570\uFF0C\u6240\u6709\u53D8\u91CF\u5747\u4E3A volatile \u7C7B\u578B
     * \u4FDD\u8BC1\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u62FF\u5230\u7684\u90FD\u662F\u6700\u65B0\u503C\uFF0C\u4E14\u4E0D\u9700\u8981\u8FDB\u884C\u52A0\u9501\u64CD\u4F5C\uFF0C\u51CF\u5C11\u5F00\u9500
     * \u8FD9\u4E9B\u53D8\u91CF\u6CA1\u6709\u5176\u4ED6\u7A0B\u5E8F\u9700\u8981\u5BF9\u5B83\u4EEC\u505A\u4E00\u4E9B\u5185\u90E8\u7684\u8054\u5408\u53D8\u52A8\uFF0C\u56E0\u6B64\u4E5F\u6CA1\u6709\u5FC5\u8981\u52A0\u9501
     */</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382
     * \u6240\u6709\u7EBF\u7A0B\u5747\u901A\u8FC7\u8BE5\u5DE5\u5382\u8FDB\u884C\u521B\u5EFA
     * \u5FC5\u987B\u63D0\u4F9B\u521B\u5EFA\u7EBF\u7A0B\u5931\u8D25\u7684\u56DE\u8C03\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5F71\u54CD\u5230\u7CFB\u7EDF | \u7528\u6237\u9650\u5236\u7EBF\u7A0B\u6570\u91CF\u7684\u76F8\u5173\u7B56\u7565
     * \u5C3D\u7BA1\u8FD9\u4E0D\u662F\u4E00\u4E2A\u9519\u8BEF\uFF0C\u4F46\u662F\u7EBF\u7A0B\u521B\u5EFA\u5931\u8D25\u53EF\u80FD\u5BFC\u81F4\u65B0\u4EFB\u52A1\u88AB\u62D2\u7EDD | \u4EFB\u52A1\u88AB\u963B\u585E\u5728\u961F\u5217\u4E2D
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u9971\u548C | \u5173\u95ED\u7EBF\u7A0B\u6C60 \u65F6\u4F1A\u6267\u884C\u7684\u62D2\u7EDD\u7B56\u7565
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4\uFF0C\u9ED8\u8BA4\u7EB3\u79D2\u4E3A\u5355\u4F4D
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u9ED8\u8BA4 == false\uFF0C\u6B64\u65F6\uFF0C\u5373\u4F7F\u6838\u5FC3\u7EBF\u7A0B\u4E3A\u7A7A\u95F2\u72B6\u6001\uFF0C\u4ECD\u5B58\u6D3B
     * \u82E5 == true\uFF0C\u6B64\u65F6\uFF0C\u6838\u5FC3\u7EBF\u7A0B\u4E5F\u53C2\u4E0E\u5230 keepAliveTime \u4E2D\uFF0C\u8FC7\u671F\u5220\u9664
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> allowCoreThreadTimeOut<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u6838\u5FC3\u7EBF\u7A0B\u6570
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u53D7\u9650\u4E8E\u7EBF\u7A0B\u6C60\u6700\u5927\u7EBF\u7A0B\u6570 CAPACITY
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u9ED8\u8BA4\u62D2\u7EDD\u7B56\u7565 - \u62D2\u7EDD\u65B0\u4EFB\u52A1 &amp; \u629B\u51FA\u5F02\u5E38
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">RejectedExecutionHandler</span> defaultHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * shutdown \u548C shutdownNow \u7684\u8C03\u7528\u8005\u6240\u9700\u7684\u6743\u9650
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">RuntimePermission</span> shutdownPerm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RuntimePermission</span><span class="token punctuation">(</span><span class="token string">&quot;modifyThread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* The context to be used when executing the finalizer, or null. */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AccessControlContext</span> acc<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_4-\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 4. \u6784\u9020\u51FD\u6570</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u5E26 \u9ED8\u8BA4\u7EBF\u7A0B\u5DE5\u5382 &amp; \u62D2\u7EDD\u7B56\u7565 \u7684\u7EBF\u7A0B\u6C60
     * \u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528 Executors \u7C7B\u63D0\u4F9B\u7684\u5E38\u7528\u7EBF\u7A0B\u6C60\u66F4\u65B9\u4FBF\u4E00\u4E9B
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> 
            maximumPoolSize<span class="token punctuation">,</span> 
            keepAliveTime<span class="token punctuation">,</span> 
            unit<span class="token punctuation">,</span> 
            workQueue<span class="token punctuation">,</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
            defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA \u5E26\u9ED8\u8BA4\u62D2\u7EDD\u7B56\u7565\u7684\u7EBF\u7A0B\u6C60
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                              <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> 
            maximumPoolSize<span class="token punctuation">,</span> 
            keepAliveTime<span class="token punctuation">,</span> 
            unit<span class="token punctuation">,</span> 
            workQueue<span class="token punctuation">,</span>
            threadFactory<span class="token punctuation">,</span> 
            defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u5E26 \u9ED8\u8BA4\u7EBF\u7A0B\u5DE5\u5382 \u7684\u7EBF\u7A0B\u6C60
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                              <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> 
            maximumPoolSize<span class="token punctuation">,</span> 
            keepAliveTime<span class="token punctuation">,</span> 
            unit<span class="token punctuation">,</span> 
            workQueue<span class="token punctuation">,</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
            handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u4E00\u4E2A\u5168\u90E8\u53C2\u6570\u5747\u6307\u5B9A\u7684\u7EBF\u7A0B\u6C60
     *
     * <span class="token keyword">@param</span> <span class="token parameter">corePoolSize</span> \u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u5373\u4F7F\u7EBF\u7A0B\u7A7A\u95F2\u4E5F\u4F1A\u5B58\u5728\uFF0C\u9664\u975E\u4F7F\u7528 allowCoreThreadTimeOut
     * <span class="token keyword">@param</span> <span class="token parameter">maximumPoolSize</span> t\u6700\u5927\u7EBF\u7A0B\u6570
     * <span class="token keyword">@param</span> <span class="token parameter">keepAliveTime</span> \u7EBF\u7A0B\u6570 &gt; \u6838\u5FC3\u7EBF\u7A0B\u6570\u7684\u524D\u63D0\u4E0B\uFF0C\u591A\u4F59\u7684\u7EBF\u7A0B\u6700\u591A\u7A7A\u95F2\u8FD9\u4E48\u957F\u65F6\u95F4\u5C31\u4F1A\u88AB\u56DE\u6536
     * <span class="token keyword">@param</span> <span class="token parameter">unit</span> \u65F6\u95F4\u5355\u4F4D
     * <span class="token keyword">@param</span> <span class="token parameter">workQueue</span> \u5728\u4EFB\u52A1\u88AB\u6267\u884C\u4E4B\u524D\u6682\u5B58\u4EFB\u52A1\uFF0C\u53EA\u5B58\u653E\u901A\u8FC7 execute \u65B9\u6CD5\u63D0\u4EA4\u7684 Runnable \u7C7B\u7684\u4EFB\u52A1
     * <span class="token keyword">@param</span> <span class="token parameter">threadFactory</span> \u7EBF\u7A0B\u5DE5\u5382
     * <span class="token keyword">@param</span> <span class="token parameter">handler</span> \u62D2\u7EDD\u7B56\u7565
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if one of the following holds:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span></span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span></span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span></span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">maximumPoolSize <span class="token operator">&lt;</span> corePoolSize</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">workQueue</span></span><span class="token punctuation">}</span>
     *         or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">threadFactory</span></span><span class="token punctuation">}</span> or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">handler</span></span><span class="token punctuation">}</span> is null
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                              <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span>
                              <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>
            maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>
            keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
        <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> threadFactory <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> handler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
        <span class="token keyword">this</span><span class="token punctuation">.</span>acc <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#_4-\u5185\u90E8\u7C7B" aria-hidden="true">#</a> 4. \u5185\u90E8\u7C7B</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Worker \u7C7B\u4E3B\u8981\u7EF4\u62A4\u7EBF\u7A0B\u8FD0\u884C\u4EFB\u52A1\u7684\u4E2D\u65AD\u63A7\u5236\u72B6\u6001\uFF0C\u4EE5\u53CA\u5176\u4ED6\u6B21\u8981\u7684\u8BB0\u5F55\u3002
     * \u6B64\u7C7B\u6269\u5C55 AbstractQueuedSynchronizer \u4EE5\u7B80\u5316\u83B7\u53D6\u548C\u91CA\u653E\u56F4\u7ED5\u6BCF\u4E2A\u4EFB\u52A1\u6267\u884C\u7684\u9501\u3002
     * \u8FD9\u53EF\u4EE5\u9632\u6B62\u65E8\u5728\u5524\u9192\u7B49\u5F85\u4EFB\u52A1\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u800C\u4E0D\u662F\u4E2D\u65AD\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u7684\u4E2D\u65AD\u3002
     * \u5B9E\u73B0\u4E86\u4E0D\u53EF\u91CD\u5165\u4E92\u65A5\u9501\u800C\u4E0D\u662F\u4F7F\u7528 ReentrantLock\uFF0C\u662F\u56E0\u4E3A\u4E0D\u5E0C\u671B\u5728\u8C03\u7528 setCorePoolSize \u7B49\u7EBF\u7A0B\u6C60\u63A7\u5236\u65B9\u6CD5\u65F6\u80FD\u591F\u91CD\u65B0\u83B7\u53D6\u9501\u3002
     * \u6B64\u5916\uFF0C\u4E3A\u4E86\u5728\u7EBF\u7A0B\u771F\u6B63\u5F00\u59CB\u8FD0\u884C\u4EFB\u52A1\u4E4B\u524D\u6291\u5236\u4E2D\u65AD\uFF0C\u6211\u4EEC\u5C06\u9501\u5B9A\u72B6\u6001\u521D\u59CB\u5316\u4E3A\u8D1F\u503C\uFF0C\u5E76\u5728\u542F\u52A8\u65F6\u5C06\u5176\u6E05\u9664\uFF08\u5728 runWorker \u4E2D\uFF09\u3002
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u8BE5\u7C7B\u6C38\u8FDC\u4E0D\u4F1A\u88AB\u5E8F\u5217\u5316\uFF0C\u4ECD\u7136\u63D0\u4F9B\u662F\u4E3A\u4E86\u6302\u8D77\u4E00\u4E2A javac \u7684\u8B66\u544A
         */</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">6138294804551838833L</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5F53\u524D worker \u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\uFF0C\u5F53 \u7EBF\u7A0B\u5DE5\u5382\u5931\u8D25\u65F6 \u4E3A null</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>
        <span class="token comment">// \u6267\u884C\u7684\u521D\u59CB\u4EFB\u52A1\uFF0C\u53EF\u80FD\u4E3A null</span>
        <span class="token class-name">Runnable</span> firstTask<span class="token punctuation">;</span>
        <span class="token comment">// \u6BCF\u4E2A\u7EBF\u7A0B\u5B8C\u6210\u7684\u4EFB\u52A1\u6570</span>
        <span class="token keyword">volatile</span> <span class="token keyword">long</span> completedTasks<span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * \u4ECE\u7EBF\u7A0B\u5DE5\u5382\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u5E76\u5E26\u6709\u521D\u59CB\u4EFB\u52A1
         * <span class="token keyword">@param</span> <span class="token parameter">firstTask</span> the first task (null if none)
         */</span>
        <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6291\u5236\u4E2D\u65AD\uFF0C\u76F4\u5230 worker \u5DE5\u4F5C\u65F6\u6062\u590D</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>firstTask <span class="token operator">=</span> firstTask<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token function">getThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u5DE5\u5382\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6267\u884C\u8BE5 Runnable \u7C7B</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// run() \u65B9\u6CD5</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5224\u65AD\u662F\u5426\u5904\u4E8E\u72EC\u5360\u72B6\u6001</span>
        <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0 - \u672A\u88AB\u9501\u4F4F\uFF0C1 \u8868\u793A\u5728\u9501\u4F4F\u72B6\u6001</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// AQS \u81EA\u5E26\u7684\u9700\u8981\u5B9E\u73B0\u7684\u65B9\u6CD5 - \u53EF\u4EE5\u770B\u51FA\u662F\u53EA\u6709 0 1 \u72B6\u6001\uFF0C\u4E3A\u4E0D\u53EF\u91CD\u5165\u72EC\u5360\u9501</span>
        <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// AQS \u81EA\u5E26\u9700\u8981\u5B9E\u73B0\u7684\u65B9\u6CD5 </span>
        <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">void</span> <span class="token function">interruptIfStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span> t<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> thread<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    t<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * \u4EE5\u4E0B\u4E3A\u8BBE\u7F6E\u63A7\u5236\u72B6\u6001\u7684\u65B9\u6CD5
     */</span>

    <span class="token doc-comment comment">/**
     * \u4FEE\u6539\u5F53\u524D\u4EFB\u52A1\u7684\u72B6\u6001
     * \u5C06 runState \u8F6C\u6362\u4E3A\u7ED9\u5B9A\u7684\u76EE\u6807\uFF0C\u6216\u8005\u5982\u679C\u81F3\u5C11\u5DF2\u7ECF\u662F\u7ED9\u5B9A\u7684\u76EE\u6807\uFF0C\u5219\u4E0D\u7406\u4F1A\u5B83\u3002
     *
     * <span class="token keyword">@param</span> <span class="token parameter">targetState</span> \u53EA\u80FD\u4E3A SHUTDOWN or STOP\uFF0C
     * \u4E0D\u53EF\u4EE5\u4E3A TIDYING or TERMINATED\uFF0C\u82E5\u8981\u8BBE\u7F6E\u4E3A\u8BE5\u72B6\u6001\uFF0C\u4F7F\u7528\u4E0B\u9762\u7684 tryTerminate() \u65B9\u6CD5
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">advanceRunState</span><span class="token punctuation">(</span><span class="token keyword">int</span> targetState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> targetState<span class="token punctuation">)</span> <span class="token operator">||</span>
                ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span>targetState<span class="token punctuation">,</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// c &gt;= \u7ED9\u5B9A\u72B6\u6001 || \u6210\u529F\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u72B6\u6001</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5C06\u7EBF\u7A0B\u6C60\u72B6\u6001\u8BBE\u7F6E\u4E3A TERMINATED
     * \u82E5\u4E0D\u6EE1\u8DB3 TERMINATED \u7684\u524D\u7F6E\u6761\u4EF6\uFF0C\u76F4\u63A5\u8FD4\u56DE\uFF1B\u5426\u5219\u6267\u884C terminated()\uFF0C\u7136\u540E\u66F4\u6539\u72B6\u6001\u4E3A TERMINATED
     * \u53EA\u6709\u5728 (SHUTDOWN &amp; \u7EBF\u7A0B\u6C60\u4E3A\u7A7A &amp; \u961F\u5217\u4E3A\u7A7A) || (STOP &amp; \u7EBF\u7A0B\u6C60\u4E3A\u7A7A) \u65F6\u624D\u6709\u6548
     * \u82E5\u6709\u8D44\u683C \u8FDB\u5165 TERMINATED \u72B6\u6001\uFF0C\u6B64\u65F6\u9700\u8981\u4E2D\u65AD\u4E00\u4E2A\u7A7A\u95F2\u7684 worker \u6765\u4FDD\u8BC1 shutdown \u4FE1\u53F7\u7684\u4F20\u64AD
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> TIDYING<span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u4EE5\u4E0A\u60C5\u51B5\u7EC8\u6B62\u7EBF\u7A0B\u6C60\u5931\u8D25</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6709\u8D44\u683C\u8FDB\u5165 TERMINATED \u72B6\u6001</span>
                <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span>ONLY_ONE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u65AD\u4E00\u4E2A\u7A7A\u95F2\u7684 worker </span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u53EF\u4EE5\u76F4\u63A5 TERMINATED \u7EBF\u7A0B\u6C60</span>
            <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span>TIDYING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token function">terminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        ctl<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span>TERMINATED<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        termination<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// else retry on failed CAS</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * \u4EE5\u4E0B\u65B9\u6CD5\u4E3A\u63A7\u5236 woker \u7EBF\u7A0B\u7684\u4E2D\u65AD
     */</span>

    <span class="token doc-comment comment">/**
     * \u5982\u679C\u8BBE\u7F6E\u4E86\u5B89\u5168\u7BA1\u7406\uFF0C\u9700\u8981\u786E\u4FDD\u8C03\u7528\u8005\u62E5\u6709 \u5173\u95ED\u7EBF\u7A0B\u7684\u6743\u9650
     * \u82E5\u672A\u8BBE\u7F6E\u5B89\u5168\u7BA1\u7406\uFF0C\u9700\u8981\u786E\u4FDD\u8C03\u7528\u8005\u53EF\u88AB\u5141\u8BB8\u4E2D\u65AD worker \u7EBF\u7A0B
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SecurityManager</span> security <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>security <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            security<span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span>shutdownPerm<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Worker</span> w <span class="token operator">:</span> workers<span class="token punctuation">)</span>
                    security<span class="token punctuation">.</span><span class="token function">checkAccess</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u4E2D\u65AD wokers \u96C6\u5408\u4E2D\u7684\u6240\u6709\u7EBF\u7A0B\uFF0C\u5373\u4F7F\u7EBF\u7A0B\u662F\u8FD0\u884C\u72B6\u6001
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Worker</span> w <span class="token operator">:</span> workers<span class="token punctuation">)</span>
                w<span class="token punctuation">.</span><span class="token function">interruptIfStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u4E2D\u65AD\u53EF\u80FD\u6B63\u5728\u7B49\u5F85\u4EFB\u52A1\u7684\u7EBF\u7A0B\uFF0C\u4EE5\u4FBF\u5B83\u4EEC\u53EF\u4EE5\u68C0\u67E5\u7EC8\u6B62\u6216\u914D\u7F6E\u66F4\u6539\u3002\u5FFD\u7565 SecurityExceptions\uFF08\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u67D0\u4E9B\u7EBF\u7A0B\u53EF\u80FD\u4FDD\u6301\u4E0D\u95F4\u65AD\uFF09\u3002
     *
     * <span class="token keyword">@param</span> <span class="token parameter">onlyOne</span> \u82E5 == true\uFF0C\u6700\u591A\u4E2D\u65AD\u4E00\u4E2A worker\uFF0C\u53EA\u6709\u5728 tryTerminate() \u4E2D\u88AB\u8C03\u7528
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> onlyOne<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Worker</span> w <span class="token operator">:</span> workers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> w<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        t<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyOne<span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u4E2D\u65AD\u6240\u6709\u7A7A\u95F2\u7EBF\u7A0B\u7684\u5C01\u88C5\uFF0C\u4E3A\u4E86\u907F\u514D\u5FD8\u8BB0\u5230\u5E95\u662F true \u8FD8\u662F false \u6765\u4E2D\u65AD\u6240\u6709\u7A7A\u95F2\u7EBF\u7A0B
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> ONLY_ONE <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 

    <span class="token comment">/*
     * \u5176\u4ED6\u5171\u7528\u7C7B\uFF0C\u5927\u90E8\u5206 ScheduledThreadPoolExecutor \u4E5F\u53EF\u80FD\u88AB\u7528\u5230
     */</span>

    <span class="token doc-comment comment">/**
     * \u4E3A\u7ED9\u5B9A\u547D\u4EE4\u8C03\u7528\u88AB\u62D2\u7EDD\u7684\u6267\u884C\u5904\u7406\u7A0B\u5E8F\u3002\u53D7\u5305\u4FDD\u62A4\uFF0C\u4F9B ScheduledThreadPoolExecutor \u4F7F\u7528\u3002
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        handler<span class="token punctuation">.</span><span class="token function">rejectedExecution</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5728\u8C03\u7528\u5173\u95ED\u65F6\u6267\u884C\u8FD0\u884C\u72B6\u6001\u8F6C\u6362\u540E\u7684\u4EFB\u4F55\u8FDB\u4E00\u6B65\u6E05\u7406\u3002
     * \u6B64\u5904\u4E3A\u65E0\u64CD\u4F5C\uFF0C\u4F46\u7531 ScheduledThreadPoolExecutor \u7528\u4E8E\u53D6\u6D88\u5EF6\u8FDF\u7684\u4EFB\u52A1\u3002
     */</span>
    <span class="token keyword">void</span> <span class="token function">onShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * ScheduledThreadPoolExecutor \u9700\u8981\u8FDB\u884C\u72B6\u6001\u68C0\u67E5\u4EE5\u5728\u5173\u673A\u671F\u95F4\u542F\u7528\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\u3002
     *
     * <span class="token keyword">@param</span> <span class="token parameter">shutdownOK</span> true if should return true if SHUTDOWN
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isRunningOrShutdown</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> shutdownOK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> rs <span class="token operator">==</span> RUNNING <span class="token operator">||</span> <span class="token punctuation">(</span>rs <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> shutdownOK<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5C06\u4EFB\u52A1\u961F\u5217\u6392\u7A7A\u5230\u4E00\u4E2A\u65B0\u5217\u8868\u4E2D\uFF0C\u901A\u5E38\u4F7F\u7528 drainTo\u3002
     * \u4F46\u662F\uFF0C\u5982\u679C\u961F\u5217\u662F DelayQueue \u6216\u4EFB\u4F55\u5176\u4ED6\u7C7B\u578B\u7684\u961F\u5217\uFF0C\u5176 poll \u6216 drainTo \u53EF\u80FD\u65E0\u6CD5\u5220\u9664\u67D0\u4E9B\u5143\u7D20\uFF0C\u5B83\u4F1A\u4E00\u4E00\u5220\u9664\u5B83\u4EEC\u3002
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">drainQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> q <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> taskList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        q<span class="token punctuation">.</span><span class="token function">drainTo</span><span class="token punctuation">(</span>taskList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Runnable</span> r <span class="token operator">:</span> q<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    taskList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> taskList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * \u7528\u6765\u521B\u5EFA worker\u3001\u8FD0\u884C worker \u4EE5\u53CA worker \u7684\u6E05\u7406\u5DE5\u4F5C
     */</span>

    <span class="token doc-comment comment">/**
     * \u6DFB\u52A0 worker 
     *
     * <span class="token keyword">@param</span> <span class="token parameter">firstTask</span> \u521B\u5EFA\u7684\u65B0\u7EBF\u7A0B\u9996\u5148\u9700\u8981\u6267\u884C\u7684\u4EFB\u52A1
     *
     * <span class="token keyword">@param</span> <span class="token parameter">core</span> \u82E5 == true\uFF0C\u6DFB\u52A0\u5230 \u6838\u5FC3\u7EBF\u7A0B\uFF0C\u82E5 == false\uFF0C\u6DFB\u52A0\u5230\u6700\u5927\u7EBF\u7A0B
     * <span class="token keyword">@return</span> true if successful
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> core<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        retry<span class="token operator">:</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B\u6C60\u72B6\u6001</span>

            <span class="token comment">// \u7279\u6B8A\u60C5\u51B5\u7279\u5224</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> SHUTDOWN <span class="token operator">&amp;&amp;</span>
                <span class="token operator">!</span> <span class="token punctuation">(</span>rs <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> firstTask <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5DE5\u4F5C\u7EBF\u7A0B\u6570</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;=</span> CAPACITY <span class="token operator">||</span>
                    wc <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>core <span class="token operator">?</span> corePoolSize <span class="token operator">:</span> maximumPoolSize<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u6570\u8D85\u8303</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span> retry<span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u589E\u52A0\u5DE5\u4F5C\u7EBF\u7A0B\u6570\uFF0C\u6B64\u65F6\u4E0D\u9700\u8981\u518D\u7EE7\u7EED\u5C1D\u8BD5\uFF0C\u9000\u51FA</span>
                c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u91CD\u65B0\u83B7\u53D6\u4E00\u6B21 ctl</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> rs<span class="token punctuation">)</span>
                    <span class="token keyword">continue</span> retry<span class="token punctuation">;</span> <span class="token comment">// ctl \u4E24\u6B21\u53D1\u751F\u6539\u53D8\uFF0C\u8BF4\u660E\u6709\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u5728\u66F4\u6539 ctl\uFF0C\u4E14\u4FEE\u6539\u6210\u529F\uFF0C\u9700\u8981\u518D\u6B21\u91CD\u8BD5</span>
                <span class="token comment">// else CAS failed due to workerCount change; retry inner loop</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// ctl \u4FEE\u6539\u6210\u529F\uFF0C\u7EE7\u7EED\u4E0B\u6B65\u64CD\u4F5C</span>
        <span class="token keyword">boolean</span> workerStarted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> workerAdded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">Worker</span> w <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>firstTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
                mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&lt;</span> SHUTDOWN <span class="token operator">||</span>
                        <span class="token punctuation">(</span>rs <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> firstTask <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// precheck that t is startable</span>
                            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        workers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5411\u5DE5\u4F5C\u7EBF\u7A0B\u96C6\u5408\u4E2D\u6DFB\u52A0\u5F53\u524D worker</span>
                        <span class="token keyword">int</span> s <span class="token operator">=</span> workers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> largestPoolSize<span class="token punctuation">)</span>
                            largestPoolSize <span class="token operator">=</span> s<span class="token punctuation">;</span>
                        workerAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>workerAdded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    workerStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> workerStarted<span class="token punctuation">)</span>
                <span class="token function">addWorkerFailed</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C worker \u6DFB\u52A0\u5931\u8D25\u7684\u63AA\u65BD</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> workerStarted<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * worker \u6DFB\u52A0\u5931\u8D25\u540E\u7684\u56DE\u6EDA\u64CD\u4F5C
     * - \u4ECE workers \u96C6\u5408\u4E2D\u5220\u9664\u5F53\u524D worker
     * - ctl \u7684 workcCount --
     * - \u5224\u65AD\u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u53EF\u4EE5\u8FDB\u5165 \u7EC8\u6B62\u72B6\u6001
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addWorkerFailed</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                workers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6E05\u7406\u6B7B\u53BB\u7684\u7EBF\u7A0B\uFF0C\u5E76\u8BB0\u5F55
     *
     * <span class="token keyword">@param</span> <span class="token parameter">w</span> the worker
     * <span class="token keyword">@param</span> <span class="token parameter">completedAbruptly</span> if the worker died due to user exception
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processWorkerExit</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">,</span> <span class="token keyword">boolean</span> completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>completedAbruptly<span class="token punctuation">)</span> <span class="token comment">// If abrupt, then workerCount wasn&#39;t adjusted</span>
            <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            completedTaskCount <span class="token operator">+=</span> w<span class="token punctuation">.</span>completedTasks<span class="token punctuation">;</span> <span class="token comment">// \u5411\u603B\u5B8C\u6210\u4EFB\u52A1\u6570\u4E2D\u589E\u52A0\u5F53\u524D worker \u5DF2\u5B8C\u6210\u4EFB\u52A1\u6570</span>
            workers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE workers \u96C6\u5408\u4E2D\u5220\u9664\u5F53\u524D worker</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5224\u65AD\u7EBF\u7A0B\u6C60\u73B0\u5728\u662F\u5426\u53EF\u4EE5\u8FDB\u5165 \u7EC8\u6B62 \u72B6\u6001</span>

        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateLessThan</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> STOP<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> min <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> corePoolSize<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    min <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> min<span class="token punctuation">)</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// replacement not needed</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u82E5\u662F\u5220\u6389\u8BE5 worker \u4E4B\u540E\uFF0C\u5C0F\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u4E14\u6838\u5FC3\u7EBF\u7A0B\u6570\u5FC5\u987B\u5B58\u5728\uFF0C\u6B64\u65F6\u6DFB\u52A0\u6CA1\u6709\u4EFB\u4F55\u4EFB\u52A1\u7684\u7A7A worker</span>
            <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6267\u884C\u963B\u585E\u6216\u5B9A\u65F6\u7B49\u5F85\u4EFB\u52A1\uFF0C\u5177\u4F53\u53D6\u51B3\u4E8E\u5F53\u524D\u914D\u7F6E\u8BBE\u7F6E\uFF0C
     * \u82E5 Worker \u7531\u4E8E\u4EE5\u4E0B\u4EFB\u4F55\u539F\u56E0\u5FC5\u987B\u9000\u51FA\uFF0C\u8FD4\u56DE null\uFF1A 
     * 1. \u5DE5\u4F5C\u4EBA\u5458\u8D85\u8FC7 maximumPoolSize\uFF08\u7531\u4E8E\u8C03\u7528 setMaximumPoolSize\uFF09\u3002 
     * 2. \u6C60\u505C\u6B62\u3002 
     * 3. \u6C60\u5173\u95ED\uFF0C\u961F\u5217\u4E3A\u7A7A\u3002 
     * 4\u3001\u8FD9\u4E2Aworker\u8D85\u65F6\u7B49\u5F85\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u8D85\u65F6 Worker \u5728\u5B9A\u65F6\u7B49\u5F85\u524D\u540E\u90FD\u4F1A\u88AB\u7EC8\u6B62
     *   \uFF08\u5373allowCoreThreadTimeOut || workerCount &gt; corePoolSize\uFF09\uFF0C
     *    \u5982\u679C\u961F\u5217\u975E\u7A7A\uFF0C\u8FD9\u4E2Aworker\u4E0D\u662F\u6C60\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u7EBF\u7A0B\u3002
     *
     * <span class="token keyword">@return</span> task, or null if the worker must exit, in which case
     *         workerCount is decremented
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Runnable</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Did the last poll() time out?</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u7279\u6B8A\u60C5\u51B5\u4E0B\u5373\u4F7F\u6709\u4EFB\u52A1\u4E5F\u65E0\u9700\u6267\u884C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> STOP <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Are workers subject to culling?</span>
            <span class="token keyword">boolean</span> timed <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">||</span> wc <span class="token operator">&gt;</span> corePoolSize<span class="token punctuation">;</span> <span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u4E5F\u53EF\u88AB\u56DE\u6536 | \u5F53\u524D\u6709\u9664\u6838\u5FC3\u7EBF\u7A0B\u4EE5\u5916\u7684\u7EBF\u7A0B</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> maximumPoolSize <span class="token operator">||</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> timedOut<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4\uFF0C\u5219\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\u4ECE queue \u4E2D\u53D6\u4EFB\u52A1</span>
                <span class="token class-name">Runnable</span> r <span class="token operator">=</span> timed <span class="token operator">?</span>
                    workQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span> <span class="token operator">:</span>
                    workQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> r<span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u8D85\u65F6\uFF0C\u5219\u8FD4\u56DE null</span>
                timedOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> retry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5FAA\u73AF\u8FD0\u884C Worker \u7C7B\u3002\u53CD\u590D\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6\u4EFB\u52A1\u5E76\u6267\u884C\u5B83\u4EEC\uFF0C\u540C\u65F6\u5904\u7406\u8BB8\u591A\u95EE\u9898\uFF1A 
     * 1. \u6211\u4EEC\u53EF\u80FD\u4ECE\u4E00\u4E2A\u521D\u59CB\u4EFB\u52A1\u5F00\u59CB\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u6211\u4EEC\u4E0D\u9700\u8981\u83B7\u53D6\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u3002
     *    \u5426\u5219\uFF0C\u53EA\u8981 pool \u6B63\u5728\u8FD0\u884C\uFF0C\u6211\u4EEC\u5C31\u4ECE getTask \u83B7\u53D6\u4EFB\u52A1\u3002
     *    \u5982\u679C\u5B83\u8FD4\u56DE null \uFF0C\u5219 Worker \u4F1A\u56E0\u6C60\u72B6\u6001\u6216\u914D\u7F6E\u53C2\u6570\u7684\u66F4\u6539\u800C\u9000\u51FA\u3002
     *    \u5176\u4ED6\u9000\u51FA\u662F\u7531\u5916\u90E8\u4EE3\u7801\u4E2D\u7684\u5F02\u5E38\u629B\u51FA\u5BFC\u81F4\u7684\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0CcompletedAbruptly \u6210\u7ACB\uFF0C\u8FD9\u901A\u5E38\u4F1A\u5BFC\u81F4 processWorkerExit \u66FF\u6362\u8BE5\u7EBF\u7A0B\u3002 
     *
     * 2. \u5728\u8FD0\u884C\u4EFB\u4F55\u4EFB\u52A1\u4E4B\u524D\uFF0C\u83B7\u53D6\u9501\u4EE5\u9632\u6B62\u5728\u4EFB\u52A1\u6267\u884C\u8FC7\u7A0B\u4E2D\u53D1\u751F\u5176\u4ED6\u6C60\u4E2D\u65AD\uFF0C\u7136\u540E\u6211\u4EEC\u786E\u4FDD\u9664\u975E\u6C60\u505C\u6B62\uFF0C\u5426\u5219\u8BE5\u7EBF\u7A0B\u6CA1\u6709\u8BBE\u7F6E\u5176\u4E2D\u65AD\u3002 
     *
     * 3. \u6BCF\u4E2A\u4EFB\u52A1\u8FD0\u884C\u4E4B\u524D\u90FD\u4F1A\u8C03\u7528 beforeExecute\uFF0C
     *    \u8FD9\u53EF\u80FD\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u5BFC\u81F4\u7EBF\u7A0B\u6B7B\u6389\uFF08\u7528 completedAbruptly true \u4E2D\u65AD\u5FAA\u73AF\uFF09\u800C\u4E0D\u5904\u7406\u4EFB\u52A1\u3002 
     *
     * 4. \u5047\u8BBE beforeExecute \u6B63\u5E38\u5B8C\u6210\uFF0C\u6211\u4EEC\u8FD0\u884C\u4EFB\u52A1\uFF0C\u6536\u96C6\u5B83\u629B\u51FA\u7684\u4EFB\u4F55\u5F02\u5E38\u53D1\u9001\u7ED9 afterExecute\u3002
     *    \u6211\u4EEC\u5206\u522B\u5904\u7406 RuntimeException\u3001Error\uFF08\u89C4\u8303\u4FDD\u8BC1\u6211\u4EEC\u6355\u83B7\uFF09\u548C\u4EFB\u610F Throwables\u3002
     *    \u56E0\u4E3A\u6211\u4EEC\u4E0D\u80FD\u5728 Runnable.run \u4E2D\u91CD\u65B0\u629B\u51FA Throwables\uFF0C\u6240\u4EE5\u6211\u4EEC\u5728\u9000\u51FA\u65F6\u5C06\u5B83\u4EEC\u5305\u88C5\u5728 Errors \u4E2D\uFF08\u5230\u7EBF\u7A0B\u7684 UncaughtExceptionHandler\uFF09\u3002
     *    \u4EFB\u4F55\u629B\u51FA\u7684\u5F02\u5E38\u4E5F\u4F1A\u4FDD\u5B88\u5730\u5BFC\u81F4\u7EBF\u7A0B\u6B7B\u4EA1\u3002 
     *
     * 5\u3001task.run\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u8C03\u7528afterExecute\uFF0C\u4E5F\u53EF\u80FD\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4E5F\u4F1A\u5BFC\u81F4\u7EBF\u7A0B\u6B7B\u6389\u3002
     *    \u6839\u636E JLS Sec 14.20\uFF0C\u5373\u4F7F task.run \u629B\u51FA\uFF0C\u6B64\u5F02\u5E38\u4E5F\u4F1A\u751F\u6548\u3002
     *    \u5F02\u5E38\u673A\u5236\u7684\u6700\u7EC8\u6548\u679C\u662F afterExecute \u548C\u7EBF\u7A0B\u7684 UncaughtExceptionHandler \u5177\u6709\u6211\u4EEC\u53EF\u4EE5\u63D0\u4F9B\u7684\u5173\u4E8E\u7528\u6237\u4EE3\u7801\u9047\u5230\u7684\u4EFB\u4F55\u95EE\u9898\u7684\u51C6\u786E\u4FE1\u606F\u3002
     *
     * <span class="token keyword">@param</span> <span class="token parameter">w</span> the worker
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> wt <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Runnable</span> task <span class="token operator">=</span> w<span class="token punctuation">.</span>firstTask<span class="token punctuation">;</span>
        w<span class="token punctuation">.</span>firstTask <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C\u671F\u95F4\u5141\u8BB8\u4E2D\u65AD</span>
        <span class="token keyword">boolean</span> completedAbruptly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>task <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>task <span class="token operator">=</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                w<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STOP<span class="token punctuation">)</span> <span class="token operator">||</span>
                     <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                      <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STOP<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token operator">!</span>wt<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    wt<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token function">beforeExecute</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u524D\u7F6E\u94A9\u5B50</span>
                    <span class="token class-name">Throwable</span> thrown <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C task</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> 
                        <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> 
                        <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> 
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token function">afterExecute</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> thrown<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u540E\u7F6E\u94A9\u5B50</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    task <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    w<span class="token punctuation">.</span>completedTasks<span class="token operator">++</span><span class="token punctuation">;</span>
                    w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            completedAbruptly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token function">processWorkerExit</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> completedAbruptly<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-threadpoolexecutor-\u5E38\u89C1\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_5-threadpoolexecutor-\u5E38\u89C1\u65B9\u6CD5" aria-hidden="true">#</a> 5. ThreadPoolExecutor \u5E38\u89C1\u65B9\u6CD5</h2><h3 id="_1-execute-runnable-command" tabindex="-1"><a class="header-anchor" href="#_1-execute-runnable-command" aria-hidden="true">#</a> 1) execute(Runnable command)</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u63D0\u4EA4\u4EFB\u52A1\uFF0C\u82E5\u63D0\u4EA4\u5931\u8D25\uFF0C\u6267\u884C RejectedExecutionHandler \u7B56\u7565
     *
     * <span class="token keyword">@param</span> <span class="token parameter">command</span> the task to execute
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RejectedExecutionException</span></span> at discretion of
     *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">RejectedExecutionHandler</span></span></span><span class="token punctuation">}</span>, if the task
     *         cannot be accepted for execution
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">command</span></span><span class="token punctuation">}</span> is null
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C0F\u4E8E\u6838\u5FC3\u7EBF\u7A0B\uFF0C\u6DFB\u52A0\u4EFB\u52A1\u5230\u6838\u5FC3\u7EBF\u7A0B</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6DFB\u52A0\u5931\u8D25\uFF0C\u91CD\u65B0\u83B7\u53D6 ctl</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> workQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6DFB\u52A0\u5230\u5DE5\u4F5C\u961F\u5217</span>
            <span class="token keyword">int</span> recheck <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isRunning</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">remove</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u5904\u4E8E\u8FD0\u884C\u72B6\u6001\uFF0C\u62D2\u7EDD\u65B0\u4EFB\u52A1\uFF0C\u5219\u5220\u9664\u5F53\u524D\u4EFB\u52A1\uFF0C\u6267\u884C\u62D2\u7EDD\u7B56\u7565</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6DFB\u52A0\u5230\u975E\u6838\u5FC3\u7EBF\u7A0B</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6DFB\u52A0\u5931\u8D25\uFF0C\u6267\u884C\u62D2\u7EDD\u7B56\u7565</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-shutdown" tabindex="-1"><a class="header-anchor" href="#_2-shutdown" aria-hidden="true">#</a> 2) shutdown()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u65B9\u6CD5\u5728 worker \u7C7B\u91CC\u9762\uFF0C\u5224\u65AD\u662F\u5426\u6709\u6743\u9650\u6267\u884C\u8BE5\u64CD\u4F5C</span>
            <span class="token function">advanceRunState</span><span class="token punctuation">(</span>SHUTDOWN<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// worker \u7C7B\u91CC\u9762\uFF0C\u4FEE\u6539\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF0C\u4FEE\u6539\u4E4B\u540E\u518D\u63D0\u4EA4\u4EFB\u52A1\u7531\u4E8E\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001\uFF0C\u6240\u4EE5\u63D0\u4EA4\u80AF\u5B9A\u5931\u8D25</span>
            <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u65AD\u6240\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u770B\u51FA\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1\u5E76\u4E0D\u4F1A\u88AB\u4E2D\u65AD</span>
            <span class="token function">onShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ScheduledThreadPoolExecutor \u4E2D\u88AB\u7528\u5230\uFF0C\u5176\u4ED6\u60C5\u51B5\u4E3A \u7A7A\u51FD\u6570</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-shutdownnow" tabindex="-1"><a class="header-anchor" href="#_3-shutdownnow" aria-hidden="true">#</a> 3) shutdownNow()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">SecurityException</span></span> <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> tasks<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u64CD\u4F5C\u6743\u9650\u5224\u65AD</span>
            <span class="token function">advanceRunState</span><span class="token punctuation">(</span>STOP<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF0C\u6B64\u65F6\u518D\u63D0\u4EA4\u65B0\u4EFB\u52A1\u80AF\u5B9A\u5931\u8D25</span>
            <span class="token function">interruptWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u65AD\u6240\u6709\u7684\u7EBF\u7A0B\uFF0C\u5373\u4F7F\u6B63\u5728\u8FD0\u884C</span>
            tasks <span class="token operator">=</span> <span class="token function">drainQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u51FA\u5DE5\u4F5C\u961F\u5217\u4E2D\u6240\u6709\u4EFB\u52A1\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u503C</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5224\u65AD\u662F\u5426\u8FDB\u5165\u7EBF\u7A0B\u6C60\u7EC8\u6B62\u72B6\u6001</span>
        <span class="token keyword">return</span> tasks<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-prestartallcorethreads" tabindex="-1"><a class="header-anchor" href="#_4-prestartallcorethreads" aria-hidden="true">#</a> 4) prestartAllCoreThreads</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u542F\u52A8\u6240\u6709\u6838\u5FC3\u7EBF\u7A0B\uFF0C\u4F7F\u5B83\u4EEC\u7A7A\u95F2\u7B49\u5F85\u5DE5\u4F5C\u3002\u8FD9\u4F1A\u8986\u76D6\u4EC5\u5728\u6267\u884C\u65B0\u4EFB\u52A1\u65F6\u542F\u52A8\u6838\u5FC3\u7EBF\u7A0B\u7684\u9ED8\u8BA4\u7B56\u7565\u3002
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">prestartAllCoreThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">++</span>n<span class="token punctuation">;</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u542F\u52A8\u4E00\u4E2A\u6838\u5FC3\u7EBF\u7A0B\uFF0C\u4F7F\u5176\u7A7A\u95F2\u7B49\u5F85\u5DE5\u4F5C\u3002\u8FD9\u4F1A\u8986\u76D6\u4EC5\u5728\u6267\u884C\u65B0\u4EFB\u52A1\u65F6\u542F\u52A8\u6838\u5FC3\u7EBF\u7A0B\u7684\u9ED8\u8BA4\u7B56\u7565\u3002</span>
    <span class="token comment">// \u5982\u679C\u6240\u6709\u6838\u5FC3\u7EBF\u7A0B\u90FD\u5DF2\u542F\u52A8\uFF0C\u6B64\u65B9\u6CD5\u5C06\u8FD4\u56DE false\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">prestartCoreThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize 
            <span class="token operator">&amp;&amp;</span> <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_6-\u63D0\u4F9B\u7684\u62D2\u7EDD\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#_6-\u63D0\u4F9B\u7684\u62D2\u7EDD\u7B56\u7565" aria-hidden="true">#</a> 6. \u63D0\u4F9B\u7684\u62D2\u7EDD\u7B56\u7565</h2><blockquote><p>\u7B56\u7565\u6A21\u5F0F</p></blockquote><ul><li>\u53EF\u4EE5\u770B\u51FA\u8FD9\u662F\u4E00\u79CD<strong>\u7B56\u7565</strong>\u6A21\u5F0F</li></ul><h3 id="_1-rejectedexecutionhandler" tabindex="-1"><a class="header-anchor" href="#_1-rejectedexecutionhandler" aria-hidden="true">#</a> 1) RejectedExecutionHandler</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/**
 * \u4E0D\u80FD\u7531ThreadPoolExecutor\u6267\u884C\u7684\u4EFB\u52A1\u7684\u5904\u7406\u7A0B\u5E8F
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
 
    <span class="token doc-comment comment">/**
     * \u5F53\u6267\u884C\u4E0D\u80FD\u63A5\u53D7\u4EFB\u52A1\u65F6\uFF0CThreadPoolExecutor\u53EF\u4EE5\u8C03\u7528\u8BE5\u65B9\u6CD5\u3002
     * \u8FD9\u79CD\u60C5\u51B5\u53EF\u80FD\u53D1\u751F\u5728\u6CA1\u6709\u66F4\u591A\u7EBF\u7A0B\u6216\u961F\u5217\u69FD\u53EF\u7528\u7684\u60C5\u51B5\u4E0B\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u7684\u8FB9\u754C\u5C06\u88AB\u8D85\u51FA\uFF0C\u6216\u8005\u6267\u884C\u7A0B\u5E8F\u5173\u95ED\u65F6\u3002
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5728\u6CA1\u6709\u5176\u4ED6\u66FF\u4EE3\u65B9\u6CD5\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u65B9\u6CD5\u53EF\u80FD\u629B\u51FA\u672A\u68C0\u67E5\u7684RejectedExecutionException\uFF0C\u8BE5\u5F02\u5E38\u5C06\u4F20\u64AD\u7ED9execute\u7684\u8C03\u7528\u8005\u3002
     *
     * <span class="token keyword">@param</span> <span class="token parameter">r</span> the runnable task requested to be executed
     * <span class="token keyword">@param</span> <span class="token parameter">executor</span> the executor attempting to execute this task
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RejectedExecutionException</span></span> if there is no remedy
     */</span>
    <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u79CD\u5177\u4F53\u5B9E\u73B0\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2-4-\u79CD\u5177\u4F53\u5B9E\u73B0\u7C7B" aria-hidden="true">#</a> 2) 4 \u79CD\u5177\u4F53\u5B9E\u73B0\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u8981\u52A0\u5165\u7EBF\u7A0B\u6C60\u7684\u4EFB\u52A1\u662F\u4E00\u4E2A Runnable \u7C7B\uFF0C\u4E0D\u52A0\u5165\u7EBF\u7A0B\u6C60\u4E2D\uFF0C\u8BE5 Runnable \u7C7B\u81EA\u5DF1\u6267\u884C run() \u65B9\u6CD5
     * \u5C31\u8BF4\u660E\u7528\u5B83\u6240\u5728\u7684\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1
     * \u82E5\u4E0D\u5728 running \u72B6\u6001\uFF0C\u90A3\u4E48 \u4E0D\u8BBA\u662F shutdown \u8FD8\u662F stop \u7B49\u72B6\u6001\u90FD\u65E0\u9700\u6267\u884C\u8BE5\u4EFB\u52A1
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CallerRunsPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * Creates a <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">CallerRunsPolicy</span></span></span><span class="token punctuation">}</span>.
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * <span class="token keyword">@param</span> <span class="token parameter">r</span> \u8981\u6267\u884C\u7684\u4EFB\u52A1
         * <span class="token keyword">@param</span> <span class="token parameter">e</span> the executor attempting to execute this task
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u629B\u51FA\u5F02\u5E38 RejectedExecutionException
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AbortPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * Creates an <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">AbortPolicy</span></span></span><span class="token punctuation">}</span>.
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Always throws RejectedExecutionException.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">r</span> the runnable task requested to be executed
         * <span class="token keyword">@param</span> <span class="token parameter">e</span> the executor attempting to execute this task
         * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RejectedExecutionException</span></span> always
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionException</span><span class="token punctuation">(</span><span class="token string">&quot;Task &quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                                                 <span class="token string">&quot; rejected from &quot;</span> <span class="token operator">+</span>
                                                 e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u76F4\u63A5\u4E22\u5F03\u88AB\u62D2\u7EDD\u7684\u4EFB\u52A1\uFF0C\u4EC0\u4E48\u4E5F\u4E0D\u7528\u505A
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DiscardPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * Creates a <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">DiscardPolicy</span></span></span><span class="token punctuation">}</span>.
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">DiscardPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Does nothing, which has the effect of discarding task r.
         *
         * <span class="token keyword">@param</span> <span class="token parameter">r</span> the runnable task requested to be executed
         * <span class="token keyword">@param</span> <span class="token parameter">e</span> the executor attempting to execute this task
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u7A7A\u51FD\u6570</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * A handler for rejected tasks that discards the oldest unhandled
     * request and then retries <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">execute</span></span><span class="token punctuation">}</span>, unless the executor
     * is shut down, in which case the task is discarded.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DiscardOldestPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * Creates a <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">DiscardOldestPolicy</span></span></span><span class="token punctuation">}</span> for the given executor.
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">DiscardOldestPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * <span class="token keyword">@param</span> <span class="token parameter">r</span> the runnable task requested to be executed
         * <span class="token keyword">@param</span> <span class="token parameter">e</span> the executor attempting to execute this task
         */</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">getQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u51FA\u5DE5\u4F5C\u961F\u5217\u961F\u5934\u4EFB\u52A1\uFF0C\u4E5F\u5C31\u662F\u6700\u65E9\u52A0\u8FDB\u53BB\u4F46\u8FD8\u6CA1\u6709\u88AB\u6267\u884C\u7684\u4EFB\u52A1</span>
                <span class="token comment">// \u6267\u884C\u88AB\u62D2\u7EDD\u7684\u4EFB\u52A1\uFF0C\u53EF\u4EE5\u770B\u51FA\uFF0C\u5982\u679C execute() \u65B9\u6CD5\u8FD8\u662F\u5931\u8D25\uFF0C\u90A3\u4E48\u53EA\u8981\u7B56\u7565\u4E0D\u53D8\uFF0C\u8FD8\u662F\u4F1A\u91CD\u65B0\u8FDB\u5165\u8BE5\u65B9\u6CD5</span>
                <span class="token comment">// \u7136\u540E\u518D\u4ECE\u961F\u5217\u4E2D\u5220\u9664\u4E00\u4E2A\u518D\u6700\u65E9\u7684\u4EFB\u52A1\uFF0C\u4E00\u76F4\u91CD\u590D\u76F4\u5230\u6210\u529F</span>
                e<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-abstractexecutorservice" tabindex="-1"><a class="header-anchor" href="#_7-abstractexecutorservice" aria-hidden="true">#</a> 7. AbstractExecutorService</h2><h3 id="_1-\u7C7B\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u63CF\u8FF0" aria-hidden="true">#</a> 1) \u7C7B\u63CF\u8FF0</h3><ul><li><code>ThreadPoolExecutor</code> \u7EE7\u627F\u4E86\u8BE5\u7C7B\uFF0C\u56E0\u6B64\u591A\u4E86 <code>submit()</code> \u7B49\u65B9\u6CD5</li><li>\u8BE5\u7C7B\u4E3A \u62BD\u8C61\u7C7B</li><li>\u5B9E\u73B0 <code>ExecutorService</code> \u63A5\u53E3</li></ul><h3 id="_2-\u7C7B\u56FE-1" tabindex="-1"><a class="header-anchor" href="#_2-\u7C7B\u56FE-1" aria-hidden="true">#</a> 2) \u7C7B\u56FE</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractExecutorService</span> <span class="token keyword">implements</span> <span class="token class-name">ExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ExecutorService</span> <span class="token keyword">extends</span> <span class="token class-name">Executor</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Executor</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u6267\u884C command
     *
     * <span class="token keyword">@param</span> <span class="token parameter">command</span> the runnable task
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RejectedExecutionException</span></span> if this task cannot be
     * accepted for execution
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if command is null
     */</span>
    <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> 3) \u5E38\u7528\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// RunnableFuture \u4E3A\u7EE7\u627F\u4E86 Runnable &amp; Future \u7C7B\u53EA\u6709\u4E00\u4E2A run() \u7684\u63A5\u53E3</span>
        <span class="token comment">// \u800C FutureTask \u7C7B\u5B9E\u73B0\u4E86 RunnableFuture \u63A5\u53E3</span>
        <span class="token comment">// \u5C06 Runnable task \u8F6C\u6362\u4E3A FutureTask \u5BF9\u8C61</span>
        <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6267\u884C \u7EE7\u627F\u7684 Executor \u7C7B\u7684 execute(Runnable command)</span>
        <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token class-name">T</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * \u6839\u636E\u7ED9\u5B9A runnable &amp; value\uFF0C\u5C06\u5176\u8F6C\u6362\u4E3A FutureTask \u5BF9\u8C61
     */</span>
    <span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">,</span> <span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// FutureTask \u4E2D\u4E00\u4E2A\u91CD\u8981\u5C5E\u6027\u5C31\u662F Callable&lt;V&gt; callable\uFF0C\u56E0\u6B64</span>
        <span class="token comment">// runnable \u4F1A\u901A\u8FC7 Executors.callable(runnable, result) \u5B9E\u73B0 Callable \u7C7B\u7684\u65B9\u6CD5</span>
        <span class="token comment">// \u8FD9\u91CC\u6709\u4E2A \u9002\u914D\u5668 \u7684\u64CD\u4F5C</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6839\u636E\u7ED9\u5B9A callable\uFF0C\u5C06\u5176\u8F6C\u6362\u4E3A FutureTask \u5BF9\u8C61
     */</span>
    <span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> callable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>callable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_8-\u51E0\u79CD\u5E38\u89C1\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_8-\u51E0\u79CD\u5E38\u89C1\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 8. \u51E0\u79CD\u5E38\u89C1\u7EBF\u7A0B\u6C60</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Executors</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u6307\u5B9A \u7EBF\u7A0B\u6570 \u7684\u7EBF\u7A0B\u6C60\uFF0C\u5DE5\u4F5C\u961F\u5217\u65E0\u754C</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> 
                                      nThreads<span class="token punctuation">,</span>
                                      <span class="token number">0L</span><span class="token punctuation">,</span> 
                                      <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u6307\u5B9A \u7EBF\u7A0B\u6570 &amp; \u7EBF\u7A0B\u5DE5\u5382 \u7684\u7EBF\u7A0B\u6C60\uFF0C\u5DE5\u4F5C\u961F\u5217\u65E0\u754C</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">,</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> 
                                      nThreads<span class="token punctuation">,</span>
                                      <span class="token number">0L</span><span class="token punctuation">,</span> 
                                      <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      threadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521B\u5EFA \u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B \u7684\u7EBF\u7A0B\u6C60\uFF0C\u5DE5\u4F5C\u961F\u5217\u65E0\u754C</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>
            <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                    <span class="token number">1</span><span class="token punctuation">,</span>
                                    <span class="token number">0L</span><span class="token punctuation">,</span> 
                                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                    <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA \u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B &amp; \u6307\u5B9A\u7EBF\u7A0B\u5DE5\u5382 \u7684\u7EBF\u7A0B\u6C60\uFF0C\u5DE5\u4F5C\u961F\u5217\u65E0\u754C</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>
            <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                    <span class="token number">1</span><span class="token punctuation">,</span>
                                    <span class="token number">0L</span><span class="token punctuation">,</span> 
                                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
                                    <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    threadFactory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521B\u5EFA \u6700\u5927\u7EBF\u7A0B\u6570\u65E0\u754C \u7684\u7EBF\u7A0B\u6C60\uFF0C\u5DE5\u4F5C\u961F\u5217\u4E0D\u80FD\u5B58\u50A8\u4EFB\u52A1\uFF0C\u4EFB\u52A1\u653E\u5165\u540E\u5FC5\u987B\u88AB\u62FF\u8D70\u624D\u80FD\u7EE7\u7EED\u653E\u5165</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> 
                                      <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span>
                                      <span class="token number">60L</span><span class="token punctuation">,</span> 
                                      <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span>
                                      <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                                      <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      threadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521B\u5EFA ScheduledThreadPoolExecutor\uFF0C\u9488\u5BF9 ScheduledThreadPoolExecutor \u8FD8\u6709\u5176\u4ED6\u51E0\u79CD\u521B\u5EFA\uFF0C\u8FD9\u91CC\u6CA1\u6709\u6DFB\u52A0</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ScheduledExecutorService</span> <span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u6C60\uFF0C\u53EF\u4EE5\u5B89\u6392\u547D\u4EE4\u5728\u7ED9\u5B9A\u5EF6\u8FDF\u540E\u8FD0\u884C\uFF0C\u6216\u5B9A\u671F\u6267\u884C\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ScheduledExecutorService</span> <span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ScheduledExecutorService</span> <span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> threadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_9-\u5982\u4F55\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_9-\u5982\u4F55\u4F7F\u7528" aria-hidden="true">#</a> 9. \u5982\u4F55\u4F7F\u7528</h2><h3 id="_1-\u81EA\u5B9A\u4E49-threadfactory" tabindex="-1"><a class="header-anchor" href="#_1-\u81EA\u5B9A\u4E49-threadfactory" aria-hidden="true">#</a> 1) \u81EA\u5B9A\u4E49 ThreadFactory</h3><ul><li>ThreadFactory \u6E90\u7801</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u751F\u4EA7\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B
     *
     * <span class="token keyword">@param</span> <span class="token parameter">r</span> a runnable to be executed by new thread instance
     * <span class="token keyword">@return</span> constructed thread, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if the request to
     *         create a thread is rejected
     */</span>
    <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Executors \u7C7B\u7684 \u9ED8\u8BA4\u9759\u6001\u5DE5\u5382\uFF0C\u53EF\u901A\u8FC7 <code>Executors.defaultThreadFactory()</code> \u5FEB\u901F\u5F97\u5230\u4E00\u4E2A\u7EBF\u7A0B\u5DE5\u5382</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DefaultThreadFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> poolNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ThreadGroup</span> group<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> threadNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> namePrefix<span class="token punctuation">;</span>

        <span class="token class-name">DefaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SecurityManager</span> s <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            group <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> s<span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                                  <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            namePrefix <span class="token operator">=</span> <span class="token string">&quot;pool-&quot;</span> <span class="token operator">+</span>
                          poolNumber<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                         <span class="token string">&quot;-thread-&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> 
                                  r<span class="token punctuation">,</span>
                                  namePrefix <span class="token operator">+</span> threadNumber<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isDaemon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u975E\u5B88\u62A4\u7EBF\u7A0B</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span>NORM_PRIORITY<span class="token punctuation">)</span>
                t<span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>NORM_PRIORITY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u7B49\u4F18\u5148\u7EA7</span>
            <span class="token keyword">return</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u81EA\u5B9A\u4E49 ThreadFactory</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YhThreadFactory</span> <span class="token keyword">implements</span> <span class="token class-name">ThreadFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B\u540D\u79F0</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> threadNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7EBF\u7A0B id</span>

    <span class="token doc-comment comment">/**
     * \u521B\u5EFA\u4E00\u4E2A\u53EF\u6307\u5B9A\u540D\u5B57\u7684\u7EBF\u7A0B\u751F\u4EA7\u5DE5\u5382
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">YhThreadFactory</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        t<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">+</span> threadNum<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539\u540D\u79F0\u4E3A\u6307\u5B9A\u540D\u79F0</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#_2-\u5E94\u7528" aria-hidden="true">#</a> 2) \u5E94\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u81EA\u5B9A\u4E49 Callable \u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD4\u56DE\u6267\u884C\u5F53\u524D Callable \u7684\u7EBF\u7A0B\u540D\u5B57</span>
        <span class="token keyword">return</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CORE_POOL_SIZE <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_POOL_SIZE <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> QUEUE_CAPACITY <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Long</span> KEEP_ALIVE_TIME <span class="token operator">=</span> <span class="token number">30L</span><span class="token punctuation">;</span>
    

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u521B\u5EFA ThreadPoolExecutor</span>
        <span class="token class-name">ThreadPoolExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                CORE_POOL_SIZE<span class="token punctuation">,</span>
                MAX_POOL_SIZE<span class="token punctuation">,</span>
                KEEP_ALIVE_TIME<span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>QUEUE_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">YhThreadFactory</span><span class="token punctuation">(</span><span class="token string">&quot;liuxianzhishou&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Future</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> futureList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u653E\u7EBF\u7A0B\u6C60\u6240\u6709\u7EBF\u7A0B call() \u540E\u7684\u8FD4\u56DE\u7ED3\u679C</span>
        <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> callable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u63D0\u4EA4\u4EFB\u52A1\uFF0C\u53EF\u4EE5\u4F7F\u7528 submit | execute</span>
            <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> executor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>callable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            futureList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u8FD4\u56DE\u7ED3\u679C future \u52A0\u5165\u96C6\u5408</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6253\u5370 \u96C6\u5408\u7ED3\u679C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> fut <span class="token operator">:</span> futureList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> fut<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> <span class="token operator">|</span> <span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5173\u95ED\u7EBF\u7A0B\u6C60</span>
        executor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_10-scheduledthreadpoolexecutor" tabindex="-1"><a class="header-anchor" href="#_10-scheduledthreadpoolexecutor" aria-hidden="true">#</a> 10. ScheduledThreadPoolExecutor</h2><h3 id="_1-\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_1-\u539F\u7406" aria-hidden="true">#</a> 1) \u539F\u7406</h3><ol><li>\u8C03\u7528 <code>schedule</code> | <code>scheduleAtFixedRate</code> | <code>scheduleWithFixedDelay</code>\uFF0C\u628A\u4EFB\u52A1\u6DFB\u52A0\u5230 <code>ScheduledThreadPoolExecutor</code> \u53BB\u6267\u884C</li><li><code>ScheduledThreadPoolExecutor</code> \u63A5\u6536\u5230\u4EFB\u52A1\u4E4B\u540E\uFF0C\u6839\u636E\u8BF7\u6C42\u53C2\u6570\u7684\u5EF6\u8FDF\u65F6\u95F4\u8BA1\u7B97\u51FA\u771F\u6B63\u9700\u8981\u6267\u884C\u4EFB\u52A1\u7684\u65F6\u95F4\uFF0C\u7136\u540E\u628A\u4EFB\u52A1\u5C01\u88C5\u6210 <code>RunnableScheduledFuture</code></li><li>\u5C06 <code>RunnableScheduledFuture</code> \u6DFB\u52A0\u5230 <code>DelayQueue</code> \u4E2D\uFF0C <ul><li>\u628A\u65F6\u95F4\u8D8A\u5C0F\u7684\u4EFB\u52A1\u653E\u5728\u961F\u5217\u5934\uFF0C</li><li>\u5982\u679C\u65F6\u95F4\u4E00\u6837\uFF0C\u5219\u5148\u63D0\u4EA4\u7684\u5148\u6267\u884C</li></ul></li><li>\u7EBF\u7A0B\u6C60\u4ECE <code>DelayQueue</code> \u4E2D\u83B7\u53D6\u4EFB\u52A1\u6267\u884C\uFF0C <ul><li>\u5982\u679C\u662F\u4E00\u6B21\u6027\u7684\u4EFB\u52A1\uFF0C\u6267\u884C\u4E4B\u540E\u5220\u9664\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C</li><li>\u5982\u679C\u662F\u91CD\u590D\u6267\u884C\u7684\uFF0C\u5219\u518D\u6B21\u8BA1\u7B97\u65F6\u95F4\uFF0C\u7136\u540E\u628A\u4EFB\u52A1\u6DFB\u52A0\u5230 <code>DelayQueue</code> \u4E2D</li></ul></li></ol><h3 id="_2-\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#_2-\u6E90\u7801" aria-hidden="true">#</a> 2) \u6E90\u7801</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduledThreadPoolExecutor</span> <span class="token keyword">extends</span> <span class="token class-name">ThreadPoolExecutor</span> <span class="token keyword">implements</span> <span class="token class-name">ScheduledExecutorService</span> <span class="token punctuation">{</span>
    <span class="token comment">// --------------------- \u6784\u9020\u51FD\u6570 -------------------------</span>
    <span class="token comment">// ---------------- \u6700\u5927\u7EBF\u7A0B\u6570 \u65E0\u754C ----------</span>
    <span class="token keyword">public</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DelayedWorkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DelayedWorkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> threadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DelayedWorkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span> <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DelayedWorkQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> threadFactory<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ------------------ implements ScheduledExecutorService \u7684\u65B9\u6CD5 ----------------------</span>
    <span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">,</span>
                                       <span class="token keyword">long</span> delay<span class="token punctuation">,</span>
                                       <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> unit <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token function">decorateTask</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> 
                                                    <span class="token keyword">new</span> <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token function">triggerTime</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">delayedExecute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5411\u5DE5\u4F5C\u961F\u5217\u4E2D\u6DFB\u52A0 \u4EFB\u52A1</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> callable<span class="token punctuation">,</span>
                                           <span class="token keyword">long</span> delay<span class="token punctuation">,</span>
                                           <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>callable <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> unit <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token function">decorateTask</span><span class="token punctuation">(</span>callable<span class="token punctuation">,</span>
                                                    <span class="token keyword">new</span> <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>callable<span class="token punctuation">,</span> <span class="token function">triggerTime</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">delayedExecute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u56FA\u5B9A\u5468\u671F\u6267\u884C</span>
    <span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">,</span>
                                                  <span class="token keyword">long</span> initialDelay<span class="token punctuation">,</span>
                                                  <span class="token keyword">long</span> period<span class="token punctuation">,</span>
                                                  <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> unit <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>period <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> sft <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>command<span class="token punctuation">,</span>
                                                                      <span class="token keyword">null</span><span class="token punctuation">,</span>
                                                                      <span class="token function">triggerTime</span><span class="token punctuation">(</span>initialDelay<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                      unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>period<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token function">decorateTask</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> sft<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sft<span class="token punctuation">.</span>outerTask <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token function">delayedExecute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5728\u4E0A\u4E00\u6B21\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u9694\u591A\u957F\u65F6\u95F4\u6267\u884C</span>
    <span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">scheduleWithFixedDelay</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">,</span>
                                                     <span class="token keyword">long</span> initialDelay<span class="token punctuation">,</span>
                                                     <span class="token keyword">long</span> delay<span class="token punctuation">,</span>
                                                     <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> unit <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delay <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> sft <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledFutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>command<span class="token punctuation">,</span>
                                                                      <span class="token keyword">null</span><span class="token punctuation">,</span>
                                                                      <span class="token function">triggerTime</span><span class="token punctuation">(</span>initialDelay<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                      unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span><span class="token operator">-</span>delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token function">decorateTask</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> sft<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sft<span class="token punctuation">.</span>outerTask <span class="token operator">=</span> t<span class="token punctuation">;</span>
        <span class="token function">delayedExecute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">decorateTask</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">,</span> <span class="token class-name">RunnableScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> task<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ----------------- extends ThreadPoolExecutor \u7684\u65B9\u6CD5 ----------------</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">schedule</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token class-name">T</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">callable</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// --------------- \u5185\u90E8\u7C7B ---------------------</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DelayedWorkQueue</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9E\u73B0\u4E86 \u5806 \u7684\u4E0A\u6D6E &amp; \u4E0B\u6C89</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60);function k(r,d){const s=e("Mermaid");return t(),p("div",null,[i,c(s,{id:"mermaid-382ee1a2",code:"flowchart%20TB%0A%20%20%20%20subgraph%20one%5B%20%5D%0A%20%20%20%20A%5B%E6%8F%90%E4%BA%A4%E4%BB%BB%E5%8A%A1%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20two%5BThreadPoolExecutor%20%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%5D%0A%20%20%20%20B%7Bctl%20%3E%3D%20corePoolSize%7D%0A%20%20%20%20F%5B%E5%88%9B%E5%BB%BA%E6%96%B0%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%20%5Cn%20%E5%8D%B3%E4%BD%BF%E6%9C%89%E6%A0%B8%E5%BF%83%E7%BA%BF%E7%A8%8B%E5%A4%84%E4%BA%8E%E7%A9%BA%E9%97%B2%E7%8A%B6%E6%80%81%5D%0A%20%20%20%20C%7BworkQueue%20is%20full%7D%0A%20%20%20%20G%5B%E6%B7%BB%E5%8A%A0%E4%BB%BB%E5%8A%A1%E5%88%B0%20workQueue%5D%0A%20%20%20%20D%7Bctl%20%3E%3D%20maximumPoolSize%7D%0A%20%20%20%20E%5B%E6%89%A7%E8%A1%8C%20RejectedExecutionHandler%20%E6%8B%92%E7%BB%9D%E7%AD%96%E7%95%A5%5D%0A%20%20%20%20H%5B%E5%88%9B%E5%BB%BA%E6%96%B0%E7%BA%BF%E7%A8%8B%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%5D%0A%20%20%20%20end%0A%20%20%20%20A%20--%3E%20B%0A%20%20%20%20B%20--%3E%20%7CY%7C%20C%0A%20%20%20%20B%20--%3E%20%7CN%20%7C%20F%0A%20%20%20%20C%20--%3E%20%7CY%20%7C%20D%0A%20%20%20%20C%20--%3E%20%7CN%20%7C%20G%0A%20%20%20%20D%20--%3E%20%7CY%20%7C%20E%0A%20%20%20%20D%20--%3E%20%7CN%20%7C%20H%0A"}),u])}var b=a(l,[["render",k],["__file","ThreadPoolExecutor.html.vue"]]);export{b as default};
