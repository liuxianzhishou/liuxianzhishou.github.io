import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_5.0453ab0e.png",e="/assets/img_4.fe3150c5.png";const c={},o=p('<h1 id="_460-lfu-\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#_460-lfu-\u7F13\u5B58" aria-hidden="true">#</a> \u{1F315}\u{1F317} 460. LFU \u7F13\u5B58</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_5.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">LFUCache</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> size<span class="token punctuation">;</span> <span class="token comment">// \u8282\u70B9\u6570</span>
    <span class="token keyword">int</span> capacity<span class="token punctuation">;</span> <span class="token comment">// \u5BB9\u91CF</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E key \u5FEB\u901F\u5B9A\u4F4D\u5230\u8282\u70B9</span>
    <span class="token comment">// \u6839\u636E fre \u5FEB\u901F\u5B9A\u4F4D\u5230\u5F53\u524D fre \u4E0B\u7684\u94FE\u8868\uFF0C\u501F\u52A9 LinkedList \u5FEB\u901F\u5220\u9664\u9996\u5C3E\u8282\u70B9</span>
    <span class="token comment">// \u5B9E\u9645\u4E0A\uFF0C\u5F53 LinkedList \u8282\u70B9\u6570\u8FC7\u591A\u65F6\uFF0C\u8981\u5220\u9664\u5176\u4E2D\u67D0\u4E2A\u5143\u7D20\uFF0C\u590D\u6742\u5EA6\u4E0D\u6B62 1</span>
    <span class="token comment">// \u63D2\u5165\u8282\u70B9\u653E\u5165\u5C3E\u90E8\uFF0C\u79FB\u9664\u8282\u70B9\u4ECE\u5934\u7ED3\u70B9\u5F00\u59CB</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">LinkedList</span><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> freMap<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> minFre<span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u6700\u5C0F fre \u4FBF\u4E8E\u5FEB\u901F\u5B9A\u4F4D\u5230\u8BE5 fre \u4E0B\u7684\u94FE\u8868</span>

    <span class="token keyword">public</span> <span class="token class-name">LFUCache</span><span class="token punctuation">(</span><span class="token keyword">int</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>capacity <span class="token operator">=</span> capacity<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>freMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>minFre <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>capacity <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span> select <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// get() \u8C03\u7528\u4E00\u6B21\uFF0Cfre ++\uFF0C\u79FB\u5230\u65B0\u7684\u5BF9\u5E94\u9891\u6B21\u7684\u5217\u8868\u4E2D</span>
        <span class="token keyword">int</span> oldFre <span class="token operator">=</span> select<span class="token punctuation">.</span>fre<span class="token punctuation">;</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> oldList <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>oldFre<span class="token punctuation">)</span><span class="token punctuation">;</span>
        oldList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u65E7\u94FE\u8868\u4E2D\u5220\u9664\u8BE5\u8282\u70B9</span>
        freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>oldFre<span class="token punctuation">,</span> oldList<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0 freMap</span>
        <span class="token comment">// \u66F4\u65B0 minFre</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>oldList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> minFre <span class="token operator">==</span> oldFre<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            minFre <span class="token operator">=</span> oldFre <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>        
        <span class="token keyword">int</span> newFre <span class="token operator">=</span> oldFre <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        select<span class="token punctuation">.</span>fre <span class="token operator">=</span> newFre<span class="token punctuation">;</span>
        <span class="token comment">// \u5224\u65AD\u65B0\u9891\u6B21\u4E0B\u7684\u94FE\u8868\u662F\u5426\u5B58\u5728</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>freMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>newFre<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>newFre<span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> newList <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>newFre<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newList<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>select<span class="token punctuation">)</span><span class="token punctuation">;</span>
        freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>newFre<span class="token punctuation">,</span> newList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> select<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println(key + &quot;  &quot; + minFre);</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>capacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> select <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            select<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5224\u65AD\u5BB9\u91CF\u662F\u5426\u8DB3\u591F</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>size <span class="token operator">==</span> capacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9700\u8981\u5148\u79FB\u9664\u6700\u5C0F\u9891\u6B21\u4E0B\u7684\u9996\u4E2A\u8282\u70B9</span>
                <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> oldestList <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>minFre<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Node</span> rv <span class="token operator">=</span> oldestList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                oldestList<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                size <span class="token operator">--</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>rv<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u66F4\u65B0 minFre - \u65E2\u7136\u65B0\u63D2\u5165\u4E86\u4E00\u4E2A\u8282\u70B9\uFF0C\u90A3\u4E48 minFre \u5FC5 == 1</span>
            minFre <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token class-name">Node</span> insert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>freMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> insertList <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            insertList<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>insert<span class="token punctuation">)</span><span class="token punctuation">;</span>
            size <span class="token operator">++</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> insert<span class="token punctuation">)</span><span class="token punctuation">;</span>
            freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> insertList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6784\u9020\u53CC\u5411\u94FE\u8868\u8282\u70B9\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> key<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token keyword">int</span> fre<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> prev<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fre <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Your LFUCache object will be instantiated and called as such:
 * LFUCache obj = new LFUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+e+'" alt="img_4.png"></p>',10),l=[o];function i(u,k){return s(),a("div",null,l)}var m=n(c,[["render",i],["__file","460.html.vue"]]);export{m as default};
