import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_4.1cc0a588.png",e="/assets/img_3.eb882cec.png",o="/assets/img_5.34fb98d8.png",c="/assets/img_6.c74cdb55.png";const l={},i=p('<h1 id="_189-\u8F6E\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_189-\u8F6E\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> \u{1F315} \u{1F317} 189. \u8F6E\u8F6C\u6570\u7EC4</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_4.png"></p><hr><h3 id="\u89E3\u6CD5-1-\u5E38\u89C4\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-\u5E38\u89C4\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u6CD5 1 - \u5E38\u89C4\u601D\u8DEF</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// new[0] = old[len - k % len]</span>
        <span class="token comment">// new[?] = old(len - k % len + ?) % len</span>
        <span class="token comment">// \u6784\u9020\u65B0\u6570\u7EC4\uFF0C\u628A\u539F\u503C\u590D\u5236\u8FC7\u6765</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> len <span class="token operator">-</span> k <span class="token operator">%</span> len<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">+</span> step<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img_3.png"></p><hr><h3 id="\u89E3\u6CD5-2-o-1-\u539F\u5730\u4EA4\u6362" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-o-1-\u539F\u5730\u4EA4\u6362" aria-hidden="true">#</a> \u89E3\u6CD5 2 - O(1) \u539F\u5730\u4EA4\u6362</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// new[0] = old[len - k % len]</span>
        <span class="token comment">// new[?] = old(len - k % len + ?) % len</span>
        <span class="token comment">// \u4FDD\u5B58\u539F\u4E0B\u6807\u7684\u503C\uFF0C\u8FDB\u884C\u539F\u5730\u4EA4\u6362</span>
        <span class="token comment">// \u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u4E0D\u4E00\u5B9A\u4E00\u904D\u5C31\u80FD\u4EA4\u6362\u5B8C\u6240\u6709\u5143\u7D20\uFF0C\u5B58\u5728\u4E00\u904D\u7684\u73AF\u6CA1\u6709\u5B8C\u5168\u8986\u76D6\u7684\u60C5\u51B5</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> len <span class="token operator">-</span> k <span class="token operator">%</span> len<span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// i \u4E3A\u5F53\u524D\u8986\u76D6\u73AF\u7684\u8D77\u59CB\u4E0B\u6807</span>
            <span class="token keyword">int</span> store <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> origIndex <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// \u9632\u6B62\u8F6C\u5708</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// cur \u4E0B\u6807\u503C\u5E94\u8BE5\u88AB\u66FF\u6362</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> <span class="token punctuation">(</span>cur <span class="token operator">+</span> step<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">;</span> <span class="token comment">// cur \u88AB\u66FF\u6362\u4E3A next \u5904\u7684\u503C</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>next <span class="token operator">!=</span> origIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>next<span class="token punctuation">]</span><span class="token punctuation">;</span>
                count <span class="token operator">++</span><span class="token punctuation">;</span>
                cur <span class="token operator">=</span> next<span class="token punctuation">;</span>
                next <span class="token operator">=</span> <span class="token punctuation">(</span>cur <span class="token operator">+</span> step<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// next == origIndex</span>
            nums<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> store<span class="token punctuation">;</span>
            count <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&gt;=</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+o+`" alt="img_5.png"></p><hr><h3 id="\u89E3\u6CD5-3-\u7FFB\u8F6C\u518D\u7FFB\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-3-\u7FFB\u8F6C\u518D\u7FFB\u8F6C" aria-hidden="true">#</a> \u89E3\u6CD5 3 - \u7FFB\u8F6C\u518D\u7FFB\u8F6C</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// method 3 - </span>
        <span class="token comment">// \u8FD9\u79CD\u60C5\u51B5\u6CA1\u505A\u8FC7\u662F\u771F\u7684\u60F3\u4E0D\u51FA\u6765</span>
        <span class="token comment">// [0 1 2 3 4 5] k = 4, len = 6</span>
        <span class="token comment">// [5 4 3 2 1 0] \u5B8C\u5168\u7FFB\u8F6C</span>
        <span class="token comment">// [2 3 4 5 0 1] [0, 3] \u5B8C\u5168\u7FFB\u8F6C\uFF0C[4, 5]\u5B8C\u5168\u7FFB\u8F6C \u5F97\u5230\u7ED3\u679C</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> k <span class="token operator">%</span> len<span class="token punctuation">;</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> step <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">mySol</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> step<span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            left <span class="token operator">++</span><span class="token punctuation">;</span>
            right <span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
        nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-3" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-3" aria-hidden="true">#</a> \u8F93\u51FA 3</h3><p><img src="`+c+'" alt="img_6.png"></p>',22),u=[i];function k(r,d){return s(),a("div",null,u)}var b=n(l,[["render",k],["__file","189.html.vue"]]);export{b as default};
