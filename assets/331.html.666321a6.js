import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_11.16d5b55e.png",e="/assets/img_10.825abad7.png",o="/assets/img_12.3fda6ef4.png";const c={},l=p('<h1 id="_331-\u9A8C\u8BC1\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#_331-\u9A8C\u8BC1\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u{1F315}\u{1F315} 331. \u9A8C\u8BC1\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u5E8F\u5217\u5316</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_11.png"></p><hr><h3 id="\u89E3\u6CD5-1-\u6808" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-\u6808" aria-hidden="true">#</a> \u89E3\u6CD5 1 - \u6808</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidSerialization</span><span class="token punctuation">(</span><span class="token class-name">String</span> preorder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u501F\u52A9 \u6808</span>
        <span class="token comment">// \u6BCF\u6B21\u9047\u5230 2 \u4E2A\u8FDE\u7EED\u7684 # \u8BF4\u660E\u8BE5\u8282\u70B9\u662F\u53F6\u5B50\u8282\u70B9\uFF0C\u5F39\u51FA # # cur</span>
        <span class="token comment">// \u5F39\u51FA\u540E\uFF0C\u8FD9\u8FB9\u7684\u5B50\u6811\u5C31\u662F\u7A7A\u6811\u4E86\uFF0C\u53EF\u4EE5\u7528 # \u4EE3\u66FF</span>
        <span class="token comment">// \u5982\u6B64\u5FAA\u73AF\uFF0C\u4E0D\u65AD\u628A\u53F6\u5B50\u8282\u70B9\u53D8\u4E3A\u7A7A\u8282\u70B9\uFF0C\u5BFC\u81F4\u539F\u6709\u975E\u53F6\u5B50\u8282\u70B9\u4E5F\u6E10\u6E10\u53D8\u4E3A\u7A7A\u8282\u70B9\uFF0C\u76F4\u5230\u4E3A\u7A7A\u6811</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> preorder<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7A7A\u6811</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F9D\u6B21\u538B\u6808</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> cur<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9700\u8981\u5F39\u51FA\u8BE5\u53F6\u5B50\u8282\u70B9\uFF0C\u7528\u7A7A\u6811\u4EE3\u66FF</span>
                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5F39\u51FA 2 \u4E2A\u7A7A\u8282\u70B9\u540E\uFF0C\u9700\u8981\u4FDD\u8BC1\u5F53\u524D\u8282\u70B9\u4E3A\u53F6\u5B50\u8282\u70B9\uFF0C\u5373\u6709\u503C\uFF0C\u800C\u975E\u53C8\u662F\u4E00\u4E2A #</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F39\u51FA\u6709\u6548\u7684\u53F6\u5B50\u8282\u70B9</span>
            <span class="token punctuation">}</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u538B\u5165\u5F53\u524D\u5B57\u7B26\u4E32\uFF0C\u4E0D\u8BBA\u662F \u503C \u8FD8\u662F #</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7531\u4E8E\u904D\u5386\u5230\u6700\u540E\u4E00\u4E2A\u5B50\u4E32\uFF0C\u65E0\u8BBA\u5982\u4F55\u90FD\u538B\u5165\u4E86\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u56E0\u6B64\u6700\u7EC8\u6808\u4E2D\u53EA\u5269\u4E0B\u6700\u540E\u7684\u4E00\u4E2A\u5143\u7D20\uFF0C\u800C\u4E14\u5FC5\u987B\u662F #</span>
        <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img_10.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u53CD\u5E8F\u5217\u5316\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u53CD\u5E8F\u5217\u5316\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u53CD\u5E8F\u5217\u5316\u601D\u8DEF</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> len<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidSerialization</span><span class="token punctuation">(</span><span class="token class-name">String</span> preorder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u9898\u610F\u8981\u6C42\u4E0D\u91CD\u5EFA\u6811\uFF0C\u4F46\u662F\u6211\u4EEC\u6309\u7167\u5EFA\u6811\u7684\u601D\u8DEF\uFF0C\u770B\u80FD\u5426\u91CD\u5EFA\u6811\uFF0C\u5982\u679C\u53EF\u4EE5\uFF0C\u8BF4\u660E\u6EE1\u8DB3\u6761\u4EF6</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> preorder<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">mySol</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&gt;=</span> len<span class="token punctuation">;</span> <span class="token comment">// \u8981\u4FDD\u8BC1\u904D\u5386\u5230\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// System.out.println(index);</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BF4\u660E\u662F\u7A7A\u8282\u70B9\uFF0C\u6307\u9488\u540E\u79FB\uFF0C\u8BE5\u8282\u70B9\u65E0\u9700\u91CD\u5EFA\uFF0C\u66F4\u6CA1\u6709\u5DE6\u53F3\u5B50\u6811\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
            index <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5230\u8FBE\u8FD9\u91CC\uFF0C\u8BF4\u660E\u662F\u4E00\u4E2A\u6709\u503C\u7684\u8282\u70B9</span>
        index <span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9012\u5F52\u5EFA\u7ACB\u5DE6\u53F3\u5B50\u6811</span>
        <span class="token keyword">boolean</span> left <span class="token operator">=</span> <span class="token function">mySol</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">boolean</span> right <span class="token operator">=</span> <span class="token function">mySol</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+o+'" alt="img_12.png"></p>',16),i=[l];function u(k,r){return s(),a("div",null,i)}var v=n(c,[["render",u],["__file","331.html.vue"]]);export{v as default};
