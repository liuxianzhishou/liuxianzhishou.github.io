import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_3.83ba6712.png",e="/assets/img_2.e360a5c5.png",c="/assets/img_4.5567e487.png";const o={},l=p('<h1 id="_399-\u9664\u6CD5\u6C42\u503C" tabindex="-1"><a class="header-anchor" href="#_399-\u9664\u6CD5\u6C42\u503C" aria-hidden="true">#</a> \u{1F315}\u{1F315}\u{1F317} 399. \u9664\u6CD5\u6C42\u503C</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}\u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_3.png"></p><hr><h3 id="\u89E3\u6CD5-1-dfs-\u56FE\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-dfs-\u56FE\u7684\u904D\u5386" aria-hidden="true">#</a> \u89E3\u6CD5 1 - DFS \u56FE\u7684\u904D\u5386</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a - {b, val}</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">calcEquation</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> equations<span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u56FE\u7684\u904D\u5386</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u7ED9\u5B9A\u6761\u4EF6\uFF0C\u8BB0\u5F55\u5230 map \u4E2D</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cur <span class="token operator">=</span> equations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> first <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> next <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> val <span class="token operator">=</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token comment">// \u6DFB\u52A0 a/b = val</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> tmpMap <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tmpMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> tmpMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u6DFB\u52A0 b/a = 1/val</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            tmpMap <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tmpMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token operator">/</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> tmpMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u9012\u5F52\u4F9D\u6B21\u6839\u636E\u7ED9\u5B9A\u8981\u6C42\u67E5\u627E\u7ED3\u679C</span>
        len <span class="token operator">=</span> queries<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cur <span class="token operator">=</span> queries<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> first <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> next <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mySol</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> first<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token class-name">String</span> end<span class="token punctuation">,</span> <span class="token keyword">double</span> cur<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u4E0D\u5B58\u5728\u67D0\u4E2A\u5143\u7D20\uFF0C\u5373\u4F7F\u7684 x/x \u4E5F\u4E0D\u80FD\u5F97\u5230 1.0 \u7684\u7ED3\u679C</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u904D\u5386\u4ECE str \u80FD\u5230\u8FBE\u7684\u6240\u6709\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> tmpMap <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span> tmpMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> fur <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0B\u4E00\u4E2A\u80FD\u5230\u8FBE\u7684\u8282\u70B9</span>
            <span class="token keyword">double</span> val <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>fur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BF4\u660E\u5DF2\u7ECF\u8D70\u8FC7\uFF0C\u8DF3</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            path<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> tmp <span class="token operator">=</span> <span class="token function">mySol</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> cur <span class="token operator">*</span> val<span class="token punctuation">,</span> fur<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> tmp<span class="token punctuation">;</span> <span class="token comment">// \u627E\u5230\u8DEF\u5F84\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
            <span class="token punctuation">}</span>
            path<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>fur<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img_2.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u5E76\u67E5\u96C6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u5E76\u67E5\u96C6" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u5E76\u67E5\u96C6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cur - father</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cur - val</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">calcEquation</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> equations<span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> queries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u5E76\u67E5\u96C6</span>
        <span class="token comment">// \u904D\u5386\u7ED9\u5B9A\u6761\u4EF6\uFF0C\u5C06 a/b = val \u8BBE\u7F6E\u4E3A a -[father] -&gt; b, [a] = val, [b] = 1, \u8FD9\u6837\u6C42 a/b \u65F6\u53EA\u9700\u6267\u884C [a] * [b] \u5373\u53EF</span>
        <span class="token comment">// \u59CB\u7EC8\u4FDD\u8BC1\u6839\u7684 val = 1</span>
        <span class="token comment">// \u8FD9\u6837\u5176\u4F59\u6240\u6709\u6570\u90FD\u662F \u81EA\u5DF1\u6240\u80FD\u5230\u8FBE\u7684\u6839\u8282\u70B9\u7684\u500D\u6570\uFF0C\u5373 1*[?]</span>
        <span class="token comment">// \u4F8B\uFF1Aa/b = 3, b/c = 3, e/f = 10, a/e = 1/2</span>
        <span class="token comment">// 1) \u6DFB\u52A0 a/b = 3 \u5230\u5E76\u67E5\u96C6\u4E2D\uFF0Ca.father = b, [a] = 3, [b] = 1 = root</span>
        <span class="token comment">// 2) \u6DFB\u52A0 b/c = 3 \u5230\u5E76\u67E5\u96C6\u4E2D\uFF0Cc.father = b, [c] = 1/3, [b] = 1 = root\uFF0C\u4E00\u4E2A\u4EE5 b \u5C55\u5F00\u7684\u56FE</span>
        <span class="token comment">// 3) \u6DFB\u52A0 e/f = 10 \u5230\u5E76\u67E5\u96C6\u4E2D\uFF0Ce.father = f, [e] = 10, [f] = 1\uFF0C\u4E00\u4E2A\u4EE5 f \u5C55\u5F00\u7684\u56FE\uFF0C\u548C\u4E0A\u4E00\u4E2A\u56FE\u6240\u6709\u5143\u7D20\u5747\u4E0D\u76F8\u5E72</span>
        <span class="token comment">// 4) \u6DFB\u52A0 a/e = 1/2 \u5230\u5E76\u67E5\u96C6\u4E2D\uFF0C\u7531\u4E8E a.father = b, e.father = f\uFF0C\u6B64\u65F6\u51FA\u73B0\u4E0D\u540C\u6839\u60C5\u51B5\uFF0C\u9700\u8981\u5408\u5E76 2 \u4E2A\u56FE\u4E3A\u4E00\u4E2A\u56FE</span>
        <span class="token comment">// \u5373\u5C06\u4E24\u4E2A\u56FE\u7684\u6839\u8282\u70B9\u8FDE\u63A5\uFF0C\u6700\u7EC8\u4FDD\u7559\u4E00\u4E2A\u6839\u8282\u70B9\uFF0C\u5047\u8BBE\u4FDD\u7559 e \u7684\u6839\u8282\u70B9 f</span>
        <span class="token comment">// \u5DF2\u77E5\u516C\u5F0F a / father[a] = [a], e / father[e] = [e], a/e = 1/2</span>
        <span class="token comment">// \u53EF\u4EE5\u5F97\u5230 father[a] / father[e] = [e] / [a] * val \u7136\u540E\u5C06\u6B64\u7ED3\u679C\u4F5C\u4E3A val \u7136\u540E\u8FDE\u63A5\u4F7F\u5F97\uFF0Cfather[a].father = e</span>
        <span class="token comment">// \u6700\u7EC8\u4FDD\u7559\u4E00\u4E2A root = f</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cur <span class="token operator">=</span> equations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> first <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> next <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> val <span class="token operator">=</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8FDE\u63A5\u5E76\u67E5\u96C6 - \u5206\u60C5\u51B5\u8BA8\u8BBA</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9664\u6570 &amp; \u88AB\u9664\u6570 \u4E4B\u524D\u5747\u6CA1\u6709\u51FA\u73B0\u8FC7\uFF0C\u90A3\u4E48\u76F4\u63A5\u6DFB\u52A0\uFF0C\u8FD9\u4E24\u4E2A\u8282\u70B9\u81EA\u6210\u4E00\u4E2A\u56FE\uFF0C[next] = 1, [first] = val</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0D\u5B58\u5728\u7B2C\u4E00\u4E2A\u6570\uFF0C\u4F46\u662F\u5B58\u5728\u7B2C\u4E8C\u4E2A\u6570 - \u6DFB\u52A0\u7B2C\u4E00\u4E2A\u6570</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0D\u5B58\u5728\u7B2C\u4E8C\u4E2A\u6570\uFF0C\u4F46\u5B58\u5728\u7B2C\u4E00\u4E2A\u6570 - \u672C\u6765\u662F\u8BA9\u7B2C\u4E8C\u4E2A\u6570\u4F5C\u4E3A\u6839\u7684\uFF0C\u4F46\u662F\u65E2\u7136\u7B2C\u4E00\u4E2A\u6570\u5B58\u5728\uFF0C\u6240\u4EE5\u5C31\u8BA9\u7B2C\u4E00\u4E2A\u6570\u505A\u6839\uFF0C\u56E0\u6B64\u7FFB\u8F6C</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token operator">/</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9664\u6570 &amp; \u88AB\u9664\u6570 \u5747\u5B58\u5728\uFF0C\u5224\u65AD\u662F\u5426\u540C\u4E00\u4E2A\u6839\u8282\u70B9</span>
                <span class="token comment">// \u5982\u679C\u540C\u6839\uFF0C\u8BF4\u660E\u8FD9\u4E24\u4E2A\u6570\u65E0\u9700\u518D\u6B21\u6DFB\u52A0\u5230\u5E76\u67E5\u96C6\u4E2D\uFF0C\u539F\u672C\u5C31\u53EF\u4EE5\u8BA1\u7B97\u5F97\u5230\u4E24\u8005\u4E4B\u5546</span>
                <span class="token comment">// \u82E5\u4E0D\u540C\u6839\uFF0C\u9700\u8981\u8FDB\u884C 2 \u6839\u7684\u5408\u5E76\uFF0C\u6700\u7EC8\u4FDD\u7559\u4E00\u4E2A\u6839</span>
                <span class="token class-name">String</span> ff <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> fn <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>ff<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u4E0D\u540C\u7236\uFF0C\u8FDE\u63A5 2 \u7236</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>ff<span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">double</span> tmpVal <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">/</span> vm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token operator">*</span> val<span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>ff<span class="token punctuation">,</span> tmpVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u904D\u5386\u8BA1\u7B97\u6240\u6C42</span>
        len <span class="token operator">=</span> queries<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cur <span class="token operator">=</span> queries<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> first <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> next <span class="token operator">=</span> cur<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5224\u65AD first &amp; next \u662F\u5426\u5B58\u5728</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u627E\u5230 first &amp; next \u7684\u7236\u4EB2</span>
            <span class="token comment">// System.out.println(i + &quot;: &quot; + first + &quot;  &quot; + next);</span>
            <span class="token class-name">String</span> ff <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> fn <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ff<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">;</span> <span class="token comment">// \u8BF4\u660E\u5404\u81EA\u5728 2 \u4E2A\u4E0D\u76F8\u90BB\u7684\u5E76\u67E5\u96C6\u4E2D</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u540C\u4E00\u4E2A\u6839\u8282\u70B9\uFF0C\u8BA1\u7B97\u5404\u81EA\u4E3A \u6839\u8282\u70B9\u7684\u591A\u5C11\u500D\uFF0C\u7531\u4E8E\u6839\u8282\u70B9 val = 1\uFF0C\u56E0\u6B64\u5F97\u5230\u7684\u7ED3\u679C\u53EF\u4EE5\u770B\u4F5C\u5404\u81EA\u7684\u5B9E\u9645\u503C</span>
            <span class="token keyword">double</span> f <span class="token operator">=</span> <span class="token function">getNum</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> n <span class="token operator">=</span> <span class="token function">getNum</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> f <span class="token operator">/</span> n<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">getNum</span><span class="token punctuation">(</span><span class="token class-name">String</span> cur<span class="token punctuation">,</span> <span class="token keyword">double</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token class-name">String</span> father <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7EE7\u7EED\u4E58\u4EE5\u5F53\u524D\u8282\u70B9\u7684\u503C</span>
        <span class="token keyword">return</span> <span class="token function">getNum</span><span class="token punctuation">(</span>father<span class="token punctuation">,</span> num <span class="token operator">*</span> vm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">findFather</span><span class="token punctuation">(</span><span class="token class-name">String</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> father <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6 - \u6839\u5C31\u662F\u5B83\u672C\u8EAB</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cur<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        <span class="token comment">// \u6839\u4E0D\u662F\u5B83\u672C\u8EAB - \u7EE7\u7EED\u5411\u4E0A\u627E\u6839</span>
        <span class="token keyword">return</span> <span class="token function">findFather</span><span class="token punctuation">(</span>father<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+c+'" alt="img_4.png"></p>',16),u=[l];function i(k,r){return s(),a("div",null,u)}var v=n(o,[["render",i],["__file","399.html.vue"]]);export{v as default};
