import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_3.98c67051.png",e="/assets/img_2.e3c2138d.png";const o={},c=p('<h1 id="_685-\u5197\u4F59\u8FDE\u63A5-ii" tabindex="-1"><a class="header-anchor" href="#_685-\u5197\u4F59\u8FDE\u63A5-ii" aria-hidden="true">#</a> \u{1F315} \u{1F315} \u{1F315} 685. \u5197\u4F59\u8FDE\u63A5 II</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F315} \u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_3.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findRedundantDirectedConnection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u6DFB\u52A0\u7684\u8FB9\u53EA\u80FD\u51FA\u73B0 2 \u79CD\u4E0D\u540C\u60C5\u51B5\uFF1A</span>
        <span class="token comment">// 1. \u6DFB\u52A0\u4ECE\u67D0\u4E2A\u8282\u70B9\u6307\u5411\u6839\u8282\u70B9\u7684\u8FB9\uFF0C\u5F62\u6210\u73AF\uFF0C\u6B64\u65F6\uFF0C\u9700\u8981\u501F\u52A9\u5E76\u67E5\u96C6\uFF0C\u67E5\u770B\u662F\u5426\u6709\u56FE\uFF0C\u5982\u679C\u662F\u56FE\uFF0C\u8FD4\u56DE\u8FD9\u6761\u8FB9</span>
        <span class="token comment">// 2. \u770B\u6811\u7684\u5165\u5EA6\uFF0C\u53EA\u6709\u6839\u8282\u70B9 \u5165\u5EA6 == 0 \u5176\u4ED6\u8282\u70B9 \u5165\u5EA6 == 1\uFF0C\u770B\u51FA\u5EA6\u65E0\u6548\uFF0C\u56E0\u4E3A\u5E76\u6CA1\u6709\u8BF4\u662F\u51E0\u53C9\u6811</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> edges<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ins <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7EDF\u8BA1\u5404\u4E0B\u6807\u5904\u7684\u5165\u5EA6</span>
        <span class="token keyword">int</span> iwant <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u54EA\u4E2A to \u7684\u4E0B\u6807\u5904 \u5165\u5EA6 == 2</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD9\u91CC\u987A\u5E8F\u6CA1\u6709\u5173\u7CFB\uFF0C\u53CD\u6B63\u53EA\u662F\u8BB0\u5F55 to\uFF0C\u4E4B\u540E\u8FD8\u8981\u4ECE\u540E\u5F80\u524D\u627E to \u5BF9\u5E94\u7684\u8FB9</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> from <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            ins<span class="token punctuation">[</span><span class="token keyword">to</span><span class="token punctuation">]</span> <span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u5165\u5EA6 ++</span>
            <span class="token comment">// System.out.println(Arrays.toString(ins) + &quot;  &quot; + Arrays.toString(array));</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>ins<span class="token punctuation">[</span><span class="token keyword">to</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6DFB\u52A0\u5230\u7ED3\u679C\u96C6\u4E2D\uFF0C\u4E4B\u540E\u5C1D\u8BD5\u5220\u9664\uFF0C\u770B\u5220\u9664\u54EA\u6761\u6709\u6548\uFF0C\u8FD9\u4E2A\u5E76\u4E0D\u662F\u5148\u51FA\u73B0\u6216\u540E\u51FA\u73B0\u7684\u6709\u6548\uFF0C\u800C\u662F\u8981\u770B\u5220\u9664\u540E\u7684\u6548\u679C</span>
                iwant <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>iwant <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BF4\u660E iwant \u4F5C\u4E3A to \u4F1A\u51FA\u73B0\u5165\u5EA6\u4E3A 2 \u7684\u60C5\u51B5\uFF0C\u4ECE\u540E\u5F80\u524D\u627E\uFF0C\u662F\u54EA\u6761\u8FB9\uFF0C\u5C1D\u8BD5\u5220\u9664</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">to</span> <span class="token operator">==</span> iwant<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u5C1D\u8BD5\u5220\u9664</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span>edges<span class="token punctuation">,</span> len<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6CA1\u6709\u51FA\u73B0\u5165\u5EA6 == 2 \u7684\u8FB9\uFF0C\u8BF4\u660E\u51FA\u73B0\u4E86\u73AF</span>
        <span class="token comment">// \u8FDB\u884C\u5E76\u67E5\u96C6\u7684\u5224\u65AD</span>
        <span class="token comment">// \u4ECE\u540E\u5F80\u524D\u904D\u5386\uFF0C\u4F9D\u6B21\u5C1D\u8BD5\u5220\u9664\u4E00\u6761\u8FB9\uFF0C\u82E5\u662F\u8FD8\u51FA\u73B0\u4E86\u73AF\uFF0C\u8BF4\u660E\u5220\u9664\u8BE5\u8FB9\u65E0\u7528\uFF0C\u9700\u8981\u7EE7\u7EED\u5C1D\u8BD5\u4E0B\u4E00\u6761\uFF0C\u76F4\u5230\u5220\u9664\u540E\u4E0D\u6210\u73AF</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isValid</span><span class="token punctuation">(</span>edges<span class="token punctuation">,</span> len<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> rvIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// parent \u521D\u59CB\u5316</span>
        <span class="token comment">// System.out.println(rvIndex);</span>
        parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u904D\u5386\u6240\u6709\u8FB9\uFF0C\u5224\u65AD\u662F\u5426\u80FD\u591F\u8FDE\u63A5\u6210\u529F</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u88AB\u5220\u9664\u7684\u8FB9\u4E0D\u53C2\u4E0E\u8BA1\u7B97</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>rvIndex <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> from <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">union</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8FDE\u63A5\u5931\u8D25\uFF0C\u51FA\u73B0\u56FE\uFF0C\u8BF4\u660E\u5220\u9664\u8BE5\u6761\u8FB9\u65E0\u7528</span>
                <span class="token comment">// System.out.println(from + &quot;  &quot; + to);</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> from<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token keyword">to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230\u5404\u81EA\u7684\u7956\u5148</span>
        <span class="token keyword">int</span> fatherFrom <span class="token operator">=</span> <span class="token function">getFather</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> fatherTo <span class="token operator">=</span> <span class="token function">getFather</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>fatherFrom <span class="token operator">==</span> fatherTo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u5DF2\u7ECF\u8FDE\u63A5\u8FC7\uFF0C\u8FDE\u63A5\u5931\u8D25\uFF0C\u51FA\u73B0\u56FE</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">[</span>fatherFrom<span class="token punctuation">]</span> <span class="token operator">=</span> fatherTo<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getFather</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> index<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getFather</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+e+'" alt="img_2.png"></p>',10),i=[c];function l(u,k){return s(),a("div",null,i)}var v=n(o,[["render",l],["__file","685.html.vue"]]);export{v as default};
