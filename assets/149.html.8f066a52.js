import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_9.b2f113e4.png",o="/assets/img_8.a715166a.png";const c={},e=p('<h1 id="_149-\u76F4\u7EBF\u4E0A\u6700\u591A\u7684\u70B9\u6570" tabindex="-1"><a class="header-anchor" href="#_149-\u76F4\u7EBF\u4E0A\u6700\u591A\u7684\u70B9\u6570" aria-hidden="true">#</a> \u{1F315}\u{1F315}\u{1F317} 149. \u76F4\u7EBF\u4E0A\u6700\u591A\u7684\u70B9\u6570</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}\u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_9.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxPoints</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u56FA\u5B9A\u4E00\u4E2A\u7AEF\u70B9\uFF0C\u501F\u52A9 HashMap \u5B58\u50A8\u6240\u6709\u53EF\u80FD\u7684\u659C\u7387 &amp; \u5BF9\u5E94\u7684\u70B9\u96C6\u5408</span>
        <span class="token comment">// \u53EF\u4EE5\u4F18\u5316\u7684\u70B9\u5982\u4E0B\uFF1A</span>
        <span class="token comment">// 1. \u82E5\u67D0\u4E2A\u659C\u7387\u4E0B\u7684\u70B9\u4E2A\u6570 &gt; len / 2 \u8BF4\u660E\u5269\u4E0B\u7684\u70B9\u5373\u4F7F\u5168\u90E8\u5728\u53E6\u4E00\u6761\u76F4\u7EBF\u4E0A\uFF0C\u4E5F\u4E0D\u53EF\u80FD\u6BD4\u8FD9\u6761\u96C6\u5408\u7684\u70B9\u591A</span>
        <span class="token comment">// \u6B64\u65F6\u53EF\u4EE5\u53EA\u8003\u8651\u5269\u4E0B\u7684\u8282\u70B9\u662F\u5426\u80FD\u5728\u5F53\u524D\u659C\u7387\u4E0B\u5904\u4E8E\u540C\u4E00\u6761\u76F4\u7EBF\uFF0C\u5176\u4ED6\u659C\u7387\u4E0D\u7528\u8003\u8651</span>
        <span class="token comment">// </span>
        <span class="token comment">// \u659C\u7387\u5982\u4F55\u8BB0\u5F55\uFF1F</span>
        <span class="token comment">// \u7531\u4E8E double \u4E5F\u53EF\u80FD\u51FA\u73B0\u622A\u65AD\u9020\u6210\u4E0D\u76F8\u7B49\u7684\u60C5\u51B5\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8BE5\u659C\u7387\u4E0B\u5DF2\u7ECF\u5B58\u5728\u7684\u4E24\u70B9 [ax, ay] &amp; [bx, by]</span>
        <span class="token comment">// \u9488\u5BF9\u5F53\u524D\u8282\u70B9 [x, y] \u6EE1\u8DB3\u6761\u4EF6 (by - ay) / (bx - ax) = (y - ay) / (x - ax)</span>
        <span class="token comment">// \u6574\u7406\u5F97\uFF0C(by - ay) * (y - ax) == (y - ay) * (bx - ax)</span>
        <span class="token comment">// \u5373\u4F7F\u5982\u6B64\uFF0Cmap \u7684 key \u4ECD\u9700\u8981\u4FDD\u5B58\u4E00\u4E2A\u659C\u7387\uFF0C\u53EF\u4EE5\u5C06\u5176\u5C3D\u91CF\u8F6C\u6362\u4E3A\u6574\u6570</span>
        <span class="token comment">// x, y \u2208 [-10^4, 10^4] \u8BF4\u660E\uFF0C\u25B3x, \u25B3y \u2208 [-2 * 10^4, 2 * 10^4]</span>
        <span class="token comment">// \u8FDB\u800C\uFF0C\u25B3y / \u25B3x \u2208 [-1/(2 * 10^4), 2 * 10^4]</span>
        <span class="token comment">// \u4ECE\u800C\uFF0C\u53EF\u4EE5\u5BF9 \u659C\u7387 * (2 * 10^4) \u4FDD\u8BC1\u659C\u7387\u8F6C\u6362\u4E3A\u6574\u6570</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u7279\u6B8A\u60C5\u51B5\u7279\u5224</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// len &gt; 2</span>
        <span class="token keyword">int</span> maxCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cur <span class="token operator">=</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u70B9\uFF0C\u5E0C\u671B\u548C\u5176\u4ED6\u70B9\u7EC4\u6210\u76F4\u7EBF</span>
            <span class="token comment">// \u56FA\u5B9A cur \u4F5C\u4E3A\u4E00\u4E2A\u7AEF\u53E3\uFF0C\u4F9D\u6B21\u904D\u5386\u5176\u4ED6\u70B9\u5F62\u6210\u76F4\u7EBF\uFF0C\u66F4\u65B0 map</span>
            <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     
            <span class="token keyword">int</span> curCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u4EE5 cur \u4E3A\u5DE6\u7AEF\u70B9\uFF0C\u5F62\u6210\u76F4\u7EBF\u7684\u6700\u5927\u70B9\u6570 </span>
            <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u662F\u5426\u627E\u5230\u6700\u5927\u659C\u7387\u7684\u8282\u70B9\uFF0C\u82E5\u4E3A true\uFF0C\u4E4B\u540E\u53EA\u9700\u8981\u4E0E\u8BE5\u659C\u7387\u5224\u65AD    </span>
            <span class="token keyword">int</span> diffY <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53 flag == true \u65F6\u7684\u53F3\u7AEF\u70B9 - \u5DE6\u7AEF\u70B9</span>
            <span class="token keyword">int</span> diffX <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u662F\u81EA\u5DF1\uFF0C\u8DF3\u8FC7</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> candicate <span class="token operator">=</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5F85\u7EC4\u6210\u76F4\u7EBF\u7684\u5019\u9009\u8282\u70B9</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// cur \u53EA\u548C y \u503C\u6BD4\u5B83\u5927\u7684\u8282\u70B9</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u6EE1\u8DB3\u6761\u4EF6\uFF0C\u53EA\u9700\u8981\u5224\u65AD\u4E00\u4E2A\u659C\u7387</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>diffX <span class="token operator">*</span> <span class="token punctuation">(</span>candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> diffY <span class="token operator">*</span> <span class="token punctuation">(</span>candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        curCount <span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u9700\u8981\u66F4\u65B0\u8FD9\u4E2A\u503C\uFF0C\u65E0\u9700\u7EE7\u7EED\u66F4\u65B0 map </span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u8BF4\u660E\u662F\u6C34\u5E73\u7EBF</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> curList <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    curList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candicate<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u52A0\u5165\u5019\u9009\u8282\u70B9</span>
                    <span class="token comment">// \u5224\u65AD\u662F\u5426\u66F4\u65B0 curCount</span>
                    curCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>curCount<span class="token punctuation">,</span> curList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u5224\u65AD\u662F\u5426\u53EF\u4EE5\u627E\u5230\u6700\u5927\u9891\u7387</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>curCount <span class="token operator">&gt;</span> <span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token comment">// \u6C42 diffX &amp; diffY</span>
                        <span class="token comment">// \u968F\u4FBF\u4ECE map \u4E2D\u8BE5\u659C\u7387\u4E0B\u627E\u4E00\u4E2A\u5176\u4ED6\u70B9\uFF0C\u4E3A\u65B9\u4FBF\uFF0C\u76F4\u63A5\u53D6 candicate</span>
                        diffX <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        diffY <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u8BF4\u660E\u4E3A\u5782\u76F4\u7EBF</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> curList <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    curList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candicate<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u52A0\u5165\u5019\u9009\u8282\u70B9</span>
                    curCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>curCount<span class="token punctuation">,</span> curList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>curCount <span class="token operator">&gt;</span> <span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        diffX <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        diffY <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u975E\u6C34\u5E73 &amp; \u975E\u5782\u76F4 \u7EBF\u6BB5</span>
                <span class="token keyword">int</span> scope <span class="token operator">=</span> <span class="token punctuation">(</span>candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20000</span> <span class="token operator">/</span> <span class="token punctuation">(</span>candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// System.out.println(i + &quot;  &quot; + scope + &quot;  &quot; + curCount);</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    tmpList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candicate<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>scope<span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u7531\u4E8E scope \u4E5F\u662F\u7ECF\u8FC7\u7EA6\u5206\u7684\uFF0C\u6240\u4EE5\u8FD8\u9700\u8981\u4E25\u683C\u5224\u65AD\uFF0C\u662F\u5426\u771F\u7684\u53EF\u4EE5\u7EC4\u6210\u4E00\u6761\u76F4\u7EBF</span>
                    <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> curList <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> tmpCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> dx <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> dy <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> select<span class="token operator">:</span> curList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span>dx <span class="token operator">*</span> <span class="token punctuation">(</span>select<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> dy <span class="token operator">*</span> <span class="token punctuation">(</span>select<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            tmpCount <span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u9664\u4E86 cur candicate \u8FD8\u6709\u5176\u4ED6\u8282\u70B9\u53EF\u4EE5\u7EC4\u6210</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                    curCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>curCount<span class="token punctuation">,</span> tmpCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    curList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candicate<span class="token punctuation">)</span><span class="token punctuation">;</span> 
                    <span class="token comment">// \u5224\u65AD\u662F\u5426\u66F4\u65B0 curCount</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>curCount <span class="token operator">&gt;</span> <span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        diffX <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                        diffY <span class="token operator">=</span> candicate<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u4EE5 cur \u4E3A\u5DE6\u7AEF\u70B9\uFF0C\u5DF2\u7ECF\u5168\u90E8\u904D\u5386\u5B8C</span>
            maxCount <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxCount<span class="token punctuation">,</span> curCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// System.out.println(i + &quot;  &quot; + curCount);</span>
            <span class="token comment">// \u7279\u6B8A\u60C5\u51B5\u5224\u65AD</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>maxCount <span class="token operator">==</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> len<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> maxCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+o+'" alt="img_8.png"></p>',10),u=[e];function l(i,k){return s(),a("div",null,u)}var m=n(c,[["render",l],["__file","149.html.vue"]]);export{m as default};
