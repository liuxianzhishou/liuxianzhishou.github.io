import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_13.c9d9741b.png",e="/assets/img_12.404e8f7b.png";const o={},c=p('<h1 id="_388-\u6587\u4EF6\u7684\u6700\u957F\u7EDD\u5BF9\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#_388-\u6587\u4EF6\u7684\u6700\u957F\u7EDD\u5BF9\u8DEF\u5F84" aria-hidden="true">#</a> \u{1F315}\u{1F315} 388. \u6587\u4EF6\u7684\u6700\u957F\u7EDD\u5BF9\u8DEF\u5F84</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_13.png"></p><hr><h3 id="\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthLongestPath</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// 1. \u4E0D\u8BBA\u662F\u4E2D\u95F4\u5C42\u7684\u6587\u4EF6\u5939 \u8FD8\u662F \u672B\u5C3E\u5C42\u7684\u6587\u4EF6 | \u6587\u4EF6\u5939\uFF0C\u4EE5 &#39;\\n&#39; \u53EF\u4EE5\u62C6\u5206</span>
        <span class="token comment">// 2. &#39;\\t&#39; \u662F\u5236\u8868\u7B26\uFF0C\u8FD9\u662F\u4E00\u4E2A\u5B57\u7B26</span>
        <span class="token comment">// 3. \u5224\u65AD\u62C6\u5206\u540E\u7684\u5B50\u4E32\uFF0C\u901A\u8FC7 &#39;\\t&#39; \u7684\u6570\u91CF\u53EF\u4EE5\u5224\u65AD\u51FA\u8FD9\u662F\u7B2C\u51E0\u5C42\u7684\u6587\u4EF6 | \u6587\u4EF6\u5939</span>
        <span class="token comment">// \u82E5\u662F\u6587\u4EF6\uFF0C\u53EF\u4EE5\u901A\u8FC7 \u524D\u9762\u51E0\u5C42\u4FDD\u5B58\u7684\u957F\u5EA6 + \u5F53\u524D\u5C42\u6587\u4EF6\u957F\u5EA6 \u83B7\u53D6\u7ED3\u679C</span>
        <span class="token comment">// \u82E5\u662F\u6587\u4EF6\u5939\uFF0C\u9700\u8981\u66F4\u65B0 \u5F53\u524D\u5C42\u7684\u957F\u5EA6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFile</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5305\u542B\u6587\u4EF6</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7B2C\u51E0\u5C42[0 \u5F00\u59CB\u8BA1\u7B97] - \u524D\u7F00\u957F\u5EA6</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C 0 \u7EA7 \u7684\u524D\u7F00\u957F\u5EA6\u4E3A 0</span>

        <span class="token comment">// \u904D\u5386</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">getCurCount</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5C42\u7EA7</span>

            <span class="token comment">// \u662F\u6587\u4EF6 - \u66F4\u65B0 res</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isFile</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> fileLen <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> count<span class="token punctuation">;</span> <span class="token comment">// \u603B\u957F\u5EA6 - &#39;\\t&#39; \u957F\u5EA6</span>
                <span class="token comment">// \u52A0\u4E0A \u6587\u4EF6\u524D\u9762\u7684 &#39;/&#39;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    fileLen <span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5C42\u7EA7\u7684\u524D\u7F00\u957F\u5EA6</span>
                <span class="token keyword">int</span> prevLen <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
                res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> fileLen <span class="token operator">+</span> prevLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BF4\u660E\u662F\u6587\u4EF6\u5939\uFF0C\u66F4\u65B0 map</span>
                <span class="token keyword">int</span> fileLen <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> count<span class="token punctuation">;</span>
                <span class="token comment">// \u52A0\u4E0A &#39;/&#39; \u524D\u7F00 - \u7B2C 0 \u5C42\u65E0\u9700\u52A0\u524D\u7F00 &#39;/&#39;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    fileLen <span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">int</span> prevLen <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u66F4\u65B0\u4E0B\u4E00\u5C42\u7684\u524D\u7F00\u957F\u5EA6 - \u5373\u5F53\u524D\u5C42\u5305\u542B\u524D\u7F00\u7684\u603B\u957F\u5EA6</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> fileLen <span class="token operator">+</span> prevLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getCurCount</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u662F\u7B2C\u51E0\u5C42\uFF0C\u6709\u4E00\u4E2A &#39;\\t&#39; \u589E\u52A0\u4E00\u5C42</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// &#39;\\t&#39; \u5FC5\u5B9A\u51FA\u73B0\u5728\u524D\u9762\uFF0C\u53EA\u8981\u9047\u5230\u4E0D\u662F &#39;\\t&#39; \u8BF4\u660E\u540E\u7EED\u80AF\u5B9A\u4E5F\u4E0D\u4F1A\u6709</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9A\u4F4D \u5C0F\u6570\u70B9 \u7684\u4F4D\u7F6E</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u5C0F\u6570\u70B9\u4E0D\u80FD\u662F\u6700\u540E\u4E00\u4F4D</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+e+'" alt="img_12.png"></p>',10),l=[c];function i(u,k){return s(),a("div",null,l)}var m=n(o,[["render",i],["__file","388.html.vue"]]);export{m as default};
