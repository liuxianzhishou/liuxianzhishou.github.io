import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.5aebcaaa.js";var t="/assets/img_4.36c5c567.png",e="/assets/img_3.90f6cf47.png",c="/assets/img_5.1365233c.png";const o={},l=p('<h1 id="_207-\u8BFE\u7A0B\u8868" tabindex="-1"><a class="header-anchor" href="#_207-\u8BFE\u7A0B\u8868" aria-hidden="true">#</a> \u{1F315}\u{1F315} 207. \u8BFE\u7A0B\u8868</h1><p>\u96BE\u5EA6: \u{1F315}\u{1F315}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_4.png"></p><hr><h3 id="\u89E3\u6CD5-1-dfs" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1-dfs" aria-hidden="true">#</a> \u89E3\u6CD5 1 - dfs</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set<span class="token punctuation">;</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>
    <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> finishedSet<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canFinish</span><span class="token punctuation">(</span><span class="token keyword">int</span> numCourses<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prerequisites<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// DFS</span>
        <span class="token comment">// 1. \u586B\u5145 set &amp; map</span>
        <span class="token comment">// set - \u8BB0\u5F55 \u6570\u7EC4\u4E2D\u5305\u542B\u524D\u7F6E\u8BFE\u7A0B\u7684\u8BFE\u7A0B\uFF0C\u5176\u4ED6\u8BFE\u7A0B\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u4FEE\u4E0D\u5F71\u54CD</span>
        <span class="token comment">// map = \u8BB0\u5F55 \u5F53\u524D\u8BFE\u7A0B - \u4FEE\u5F53\u524D\u8BFE\u7A0B\u524D\u9700\u8981\u4FEE\u54EA\u4E9B\u8BFE\u7A0B\u7684\u96C6\u5408\uFF0C\u7528\u4E8E DFS \u4FEE\u8BFE\u65F6\u5224\u65AD\u662F\u5426\u6210\u73AF</span>
        <span class="token comment">// 2. \u904D\u5386 set \u4E2D\u6240\u6709\u8BFE\u7A0B</span>
        <span class="token comment">// 3. DFS \u5224\u65AD set \u4E2D\u6BCF\u4E2A\u8BFE\u7A0B\u662F\u5426\u6210\u73AF\uFF0C\u5373\u9700\u8981\u4FEE\u5F53\u524D\u8BFE\u7A0B\uFF0C\u4FEE\u524D\u7F6E\u8BFE\u7A0B\u540E\u53D1\u73B0\uFF0C\u524D\u7F6E\u8BFE\u7A0B\u9700\u8981\u5148\u4FEE\u5F53\u524D\u8BFE\u7A0B \u7684\u60C5\u51B5</span>
        <span class="token comment">// 4. \u82E5\u6210\u73AF\uFF0C\u76F4\u63A5\u8FD4\u56DE false; \u82E5\u4E0D\u6210\u73AF\uFF0C\u8BB0\u5F55\u5F53\u524D\u8BFE\u7A0B\uFF0C\u8868\u793A\u8BE5\u8BFE\u7A0B\u53EF\u4EE5\u4FEE\u5B8C\uFF0C\u7EE7\u7EED\u904D\u5386\uFF0C\u82E5\u90FD\u4E0D\u6210\u73AF\uFF0C\u8FD4\u56DE true</span>
        set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        finishedSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1. \u586B\u5145 set &amp; map</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token operator">:</span> prerequisites<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> prev <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u524D\u7F6E\u8BFE\u7A0B</span>
            <span class="token comment">// \u586B\u5145 set</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u586B\u5145 map</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2. \u904D\u5386 set</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> cur <span class="token operator">:</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mySol</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                finishedSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">mySol</span><span class="token punctuation">(</span><span class="token keyword">int</span> cur<span class="token punctuation">,</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>finishedSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u8BFE\u7A0B\u5DF2\u7ECF\u9A8C\u8BC1\u8FC7\uFF0C\u4E0D\u5B58\u5728\u73AF\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u8BFE\u7A0B\u65E0\u524D\u7F6E\u8BFE\u7A0B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4FEE\uFF0C\u8FD4\u56DE</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u8BFE\u7A0B\u8981\u4FEE\uFF0C\u51FA\u73B0\u4E86\u73AF\uFF0C\u65E0\u6CD5\u4FEE\u4E60\uFF0C\u8FD4\u56DE</span>
        <span class="token punctuation">}</span>
        path<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u5176\u524D\u7F6E\u8BFE\u7A0B</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> prev <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">mySol</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u524D\u7F6E\u8BFE\u7A0B\u8FC7\u7A0B\u4E2D\uFF0C\u6210\u73AF</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        path<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56DE\u6EAF</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+e+`" alt="img_3.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u90BB\u63A5\u8868" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u90BB\u63A5\u8868" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u90BB\u63A5\u8868</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canFinish</span><span class="token punctuation">(</span><span class="token keyword">int</span> numCourses<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prerequisites<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u90BB\u63A5\u8868 - bsf - \u501F\u52A9 \u8F85\u52A9\u961F\u5217</span>
        <span class="token comment">// 1. \u586B\u5145 set &amp; map</span>
        <span class="token comment">// set - \u6570\u7EC4\u4E2D\u51FA\u73B0\u7684\u6240\u6709\u8BFE\u7A0B\uFF0C\u8FD9\u4E9B\u8BFE\u7A0B\u90FD\u548C\u5176\u4ED6\u8BFE\u7A0B\u6709\u5173\u8054</span>
        <span class="token comment">// listMap - \u5F53\u524D\u8BFE\u7A0B - \u540E\u7F6E\u8BFE\u7A0B\uFF0C\u5F53\u4FEE\u5B8C\u5F53\u524D\u8BFE\u7A0B\u540E\uFF0C\u82E5\u540E\u503C\u8BFE\u7A0B\u5C31\u53EA\u5269\u4E0B\u8FD9\u4E00\u4E2A\u524D\u7F6E\u4F9D\u8D56\uFF0C\u90A3\u4E48\u4E5F\u53EF\u4EE5\u4FEE\u4E86</span>
        <span class="token comment">// freMap - \u5F53\u524D\u8BFE\u7A0B - \u8FD8\u9700\u8981\u4FEE\u591A\u5C11\u95E8\u524D\u7F6E\u8BFE\u7A0B\uFF0C\u624D\u53EF\u4EE5\u4FEE\u4E60\u5F53\u524D\u8BFE\u7A0B\uFF0C\u5F53 == 0 \u65F6\uFF0C\u8BF4\u660E\u53EF\u4EE5\u4FEE\u4E86</span>
        <span class="token comment">// 2. \u5C06 set \u4E2D\u65E0\u524D\u7F6E\u8BFE\u7A0B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4FEE\u7684\u8BFE\u7A0B\u52A0\u5165 queue\uFF0C\u8868\u793A\u53EF\u4EE5\u4FEE\u4E86</span>
        <span class="token comment">// 3. \u5F53\u4FEE\u5B8C\u65E0\u524D\u7F6E\u8BFE\u7A0B\u7684\u8BFE\u7A0B\u540E\uFF0C\u5224\u65AD\u5B83\u7684\u540E\u7F6E\u8BFE\u7A0B\uFF0C\u770B\u6709\u6CA1\u6709\u56E0\u4E3A\u5F53\u524D\u8BFE\u7A0B\u963B\u585E\u7684\u8BFE\u7A0B\uFF0C\u82E5\u5B58\u5728\uFF0C\u53EF\u4EE5\u538B\u5165\u961F\u5217\uFF0C\u8FDB\u884C\u4FEE\u4E60</span>
        <span class="token comment">// 4. \u5F53 queue.isEmpty() \u540E\uFF0C\u904D\u5386 set\uFF0C\u5224\u65AD\u662F\u5426\u5B58\u5728\u8BFE\u7A0B\u7684\u524D\u7F6E\u8BFE\u7A0B &gt; 0 \u7684\u60C5\u51B5\uFF0C</span>
        <span class="token comment">//   \u82E5\u5B58\u5728\uFF0C\u8BF4\u660E\u8BE5\u8BFE\u7A0B\u65E0\u6CD5\u4FEE\u4E60</span>
        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> freMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1. \u586B\u5145 set &amp; map</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token operator">:</span> prerequisites<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> prev <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// set</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// listMap</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>listMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> tmpList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                listMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> tmpList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// freMap</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>freMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> fre <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
                fre <span class="token operator">++</span><span class="token punctuation">;</span>
                freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> fre<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 2. \u5C06\u76EE\u524D\u65E0\u524D\u7F6E\u8BFE\u7A0B\u7684\u8BFE\u7A0B\u52A0\u5165 queue\uFF0C\u8FDB\u884C\u4FEE\u4E60</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> cur <span class="token operator">:</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>freMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u53D6\u51FA\u5F53\u524D\u53EF\u4EE5\u4FEE\u4E60\u7684\u8BFE\u7A0B</span>
            <span class="token keyword">int</span> finish <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8868\u793A\u8BE5\u95E8\u8BFE\u7A0B\u4FEE\u4E60\u5B8C\u6210</span>
            <span class="token comment">// \u5224\u65AD\u5176\u540E\u7F6E\u8BFE\u7A0B\uFF0C\u4FEE\u6539\u5176 fre\uFF0C\u82E5 fre == 0 \u52A0\u5165\u4FEE\u4E60\u961F\u5217</span>
            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>finish<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>list <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u4EFB\u4F55\u540E\u7F6E\u8BFE\u7A0B\uFF0C\u8DF3\u51FA\u5F53\u524D\u5FAA\u73AF\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u6B21\u5FAA\u73AF</span>
            <span class="token punctuation">}</span> 
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> next<span class="token operator">:</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>finish<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> fre <span class="token operator">=</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                fre <span class="token operator">--</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>fre <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    queue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                freMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> fre<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 4. \u904D\u5386 set</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> cur <span class="token operator">:</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>freMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> freMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-2" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-2" aria-hidden="true">#</a> \u8F93\u51FA 2</h3><p><img src="`+c+'" alt="img_5.png"></p>',16),u=[l];function i(k,r){return s(),a("div",null,u)}var v=n(o,[["render",i],["__file","207.html.vue"]]);export{v as default};
