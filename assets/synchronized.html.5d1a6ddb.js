import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as i,c as l,a as n,b as a,e as s,d as t}from"./app.5aebcaaa.js";var u="/assets/img.22e5403d.png";const r={},k=s(`<h1 id="synchronized" tabindex="-1"><a class="header-anchor" href="#synchronized" aria-hidden="true">#</a> \u{1F534} Synchronized</h1><h2 id="_1-\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u7528\u6CD5" aria-hidden="true">#</a> 1. \u7528\u6CD5</h2><h3 id="_1-\u4FEE\u9970\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u4FEE\u9970\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> 1) \u4FEE\u9970\u9759\u6001\u65B9\u6CD5</h3><ul><li>\u4F5C\u7528\u5BF9\u8C61\u4E3A\uFF1A <strong>Class \u7C7B</strong></li><li>\u591A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\u65F6\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\uFF0C\u83B7\u5F97<strong>\u7C7B\u9501</strong>\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u963B\u585E\u7B49\u5F85\uFF0C\u4F46\u5728\u6B64\u671F\u95F4\u7EBF\u7A0B\u4ECD\u7136\u53EF\u4EE5\u8BBF\u95EE\u5176\u4ED6\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4FEE\u9970\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u4FEE\u9970\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> 2) \u4FEE\u9970\u5B9E\u4F8B\u65B9\u6CD5</h3><ul><li>\u4F5C\u7528\u5BF9\u8C61\u4E3A\uFF1A <strong>\u5B9E\u4F8B\u7C7B</strong></li><li>\u591A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\u65F6\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\uFF0C\u83B7\u5F97<strong>\u5BF9\u8C61\u5185\u7F6E\u9501</strong>\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u963B\u585E\u7B49\u5F85\uFF0C\u4F46\u5728\u6B64\u671F\u95F4\u7EBF\u7A0B\u4ECD\u7136\u53EF\u4EE5\u8BBF\u95EE\u5176\u4ED6\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u4FEE\u9970\u4EE3\u7801\u5757" tabindex="-1"><a class="header-anchor" href="#_3-\u4FEE\u9970\u4EE3\u7801\u5757" aria-hidden="true">#</a> 3) \u4FEE\u9970\u4EE3\u7801\u5757</h3><ul><li>\u4F5C\u7528\u5BF9\u8C61\u4E3A\uFF1A <strong>\u62EC\u53F7\u5185\u7684\u5BF9\u8C61</strong></li><li>\u591A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\u65F6\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u8FDB\u5165\uFF0C\u6839\u636E\u62EC\u53F7\u4E2D\u7684\u5BF9\u8C61\u6216\u8005\u662F\u7C7B\uFF0C\u83B7\u5F97\u76F8\u5E94\u7684<strong>\u5BF9\u8C61\u5185\u7F6E\u9501</strong> | <strong>\u7C7B\u9501</strong></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">//\u83B7\u5F97\u4E86String\u7684\u7C7B\u9501</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6BCF\u4E2A\u7C7B\u90FD\u6709\u4E00\u4E2A\u7C7B\u9501\uFF0C\u7C7B\u7684\u6BCF\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u4E5F\u6709\u4E00\u4E2A\u5185\u7F6E\u9501\uFF0C\u5B83\u4EEC\u662F\u4E92\u4E0D\u5E72\u6270\u7684\uFF0C \u5373\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u83B7\u5F97\u7C7B\u9501\u548C\u8BE5\u7C7B\u5B9E\u4F8B\u5316\u5BF9\u8C61\u7684\u5185\u7F6E\u9501\uFF0C \u5F53\u7EBF\u7A0B\u8BBF\u95EE\u975E <code>synchronized</code> \u4FEE\u9970\u7684\u65B9\u6CD5\u65F6\uFF0C\u5E76\u4E0D\u9700\u8981\u83B7\u5F97\u9501\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u4EA7\u751F\u963B\u585E</p></blockquote><hr><h2 id="_2-\u5E95\u5C42\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u5E95\u5C42\u539F\u7406" aria-hidden="true">#</a> 2. \u5E95\u5C42\u539F\u7406</h2><h3 id="_1-\u540C\u6B65\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u540C\u6B65\u65B9\u6CD5" aria-hidden="true">#</a> 1) \u540C\u6B65\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronizedTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>javac SynchronizedTest .java</code> \u7136\u540E <code>javap -c SynchronizedTest</code> \u53CD\u7F16\u8BD1\u540E\u770B\u6C47\u7F16\u6307\u4EE4</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> public synchronized void doSth<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor: <span class="token punctuation">(</span><span class="token punctuation">)</span>V
    flags: ACC_PUBLIC, ACC_SYNCHRONIZED // \u2606\u2606\u2606
    Code:
      <span class="token assign-left variable">stack</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">locals</span><span class="token operator">=</span><span class="token number">1</span>, <span class="token assign-left variable">args_size</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span>: getstatic     <span class="token comment">#2                  </span>
         <span class="token number">3</span>: ldc           <span class="token comment">#3    </span>
         <span class="token number">5</span>: invokevirtual <span class="token comment">#4                  </span>
         <span class="token number">8</span>: <span class="token builtin class-name">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u540C\u6B65\u65B9\u6CD5\u7684\u5E38\u91CF\u6C60\u4E2D\u4F1A\u6709\u4E00\u4E2A <code>ACC_SYNCHRONIZED</code> \u6807\u5FD7</li><li>\u5F53\u67D0\u4E2A\u7EBF\u7A0B\u8981\u8BBF\u95EE\u67D0\u4E2A\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u4F1A\u68C0\u67E5\u662F\u5426\u6709 <code>ACC_SYNCHRONIZED</code>\uFF0C\u5982\u679C\u6709\u8BBE\u7F6E\uFF0C\u5219\u9700\u8981\u5148\u83B7\u5F97<strong>\u76D1\u89C6\u5668\u9501</strong>\uFF0C\u7136\u540E\u5F00\u59CB\u6267\u884C\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u6267\u884C\u4E4B\u540E\u518D\u91CA\u653E\u76D1\u89C6\u5668\u9501</li><li>\u5982\u679C\u5728\u65B9\u6CD5\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u53D1\u751F\u4E86\u5F02\u5E38\uFF0C\u5E76\u4E14\u65B9\u6CD5\u5185\u90E8\u5E76\u6CA1\u6709\u5904\u7406\u8BE5\u5F02\u5E38\uFF0C\u90A3\u4E48\u5728\u5F02\u5E38\u88AB\u629B\u5230\u65B9\u6CD5\u5916\u9762<strong>\u4E4B\u524D</strong>\u76D1\u89C6\u5668\u9501\u4F1A\u88AB\u81EA\u52A8\u91CA\u653E</li></ul><h3 id="_2-\u540C\u6B65\u4EE3\u7801\u5757" tabindex="-1"><a class="header-anchor" href="#_2-\u540C\u6B65\u4EE3\u7801\u5757" aria-hidden="true">#</a> 2) \u540C\u6B65\u4EE3\u7801\u5757</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SynchronizedTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSth1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">SynchronizedTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>javac SynchronizedTest .java</code> \u7136\u540E <code>javap -c SynchronizedTest</code> \u53CD\u7F16\u8BD1\u540E\u770B\u6C47\u7F16\u6307\u4EE4</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>  public void doSth1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor: <span class="token punctuation">(</span><span class="token punctuation">)</span>V
    flags: ACC_PUBLIC
    Code:
      <span class="token assign-left variable">stack</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">locals</span><span class="token operator">=</span><span class="token number">3</span>, <span class="token assign-left variable">args_size</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span>: ldc           <span class="token comment">#5                 </span>
         <span class="token number">2</span>: dup
         <span class="token number">3</span>: astore_1
         <span class="token number">4</span>: monitorenter  //   \u2606\u2606\u2606
         <span class="token number">5</span>: getstatic     <span class="token comment">#2                  </span>
         <span class="token number">8</span>: ldc           <span class="token comment">#3                  </span>
        <span class="token number">10</span>: invokevirtual <span class="token comment">#4                </span>
        <span class="token number">13</span>: aload_1
        <span class="token number">14</span>: monitorexit  //\u6B63\u5E38\u65F6 \u2606\u2606\u2606
        <span class="token number">15</span>: goto          <span class="token number">23</span>
        <span class="token number">18</span>: astore_2
        <span class="token number">19</span>: aload_1
        <span class="token number">20</span>: monitorexit  // \u5F02\u5E38\u65F6 \u2606\u2606\u2606
        <span class="token number">21</span>: aload_2
        <span class="token number">22</span>: athrow
        <span class="token number">23</span>: <span class="token builtin class-name">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6BCF\u4E2A\u5BF9\u8C61\u7EF4\u62A4\u7740\u4E00\u4E2A\u8BB0\u5F55\u7740\u88AB\u9501\u6B21\u6570\u7684\u8BA1\u6570\u5668\u3002\u672A\u88AB\u9501\u5B9A\u7684\u5BF9\u8C61\u7684\u8BE5\u8BA1\u6570\u5668\u4E3A0</li><li>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u5F97\u9501\uFF08\u6267\u884C <code>monitorenter</code>\uFF09\u540E\uFF0C\u8BE5\u8BA1\u6570\u5668\u81EA\u589E\u53D8\u4E3A 1 \uFF0C\u5F53\u540C\u4E00\u4E2A\u7EBF\u7A0B\u518D\u6B21\u83B7\u5F97\u8BE5\u5BF9\u8C61\u7684\u9501\u7684\u65F6\u5019\uFF0C\u8BA1\u6570\u5668\u518D\u6B21\u81EA\u589E</li><li>\u5F53\u540C\u4E00\u4E2A\u7EBF\u7A0B\u91CA\u653E\u9501\uFF08\u6267\u884C <code>monitorexit</code>\uFF09\u7684\u65F6\u5019\uFF0C\u8BA1\u6570\u5668\u518D\u81EA\u51CF\u3002</li><li>\u5F53\u8BA1\u6570\u5668\u4E3A0\u7684\u65F6\u5019\uFF0C\u9501\u5C06\u88AB\u91CA\u653E\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u4FBF\u53EF\u4EE5\u83B7\u5F97\u9501</li></ul><h3 id="_3-monitor-\u539F\u7406\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_3-monitor-\u539F\u7406\u89E3\u6790" aria-hidden="true">#</a> 3) monitor \u539F\u7406\u89E3\u6790</h3>`,25),d=s("<li><code>HotSpot</code> \u4E2D\uFF0C<code>monitor</code> \u5E95\u5C42\u662F\u7531 <code>ObjectMonitor</code> \u5B9E\u73B0\u7684\uFF0C\u6570\u636E\u7ED3\u6784\u5982\u4E0B\uFF1A</li><li>\u4F4D\u4E8E <code>HotSpot</code> \u865A\u62DF\u673A\u6E90\u7801 <code>ObjectMonitor.hpp</code> \u6587\u4EF6\uFF0C<code>C++</code> \u5B9E\u73B0</li>",2),v={href:"https://github.com/openjdk/jdk/blob/jdk8-b120/hotspot/src/share/vm/runtime/objectMonitor.hpp",target:"_blank",rel:"noopener noreferrer"},m=t("\u6E90\u7801\u5730\u5740"),b=s(`<div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>class ObjectMonitor <span class="token punctuation">{</span>
  <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
  <span class="token function">ObjectMonitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _header       <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 
    _count        <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//\u8BB0\u5F55\u6570</span>
    _waiters      <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    _recursions   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//\u9501\u7684\u91CD\u5165\u6B21\u6570</span>
    _object       <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    _owner        <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>   <span class="token comment">//\u6307\u5411\u6301\u6709 ObjectMonitor \u5BF9\u8C61\u7684\u7EBF\u7A0B</span>
    _WaitSet      <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>   <span class="token comment">//\u8C03\u7528wait\u540E\uFF0C\u7EBF\u7A0B\u4F1A\u88AB\u52A0\u5165\u5230_WaitSet</span>
    _WaitSetLock  <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    _Responsible  <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>
    _succ         <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>
    _cxq          <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>  <span class="token comment">// \u591A\u7EBF\u7A0B\u7ADE\u4E89\u9501\u8FDB\u5165\u65F6\u7684\u5355\u5411\u94FE\u8868</span>
    FreeNext      <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>
    _EntryList    <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>  <span class="token comment">//\u7B49\u5F85\u83B7\u53D6\u9501\u7684\u7EBF\u7A0B\uFF0C\u4F1A\u88AB\u52A0\u5165\u5230\u8BE5\u5217\u8868</span>
    _SpinFreq     <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    _SpinClock    <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    OwnerIsThread <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    _previous_owner_tid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
    <span class="token comment">// \u7EBF\u7A0B\u5C1D\u8BD5\u83B7\u53D6\u9501  </span>
    bool ObjectMonitor<span class="token operator">::</span><span class="token function">try_enter</span><span class="token punctuation">(</span>Thread<span class="token operator">*</span> THREAD<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>THREAD <span class="token operator">!=</span> _owner<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8BE5\u5BF9\u8C61\u9501\u4E4B\u524D\u4E0D\u662F\u672C\u7EBF\u7A0B\u83B7\u53D6</span>
        <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u5C1D\u8BD5\u83B7\u53D6 \u5BF9\u8C61\u9501</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>THREAD<span class="token operator">-&gt;</span><span class="token function">is_lock_owned</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>_owner<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u83B7\u53D6\u6210\u529F</span>
           <span class="token function">assert</span><span class="token punctuation">(</span>_recursions <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;internal state error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53EA\u80FD\u8BF4\u660E\u5728\u6B64\u4E4B\u524D \u9501\u7684\u91CD\u5165\u6B21\u6570 == 0</span>
           _owner <span class="token operator">=</span> THREAD <span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u76F8\u5173\u5C5E\u6027\u7684\u503C</span>
           _recursions <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
           OwnerIsThread <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
           <span class="token keyword">return</span> true<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5C1D\u8BD5\u4FEE\u6539 _owner \u6307\u9488\u4E3A \u5F53\u524D\u7EBF\u7A0B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Atomic<span class="token operator">::</span><span class="token function">cmpxchg_ptr</span> <span class="token punctuation">(</span>THREAD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>_owner<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> false<span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539\u5931\u8D25\uFF0C\u8FD4\u56DE false</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> true<span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539\u6210\u529F</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u672C\u7EBF\u7A0B\u518D\u6B21\u83B7\u53D6 \u5BF9\u8C61\u9501</span>
        _recursions<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> true<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// </span>
    <span class="token keyword">void</span> ATTR ObjectMonitor<span class="token operator">::</span><span class="token function">enter</span><span class="token punctuation">(</span>TRAPS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Thread <span class="token operator">*</span> <span class="token keyword">const</span> Self <span class="token operator">=</span> THREAD <span class="token punctuation">;</span>
      <span class="token keyword">void</span> <span class="token operator">*</span> cur <span class="token punctuation">;</span>
    
      cur <span class="token operator">=</span> Atomic<span class="token operator">::</span><span class="token function">cmpxchg_ptr</span> <span class="token punctuation">(</span>Self<span class="token punctuation">,</span> <span class="token operator">&amp;</span>_owner<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token comment">// \u4FEE\u6539 _owner \u6307\u9488\u4E3A \u5F53\u524D\u7EBF\u7A0B\uFF0C\u5931\u8D25\uFF0C\u8FD4\u56DE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">assert</span> <span class="token punctuation">(</span>_recursions <span class="token operator">==</span> <span class="token number">0</span>   <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
         <span class="token function">assert</span> <span class="token punctuation">(</span>_owner      <span class="token operator">==</span> Self<span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      
      <span class="token comment">// \u6210\u529F\u4FEE\u6539 _owner \u6307\u9488\u4E3A \u5F53\u524D\u7EBF\u7A0B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token operator">==</span> Self<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         _recursions <span class="token operator">++</span> <span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Self<span class="token operator">-&gt;</span><span class="token function">is_lock_owned</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">assert</span> <span class="token punctuation">(</span>_recursions <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;internal state error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _recursions <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
        _owner <span class="token operator">=</span> Self <span class="token punctuation">;</span>
        OwnerIsThread <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      <span class="token comment">// \u6211\u4EEC\u9047\u5230\u4E86\u771F\u6B63\u7684\u4E89\u8BBA\u3002</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>Self<span class="token operator">-&gt;</span>_Stalled <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      Self<span class="token operator">-&gt;</span>_Stalled <span class="token operator">=</span> <span class="token class-name">intptr_t</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
      <span class="token comment">// \u77ED\u6682 \u81EA\u65CB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Knob_SpinEarly <span class="token operator">&amp;&amp;</span> <span class="token function">TrySpin</span> <span class="token punctuation">(</span>Self<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">assert</span> <span class="token punctuation">(</span>_owner <span class="token operator">==</span> Self      <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
         <span class="token function">assert</span> <span class="token punctuation">(</span>_recursions <span class="token operator">==</span> <span class="token number">0</span>    <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
         <span class="token function">assert</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> markOopDesc<span class="token operator">::</span><span class="token function">encode</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
         Self<span class="token operator">-&gt;</span>_Stalled <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      <span class="token function">assert</span> <span class="token punctuation">(</span>_owner <span class="token operator">!=</span> Self          <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_succ  <span class="token operator">!=</span> Self          <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>Self<span class="token operator">-&gt;</span><span class="token function">is_Java_thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      JavaThread <span class="token operator">*</span> jt <span class="token operator">=</span> <span class="token punctuation">(</span>JavaThread <span class="token operator">*</span><span class="token punctuation">)</span> Self <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span><span class="token operator">!</span>SafepointSynchronize<span class="token operator">::</span><span class="token function">is_at_safepoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>jt<span class="token operator">-&gt;</span><span class="token function">thread_state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> _thread_blocked   <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>this<span class="token operator">-&gt;</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">NULL</span>  <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_count <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
      <span class="token comment">// count ++</span>
      Atomic<span class="token operator">::</span><span class="token function">inc_ptr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>_count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
      EventJavaMonitorEnter event<span class="token punctuation">;</span>
    
      <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u6539 java \u7EBF\u7A0B\u72B6\u6001\u4EE5\u6307\u793A\u5728\u76D1\u89C6\u5668\u8F93\u5165\u65F6\u88AB\u963B\u6B62\u3002</span>
        JavaThreadBlockedOnMonitorEnterState <span class="token function">jtbmes</span><span class="token punctuation">(</span>jt<span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token function">DTRACE_MONITOR_PROBE</span><span class="token punctuation">(</span>contended__enter<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> jt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>JvmtiExport<span class="token operator">::</span><span class="token function">should_post_monitor_contended_enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          JvmtiExport<span class="token operator">::</span><span class="token function">post_monitor_contended_enter</span><span class="token punctuation">(</span>jt<span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        OSThreadContendState <span class="token function">osts</span><span class="token punctuation">(</span>Self<span class="token operator">-&gt;</span><span class="token function">osthread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ThreadBlockInVM <span class="token function">tbivm</span><span class="token punctuation">(</span>jt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        Self<span class="token operator">-&gt;</span><span class="token function">set_current_pending_monitor</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token comment">// TODO-FIXME\uFF1A\u5C06\u4EE5\u4E0B for(;;) \u5FAA\u73AF\u66F4\u6539\u4E3A\u76F4\u7EBF\u4EE3\u7801\u3002</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          jt<span class="token operator">-&gt;</span><span class="token function">set_suspend_equivalent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u7531 handle_special_suspend_equivalent_condition() \u6216 java_suspend_self() \u6E05\u9664</span>
          <span class="token function">EnterI</span> <span class="token punctuation">(</span>THREAD<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">ExitSuspendEquivalent</span><span class="token punctuation">(</span>jt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span> <span class="token punctuation">;</span>

          <span class="token comment">// \u6211\u4EEC\u5DF2\u7ECF\u83B7\u5F97\u4E86\u7ADE\u4E89\u76D1\u89C6\u5668\uFF0C\u4F46\u662F\u5728\u6211\u4EEC\u7B49\u5F85\u65F6\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u6682\u505C\u4E86\u6211\u4EEC\u3002\u6211\u4EEC\u4E0D\u60F3\u5728\u6682\u505C\u65F6\u8FDB\u5165\u76D1\u89C6\u5668\uFF0C\u56E0\u4E3A\u8FD9\u4F1A\u8BA9\u6682\u505C\u6211\u4EEC\u7684\u7EBF\u7A0B\u611F\u5230\u60CA\u8BB6\u3002</span>
          _recursions <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
          _succ <span class="token operator">=</span> <span class="token constant">NULL</span> <span class="token punctuation">;</span>
          <span class="token function">exit</span> <span class="token punctuation">(</span>false<span class="token punctuation">,</span> Self<span class="token punctuation">)</span> <span class="token punctuation">;</span>  
          jt<span class="token operator">-&gt;</span><span class="token function">java_suspend_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        Self<span class="token operator">-&gt;</span><span class="token function">set_current_pending_monitor</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      Atomic<span class="token operator">::</span><span class="token function">dec_ptr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>_count<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_count <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      Self<span class="token operator">-&gt;</span>_Stalled <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    
      <span class="token comment">// Must either set _recursions = 0 or ASSERT _recursions == 0.</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_recursions <span class="token operator">==</span> <span class="token number">0</span>     <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_owner <span class="token operator">==</span> Self       <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span>_succ  <span class="token operator">!=</span> Self       <span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token function">assert</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> markOopDesc<span class="token operator">::</span><span class="token function">encode</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;invariant&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    
      <span class="token comment">// \u7EBF\u7A0B\u2014\u2014\u73B0\u5728\u662F\u6240\u6709\u8005\u2014\u2014\u53C8\u56DE\u5230\u4E86 vm \u6A21\u5F0F\u3002</span>
      <span class="token comment">// \u901A\u8FC7 TI\u3001DTrace \u548C jvmstat \u62A5\u544A\u8FD9\u4E00\u559C\u8BAF\u3002\u63A2\u6D4B\u6548\u5E94\u662F\u4E0D\u5E73\u51E1\u7684\u3002</span>
      <span class="token comment">// \u6240\u6709\u7684\u62A5\u9053\u90FD\u662F\u5728\u6211\u4EEC\u62FF\u7740\u663E\u793A\u5668\u7684\u65F6\u5019\u53D1\u751F\u7684\uFF0C\u589E\u52A0\u4E86\u5173\u952E\u90E8\u5206\u7684\u957F\u5EA6\u3002 Amdahl \u7684\u5E76\u884C\u52A0\u901F\u5B9A\u5F8B\u751F\u52A8\u5730\u53D1\u6325\u4E86\u4F5C\u7528\u3002</span>
      <span class="token comment">//</span>
      <span class="token comment">// \u53E6\u4E00\u79CD\u9009\u62E9\u53EF\u80FD\u662F\u805A\u5408\u4E8B\u4EF6\uFF08\u7EBF\u7A0B\u672C\u5730\u6216\u6BCF\u4E2A\u76D1\u89C6\u5668\u805A\u5408\uFF09\u5E76\u5C06\u62A5\u544A\u63A8\u8FDF\u5230\u66F4\u5408\u9002\u7684\u65F6\u95F4 - </span>
      <span class="token comment">// \u4F8B\u5982\u4E0B\u4E00\u6B21\u67D0\u4E2A\u7EBF\u7A0B\u9047\u5230\u4E89\u7528\u4F46\u5C1A\u672A\u83B7\u5F97\u9501\u3002\u867D\u7136\u65CB\u8F6C\u8BE5\u7EBF\u7A0B\u53EF\u4EE5\u65CB\u8F6C\uFF0C\u4F46\u6211\u4EEC\u53EF\u4EE5\u589E\u52A0 JVMStat \u8BA1\u6570\u5668\u7B49\u3002</span>
    
      <span class="token function">DTRACE_MONITOR_PROBE</span><span class="token punctuation">(</span>contended__entered<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> jt<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>JvmtiExport<span class="token operator">::</span><span class="token function">should_post_monitor_contended_entered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        JvmtiExport<span class="token operator">::</span><span class="token function">post_monitor_contended_entered</span><span class="token punctuation">(</span>jt<span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">should_commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        event<span class="token punctuation">.</span><span class="token function">set_klass</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>oop<span class="token punctuation">)</span>this<span class="token operator">-&gt;</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">klass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">set_previousOwner</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TYPE_JAVALANGTHREAD<span class="token punctuation">)</span>_previous_owner_tid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">set_address</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TYPE_ADDRESS<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">uintptr_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span>this<span class="token operator">-&gt;</span><span class="token function">object_addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        event<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ObjectMonitor<span class="token operator">::</span>_sync_ContendedLockAttempts <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         ObjectMonitor<span class="token operator">::</span>_sync_ContendedLockAttempts<span class="token operator">-&gt;</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5E95\u5C42\u65B9\u6CD5\u6D41\u7A0B\uFF1A</li></ul><p><img src="`+u+'" alt="img.png"></p><hr><h2 id="_3-\u9501\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_3-\u9501\u4F18\u5316" aria-hidden="true">#</a> 3. \u9501\u4F18\u5316</h2><blockquote><p>JDK 6 \u8FDB\u884C\u9501\u7684\u4F18\u5316</p></blockquote><h3 id="\u9501\u5347\u7EA7\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u9501\u5347\u7EA7\u6D41\u7A0B" aria-hidden="true">#</a> \u9501\u5347\u7EA7\u6D41\u7A0B</h3>',7),h=s('<h3 id="_1-\u504F\u5411\u9501" tabindex="-1"><a class="header-anchor" href="#_1-\u504F\u5411\u9501" aria-hidden="true">#</a> 1) \u504F\u5411\u9501</h3><ul><li>\u5F53\u7EBF\u7A0B\u8BBF\u95EE\u540C\u6B65\u5757\u83B7\u53D6\u9501\u65F6\uFF0C\u4F1A\u5728\u5BF9\u8C61\u5934\u548C\u6808\u5E27\u4E2D\u7684\u9501\u8BB0\u5F55\u91CC\u5B58\u50A8\u504F\u5411\u9501\u7684\u7EBF\u7A0BID\uFF0C\u4E4B\u540E\u8FD9\u4E2A\u7EBF\u7A0B\u518D\u6B21\u8FDB\u5165\u540C\u6B65\u5757\u65F6\u90FD\u4E0D\u9700\u8981CAS\u6765\u52A0\u9501\u548C\u89E3\u9501\u4E86\uFF0C</li><li>\u504F\u5411\u9501\u4F1A\u6C38\u8FDC\u504F\u5411\u7B2C\u4E00\u4E2A\u83B7\u5F97\u9501\u7684\u7EBF\u7A0B\uFF0C</li><li>\u5982\u679C\u540E\u7EED\u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u83B7\u5F97\u8FC7\u8FD9\u4E2A\u9501\uFF0C\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u5C31\u6C38\u8FDC\u4E0D\u9700\u8981\u8FDB\u884C\u540C\u6B65\uFF0C\u53CD\u4E4B\uFF0C\u5F53\u6709\u5176\u4ED6\u7EBF\u7A0B\u7ADE\u4E89\u504F\u5411\u9501\u65F6\uFF0C\u6301\u6709\u504F\u5411\u9501\u7684\u7EBF\u7A0B\u5C31\u4F1A\u91CA\u653E\u504F\u5411\u9501</li></ul><ol><li><strong>\u53C2\u6570</strong></li></ol><ul><li><code>xx:UseBiasedLocking = true</code></li><li>JDK 1.5 \u5173\u95ED</li><li>JDK 1.6 \u9ED8\u8BA4\u5F00\u542F</li><li>JDK 15 \u5173\u95ED\u5E9F\u5F03</li></ul><ol start="2"><li><strong>\u9002\u7528\u573A\u666F</strong></li></ol><ul><li>\u8FDE\u7EED\u591A\u6B21\u662F\u540C\u4E00\u4E2A\u7EBF\u7A0B\u7533\u8BF7\u76F8\u540C\u7684\u9501</li><li>\u4E0D\u9002\u7528\u4E8E\u9501\u7ADE\u4E89\u6FC0\u70C8\u7684\u573A\u666F</li></ul><ol start="3"><li><strong>\u5BF9\u8C61\u5934</strong></li></ol><table><thead><tr><th>\u573A\u666F</th><th>\u5BF9\u8C61\u5934</th></tr></thead><tbody><tr><td>\u504F\u5411\u9501\u8FD8\u672A\u504F\u5411\u4EFB\u4F55\u7EBF\u7A0B</td><td>hashCode + \u5206\u4EE3\u5E74\u9F84 + \u504F\u5411\u6807\u5FD7\u4F4D <code>1</code> + \u9501\u6807\u5FD7\u4F4D <code>01</code></td></tr><tr><td>\u504F\u5411\u9501\u8BBE\u7F6E\u504F\u5411\u67D0\u4E2A\u7EBF\u7A0B</td><td>\u7EBF\u7A0B id + Epoch + \u5206\u4EE3\u5E74\u9F84 + \u504F\u5411\u6807\u5FD7\u4F4D <code>1</code> + \u9501\u6807\u5FD7\u4F4D <code>01</code></td></tr></tbody></table>',8),_={start:"4"},f=t("\u6E90\u7801 "),g={href:"https://github.com/openjdk/jdk/blob/jdk8-b120/hotspot/src/share/vm/runtime/synchronizer.cpp",target:"_blank",rel:"noopener noreferrer"},y=t("\u5730\u5740"),w=s(`<div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> ObjectSynchronizer<span class="token operator">::</span><span class="token function">fast_enter</span><span class="token punctuation">(</span>Handle obj<span class="token punctuation">,</span> BasicLock<span class="token operator">*</span> lock<span class="token punctuation">,</span> bool attempt_rebias<span class="token punctuation">,</span> TRAPS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u4F7F\u7528\u4E86 \u504F\u5411\u9501</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>UseBiasedLocking<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u5728 \u5B89\u5168\u70B9\uFF0C\u5C1D\u8BD5\u504F\u5411\u5F53\u524D\u7EBF\u7A0B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>SafepointSynchronize<span class="token operator">::</span><span class="token function">is_at_safepoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      BiasedLocking<span class="token operator">::</span>Condition cond <span class="token operator">=</span> BiasedLocking<span class="token operator">::</span><span class="token function">revoke_and_rebias</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> attempt_rebias<span class="token punctuation">,</span> THREAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cond <span class="token operator">==</span> BiasedLocking<span class="token operator">::</span>BIAS_REVOKED_AND_REBIASED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\uFF0C\u8FD4\u56DE</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">assert</span><span class="token punctuation">(</span><span class="token operator">!</span>attempt_rebias<span class="token punctuation">,</span> <span class="token string">&quot;can not rebias toward VM thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      BiasedLocking<span class="token operator">::</span><span class="token function">revoke_at_safepoint</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token operator">-&gt;</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">has_bias_pattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;biases should be revoked by now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token comment">// \u4E0D\u5141\u8BB8\u4F7F\u7528\u504F\u5411\u9501 | \u83B7\u504F\u5411\u9501\u5931\u8D25\uFF0C\u8FDB\u5165 slow_enter \u65B9\u6CD5\uFF0C\u8FDB\u5165\u8F7B\u91CF\u7EA7\u72B6\u6001</span>
 <span class="token function">slow_enter</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span> lock<span class="token punctuation">,</span> THREAD<span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u8F7B\u91CF\u7EA7\u9501" tabindex="-1"><a class="header-anchor" href="#_2-\u8F7B\u91CF\u7EA7\u9501" aria-hidden="true">#</a> 2) \u8F7B\u91CF\u7EA7\u9501</h3><ol><li><strong>\u9002\u7528\u573A\u666F</strong></li></ol><ul><li>\u7ADE\u4E89 \u9501\u5BF9\u8C61 \u7684\u7EBF\u7A0B\u4E0D\u591A &amp; \u7EBF\u7A0B\u6301\u6709\u9501\u7684\u65F6\u95F4\u4E5F\u4E0D\u957F</li><li>\u6B64\u65F6\uFF0C\u81EA\u65CB\u7684\u6D88\u8017\u6BD4\u5185\u6838\u6001 - \u7528\u6237\u6001\u7684\u5207\u6362\u5F00\u9500\u5C0F\uFF0C\u65F6\u95F4\u77ED\u5BF9 CPU \u53CB\u597D</li></ul><ol start="2"><li><strong>\u5BF9\u8C61\u5934</strong></li></ol><table><thead><tr><th>\u573A\u666F</th><th>\u5BF9\u8C61\u5934</th></tr></thead><tbody><tr><td>\u8F7B\u91CF\u7EA7\u9501</td><td>\u6307\u5411 <code>Record Lock</code> \u7684\u6307\u9488 + \u9501\u6807\u5FD7\u4F4D <code>00</code></td></tr><tr><td>\u91CD\u91CF\u7EA7\u9501</td><td>\u6307\u5411 <strong>\u91CD\u91CF\u7EA7\u9501</strong> \u7684\u6307\u9488 + \u9501\u6807\u5FD7\u4F4D <code>01</code></td></tr></tbody></table><ol start="3"><li>\u539F\u7406</li></ol><ul><li>\u5728\u5F53\u524D\u7EBF\u7A0B\u7684\u6808\u5E27\u4E2D\u5EFA\u7ACB <code>Record Lock</code> \u4F5C\u4E3A \u9501\u5BF9\u8C61\u5934 <code>Mark Word</code> \u7684\u526F\u672C</li><li><code>CAS</code> \u5C06 \u9501\u5BF9\u8C61\u7684 <code>Mark Word</code> \u66F4\u65B0\u4E3A\u6307\u5411 <code>Record Lock</code> \u7684\u5730\u5740</li><li>\u82E5\u6210\u529F\uFF0C\u4FEE\u6539\u5BF9\u8C61\u5934\u7684\u9501\u6807\u5FD7\u4F4D\u4E3A <code>00</code>\uFF0C\u8868\u793A\u5BF9\u8C61\u5904\u4E8E\u8F7B\u91CF\u7EA7\u9501\u72B6\u6001\uFF0C\u7EBF\u7A0B\u83B7\u53D6\u4E86\u8FD9\u4E2A\u5BF9\u8C61\u7684\u9501\uFF0C\u6267\u884C\u76F8\u5173\u64CD\u4F5C\uFF0C\u6267\u884C\u5B8C\u540C\u6B65\u64CD\u4F5C\u540E\uFF0C\u5C06 <code>Mark Word</code> \u6307\u9488\u590D\u4F4D</li><li>\u82E5\u5931\u8D25\uFF0C\u8BF4\u660E\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728\u548C\u5F53\u524D\u7EBF\u7A0B\u7ADE\u4E89\u8BE5\u5BF9\u8C61\u7684\u9501\uFF0C\u6B64\u65F6\u5C1D\u8BD5<strong>\u81EA\u65CB</strong>\u7B49\u5F85\u5176\u4ED6\u7EBF\u7A0B\u91CA\u653E\u9501\uFF0C\u82E5\u81EA\u65CB\u4E00\u5B9A\u6B21\u6570\u540E\u4ECD\u672A\u83B7\u5F97\u9501\uFF0C\u5219\u5347\u7EA7\u4E3A<strong>\u91CD\u91CF\u7EA7\u9501</strong></li></ul><ol start="4"><li>\u6E90\u7801</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u4E0D\u5141\u8BB8\u4F7F\u7528\u504F\u5411\u9501 | \u83B7\u504F\u5411\u9501\u5931\u8D25\uFF0C\u8FDB\u5165\u8BE5\u65B9\u6CD5</span>
<span class="token keyword">void</span> ObjectSynchronizer<span class="token operator">::</span><span class="token function">slow_enter</span><span class="token punctuation">(</span>Handle obj<span class="token punctuation">,</span> BasicLock<span class="token operator">*</span> lock<span class="token punctuation">,</span> TRAPS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  markOop mark <span class="token operator">=</span> obj<span class="token operator">-&gt;</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6 \u5BF9\u8C61\u7684\u5BF9\u8C61\u5934</span>
  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token operator">!</span>mark<span class="token operator">-&gt;</span><span class="token function">has_bias_pattern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;should not see bias pattern here&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>mark<span class="token operator">-&gt;</span><span class="token function">is_neutral</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u672A\u88AB\u5176\u4ED6\u7EBF\u7A0B\u83B7\u53D6</span>
    <span class="token comment">// \u521B\u5EFA\u526F\u672C</span>
    lock<span class="token operator">-&gt;</span><span class="token function">set_displaced_header</span><span class="token punctuation">(</span>mark<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// CAS \u5C1D\u8BD5\u66F4\u65B0 \u9501\u5BF9\u8C61\u7684\u5BF9\u8C61\u5934</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mark <span class="token operator">==</span> <span class="token punctuation">(</span>markOop<span class="token punctuation">)</span> Atomic<span class="token operator">::</span><span class="token function">cmpxchg_ptr</span><span class="token punctuation">(</span>lock<span class="token punctuation">,</span> <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">mark_addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mark<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">TEVENT</span> <span class="token punctuation">(</span>slow_enter<span class="token operator">:</span> release stacklock<span class="token punctuation">)</span> <span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\uFF0C\u8FD4\u56DE</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Fall through to inflate() ...</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span>
  <span class="token comment">// \u5B58\u5728\u5E76\u53D1\u7ADE\u4E89</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mark<span class="token operator">-&gt;</span><span class="token function">has_locker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> THREAD<span class="token operator">-&gt;</span><span class="token function">is_lock_owned</span><span class="token punctuation">(</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>mark<span class="token operator">-&gt;</span><span class="token function">locker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>lock <span class="token operator">!=</span> mark<span class="token operator">-&gt;</span><span class="token function">locker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;must not re-lock the same lock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>lock <span class="token operator">!=</span> <span class="token punctuation">(</span>BasicLock<span class="token operator">*</span><span class="token punctuation">)</span>obj<span class="token operator">-&gt;</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;don&#39;t relock with same BasicLock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token operator">-&gt;</span><span class="token function">set_displaced_header</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">0</span></span></span>
  <span class="token comment">// \u91CD\u7F6E lock.set_displaced_header</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mark<span class="token operator">-&gt;</span><span class="token function">has_monitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mark<span class="token operator">-&gt;</span><span class="token function">monitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">is_entered</span><span class="token punctuation">(</span>THREAD<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lock<span class="token operator">-&gt;</span><span class="token function">set_displaced_header</span> <span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

  lock<span class="token operator">-&gt;</span><span class="token function">set_displaced_header</span><span class="token punctuation">(</span>markOopDesc<span class="token operator">::</span><span class="token function">unused_mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5347\u7EA7\u4E3A \u91CD\u91CF\u7EA7\u9501</span>
  ObjectSynchronizer<span class="token operator">::</span><span class="token function">inflate</span><span class="token punctuation">(</span>THREAD<span class="token punctuation">,</span> <span class="token function">obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">enter</span><span class="token punctuation">(</span>THREAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u81EA\u65CB</p></blockquote><ul><li>\u81EA\u65CB\u9501\uFF1A <ul><li>JDK 1.4.2 \u5F15\u5165\u81EA\u65CB\u9501\uFF0C\u9ED8\u8BA4\u5173\u95ED</li><li>JDK 1.6 \u81EA\u65CB\u9501\u9ED8\u8BA4\u5F00\u542F\uFF0C <code>-XX:+UseSpinning</code> \u5F00\u542F\uFF0C <code>+XX:PreBlockSpin = 10</code> [default = 10]</li><li>\u81EA\u9002\u5E94\u81EA\u65CB\u9501\uFF0C\u7531 <code>JVM</code> \u8FDB\u884C\u63A7\u5236\uFF0C\u53D6\u51B3\u4E8E\uFF1A <ul><li>\u5F53\u524D\u7EBF\u7A0B\u4E0A\u4E00\u6B21\u83B7\u5F97\u8BE5\u9501\u7684\u81EA\u65CB\u65F6\u95F4</li><li>\u5F53\u524D\u9501\u7684\u62E5\u6709\u8005\u72B6\u6001</li></ul></li></ul></li></ul><h3 id="_3-\u9501\u6D88\u9664" tabindex="-1"><a class="header-anchor" href="#_3-\u9501\u6D88\u9664" aria-hidden="true">#</a> 3) \u9501\u6D88\u9664</h3><ul><li>\u865A\u62DF\u673A\u5373\u65F6\u7F16\u8BD1\u5668\u5728\u8FD0\u884C\u65F6\u68C0\u6D4B\u5230\u67D0\u6BB5\u9700\u8981\u540C\u6B65\u7684\u4EE3\u7801\u4E0D\u53EF\u80FD\u5B58\u5728\u5171\u4EAB\u6570\u636E\u7ADE\u4E89\uFF0C\u56E0\u6B64\u5BF9\u9501\u8FDB\u884C\u6D88\u9664</li><li>\u4E3B\u8981\u5224\u5B9A\u4F9D\u636E\uFF1A<strong>\u9003\u9038\u5206\u6790</strong></li></ul><h3 id="_4-\u9501\u7C97\u5316" tabindex="-1"><a class="header-anchor" href="#_4-\u9501\u7C97\u5316" aria-hidden="true">#</a> 4) \u9501\u7C97\u5316</h3><ul><li>\u4E00\u7CFB\u5217\u7684\u8FDE\u7EED\u64CD\u4F5C\u90FD\u662F\u5BF9\u540C\u4E00\u5BF9\u8C61\u8FDB\u884C\u53CD\u590D\u52A0\u9501 &amp; \u89E3\u9501\u64CD\u4F5C\uFF0C\u6B64\u65F6\u53EF\u4EE5\u5C06\u52A0\u9501\u540C\u6B65\u7684\u8303\u56F4\u6269\u5C55</li></ul><hr><h2 id="_4-\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-\u7279\u70B9" aria-hidden="true">#</a> 4. \u7279\u70B9</h2><h3 id="_1-\u6709\u5E8F\u6027" tabindex="-1"><a class="header-anchor" href="#_1-\u6709\u5E8F\u6027" aria-hidden="true">#</a> 1) \u6709\u5E8F\u6027</h3><ul><li>\u4FDD\u8BC1\u591A\u7EBF\u7A0B\u4EFB\u610F\u65F6\u523B\u53EA\u80FD\u6709\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u53D6\u9501\u5BF9\u8C61\uFF0C\u76F8\u5F53\u4E8E\u5355\u7EBF\u7A0B\u6267\u884C\uFF0C\u800C\u7531\u4E8E\u5355\u7EBF\u7A0B\u7684 as-if-serial \u539F\u5219\uFF0C\u4FDD\u8BC1\u4E86\u6709\u5E8F\u6027</li></ul><h3 id="_2-\u53EF\u89C1\u6027" tabindex="-1"><a class="header-anchor" href="#_2-\u53EF\u89C1\u6027" aria-hidden="true">#</a> 2) \u53EF\u89C1\u6027</h3><ul><li>\u52A0\u9501\u4E4B\u524D\u5C06\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\u503C\u5931\u6548\uFF0C\u4ECE\u4E3B\u5B58\u4E2D\u8BFB\u53D6\uFF0C\u91CA\u653E\u9501\u4E4B\u524D\uFF0C\u5C06\u5DE5\u4F5C\u5185\u5B58\u7684\u53D8\u91CF\u5237\u56DE\u4E3B\u5B58\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u4E86\u53EF\u89C1\u6027</li></ul><h3 id="_3-\u539F\u5B50\u6027" tabindex="-1"><a class="header-anchor" href="#_3-\u539F\u5B50\u6027" aria-hidden="true">#</a> 3) \u539F\u5B50\u6027</h3><ul><li>\u540C\u4E00\u65F6\u523B\u5355\u7EBF\u7A0B\u6267\u884C\u4FDD\u8BC1\u539F\u5B50\u6027</li></ul><h3 id="_4-\u53EF\u91CD\u5165\u6027" tabindex="-1"><a class="header-anchor" href="#_4-\u53EF\u91CD\u5165\u6027" aria-hidden="true">#</a> 4) \u53EF\u91CD\u5165\u6027</h3><ul><li>\u4E3A\u53EF\u91CD\u5165\u9501\uFF0C\u6709\u6548\u907F\u514D\u6B7B\u9501\u7684\u60C5\u51B5\uFF0C\u53EF\u540C\u4E00\u7EBF\u7A0B\u591A\u6B21\u83B7\u5F97\u540C\u4E00\u4E2A\u5BF9\u8C61\u9501</li></ul><h3 id="_5-\u72EC\u5360\u6027" tabindex="-1"><a class="header-anchor" href="#_5-\u72EC\u5360\u6027" aria-hidden="true">#</a> 5) \u72EC\u5360\u6027</h3><ul><li>\u4E3A\u72EC\u5360\u9501\uFF0C\u4EFB\u610F\u65F6\u523B\u6700\u591A\u4E00\u4E2A\u7EBF\u7A0B\u5360\u7528</li></ul><h3 id="_6-\u4E0D\u53EF\u4E2D\u65AD\u6027" tabindex="-1"><a class="header-anchor" href="#_6-\u4E0D\u53EF\u4E2D\u65AD\u6027" aria-hidden="true">#</a> 6) \u4E0D\u53EF\u4E2D\u65AD\u6027</h3><ul><li>\u4E00\u4E2A\u7EBF\u7A0B\u83B7\u53D6\u5230\u9501\u5BF9\u8C61\u540E\uFF0C\u5176\u4F59\u60F3\u8981\u83B7\u53D6\u8BE5\u9501\u7684\u7EBF\u7A0B\u53EA\u80FD\u8FDB\u5165\u7B49\u5F85 / \u963B\u585E\u72B6\u6001\uFF0C\u4E0D\u53EF\u88AB\u4E2D\u65AD</li></ul><h3 id="_7-\u975E\u516C\u5E73\u9501" tabindex="-1"><a class="header-anchor" href="#_7-\u975E\u516C\u5E73\u9501" aria-hidden="true">#</a> 7) \u975E\u516C\u5E73\u9501</h3><ul><li>\u5F53\u9501\u88AB\u67D0\u4E2A\u7EBF\u7A0B\u91CA\u653E\uFF0C\u5176\u4F59\u7EBF\u7A0B\u53EF\u4EE5\u83B7\u53D6\u9501\u65F6\uFF0C\u5176\u4F59\u7EBF\u7A0B\u5171\u540C\u7ADE\u4E89\uFF0C\u800C\u4E0D\u662F\u6309\u7167\u5148\u540E\u987A\u5E8F\u83B7\u53D6</li></ul><h3 id="_8-\u81EA\u52A8\u91CA\u653E\u9501" tabindex="-1"><a class="header-anchor" href="#_8-\u81EA\u52A8\u91CA\u653E\u9501" aria-hidden="true">#</a> 8) \u81EA\u52A8\u91CA\u653E\u9501</h3><ul><li>\u5F53\u7EBF\u7A0B\u4E0D\u9700\u8981\u9501\u5BF9\u8C61\u65F6\uFF0C\u81EA\u52A8\u91CA\u653E\uFF0C\u65E0\u9700\u624B\u52A8\u91CA\u653E</li></ul>`,34);function S(E,j){const p=e("ExternalLinkIcon"),o=e("Mermaid");return i(),l("div",null,[k,n("ul",null,[d,n("li",null,[n("a",v,[m,a(p)])])]),b,a(o,{id:"mermaid-64a56f6c",code:"flowchart%20TB%0A%20%20%20%20%E6%97%A0%E9%94%81%20--%3E%20%E5%81%8F%E5%90%91%E9%94%81%0A%20%20%20%20%E5%81%8F%E5%90%91%E9%94%81%20--%3E%20%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81%0A%20%20%20%20%E6%97%A0%E9%94%81%20--%3E%20%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81%0A%20%20%20%20%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81%20--%3E%20%E9%87%8D%E9%87%8F%E7%BA%A7%E9%94%81%0A"}),h,n("ol",_,[n("li",null,[f,n("a",g,[y,a(p)])])]),w])}var A=c(r,[["render",S],["__file","synchronized.html.vue"]]);export{A as default};
