import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.5aebcaaa.js";var t="/assets/img_25.c26976a1.png",p="/assets/img_24.6860212d.png",o="/assets/img_26.787bbf87.png";const c={},l=e('<h1 id="_201-\u6570\u5B57\u8303\u56F4\u6309\u4F4D\u4E0E" tabindex="-1"><a class="header-anchor" href="#_201-\u6570\u5B57\u8303\u56F4\u6309\u4F4D\u4E0E" aria-hidden="true">#</a> \u{1F315} \u{1F317} 201. \u6570\u5B57\u8303\u56F4\u6309\u4F4D\u4E0E</h1><p>\u96BE\u5EA6: \u{1F315} \u{1F317}</p><h3 id="\u95EE\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u95EE\u9898\u63CF\u8FF0</h3><p><img src="'+t+`" alt="img_25.png"></p><hr><h3 id="\u89E3\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-1" aria-hidden="true">#</a> \u89E3\u6CD5 1</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rangeBitwiseAnd</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u56E0\u4E3A\u662F\u6240\u6709\u5143\u7D20\u6309\u4F4D\u76F8\u4E0E\uFF0C\u90A3\u4E48\u8981\u4F7F\u67D0\u4E00\u4F4D == 1\uFF0C\u9700\u4FDD\u8BC1\u8BE5\u4F4D\u6240\u6709\u5143\u7D20\u5747 == 1</span>
        <span class="token comment">// \u53EF\u4EE5\u770B\u51FA\u516C\u5F0F\uFF0C\u5047\u8BBE\u67D0\u503C left : \u4E8C\u8FDB\u5236\u5F62\u5F0F\u4E3A abcd 1efg \u6B64\u65F6\u5C31\u8003\u8651 e \u524D\u9762\u7684\u90A3\u4E2A 1</span>
        <span class="token comment">// \u6240\u5728\u4F4D\u6570\u4E3A 2^3\uFF0C\u4ECE\u53F3\u5F80\u5DE6\u4E3A\u4F4E\u4F4D\u5230\u9AD8\u4F4D</span>
        <span class="token comment">// \u8981\u4FDD\u8BC1 [left, right] \u8BE5\u4F4D\u5168 == 1\uFF0C\u5219 \u8BE5\u4F4D\u6709 2^3 \u80FD\u51FA\u73B0 1</span>
        <span class="token comment">// \u800C left \u4E0D\u4E00\u5B9A\u662F\u51FA\u73B0 1 \u7684\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u9700\u8981\u53BB\u9664 left \u5DE6\u8FB9\u7684\u67D0\u4E9B\u4E2A\u51FA\u73B0 1 \u7684\u4E2A\u6570</span>
        <span class="token comment">// \u2234 left \u5728\u5185\uFF0C\u5F80\u5927\u4E86\u6570\uFF0C\u6700\u591A\u6709 [2^ 3 - (left - 2^3)] = (2^4 - left &amp; (2^4 - 1)) \u4E2A 1</span>
        <span class="token comment">// \u2234 \u6700\u5927\u53F3\u8FB9\u754C end - left + 1 = 2^4 - left &amp; (2^4 - 1)</span>
        <span class="token comment">// \u6574\u7406\u5F97\uFF0Cend = 2^4 - 1 + left =&gt; \u5373 left \u6240\u5728 1 \u7684\u4F4D\u5DE6\u79FB\u4E00\u4F4D\u5F97\u5230\u7684\u503C - 1</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u4EFB\u4F55\u4F4D &amp; 0 == 0</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// System.out.println(cur);</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">&amp;</span> cur<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5224\u65AD\u8BE5\u4F4D\u76F4\u5230right \u80FD\u5426\u4FDD\u7559\uFF0C\u5373\u6C42 \u6700\u5927\u80FD\u5230\u8FBE\u7684\u53F3\u8FB9\u754C end</span>
                <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token punctuation">(</span>cur <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>left <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cur <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> left<span class="token punctuation">;</span>
                <span class="token comment">// System.out.println(cur + &quot;  &quot; + end);</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u80FD\u591F\u4FDD\u7559</span>
                    res <span class="token operator">=</span> res <span class="token operator">|</span> cur<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA-1" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA-1" aria-hidden="true">#</a> \u8F93\u51FA 1</h3><p><img src="`+p+`" alt="img_24.png"></p><hr><h3 id="\u89E3\u6CD5-2-\u53E6\u4E00\u79CD\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6CD5-2-\u53E6\u4E00\u79CD\u65B9\u6CD5" aria-hidden="true">#</a> \u89E3\u6CD5 2 - \u53E6\u4E00\u79CD\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">rangeBitwiseAnd</span><span class="token punctuation">(</span><span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u601D\u8DEF\uFF1A</span>
        <span class="token comment">// \u627E left &amp; right \u7684\u6700\u957F\u516C\u5171\u524D\u7F00\uFF0C\u4E00\u76F4\u53F3\u79FB\uFF0C\u76F4\u5230 \u4E24\u6570\u76F8\u7B49</span>
        <span class="token keyword">int</span> exp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">!=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            right <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            exp <span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8FD9\u6837\u5C31\u4FDD\u8BC1\u4E86\u4F4E\u4F4D\u4E0D\u76F8\u7B49\u7684\u4F4D\u5168\u90E8\u5C4F\u853D</span>
        <span class="token keyword">return</span> left <span class="token operator">&lt;&lt;</span> exp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u8F93\u51FA" aria-hidden="true">#</a> \u8F93\u51FA</h3><p><img src="`+o+'" alt="img_26.png"></p>',16),i=[l];function r(u,d){return s(),a("div",null,i)}var v=n(c,[["render",r],["__file","201.html.vue"]]);export{v as default};
